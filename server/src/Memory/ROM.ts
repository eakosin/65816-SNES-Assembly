export var ROM = [{"address":"$008000","length":"39 bytes. Ends at $008026.","beginsAt":32768,"endsAt":32806,"type":"ASM","descriptio":"This is the starting address of SMW. This takes care of basic initialization such as disabling IRQ, HDMA, DMA, clearing the SPC ports, enabling F-blank, disabling emulation mode, disabling decimal mode, initializing the direct page, and setting up the stack."},{"address":"$008027","length":"43 bytes. Ends at $008051.","beginsAt":32807,"endsAt":32849,"type":"ASM","descriptio":"This is code is responsible for uploading the OAM clear routine to $7F8000. The uploaded routine is essentially an unrolled loop which stores #$F0 to all of the OAM mirror($0200) Y positions."},{"address":"$008052","length":"25 bytes. Ends at $00806A.","beginsAt":32850,"endsAt":32874,"type":"ASM","descriptio":"This is the main part of the SMW initialization routine. SPC engine upload, sample upload, OAM setup, windowing setup, and RAM clearing all happens here."},{"address":"$00806B","length":"14 bytes. Ends at $008078.","beginsAt":32875,"endsAt":32888,"type":"ASM","descriptio":"This is the main game loop of SMW. It is used to wait for V-blank to complete before executing the code of the next frame. One of the frame counters ($13) is also incremented here."},{"address":"$00810E","length":"15 bytes. Ends at $00811C.","beginsAt":33038,"endsAt":33052,"type":"Subroutine (JSR)","descriptio":"OW Music uploader."},{"address":"$008134","length":"37 bytes. Ends at $008158.","beginsAt":33076,"endsAt":33112,"type":"Subroutine (JSR)","descriptio":"Uploads level music bank."},{"address":"$008159","length":"17 bytes. Ends at $008169.","beginsAt":33113,"endsAt":33129,"type":"Subroutine (JSR)","descriptio":"Credit music uploader."},{"address":"$008179","length":"49 bytes. Ends at $0081A9.","beginsAt":33145,"endsAt":33193,"type":"ASM","descriptio":"Handles transfers to and from the SPC700 (I/O). Changing all values to [EA] (NOP) or jumping over the code effectively mutes all sound."},{"address":"$008293","length":"1 byte","beginsAt":33427,"endsAt":33427,"type":"Misc.","descriptio":"How many scanlines the status bar uses during a regular level."},{"address":"$00835D","length":"1 byte","beginsAt":33629,"endsAt":33629,"type":"Layer 3","descriptio":"How many scanlines the status bar uses during the battles with Bowser, Ludwig, and Reznor."},{"address":"$008370","length":"1 byte","beginsAt":33648,"endsAt":33648,"type":"Layer 3","descriptio":"How many scanlines the status bar and ceiling use during the battles with Morton and Roy."},{"address":"$0084C8","length":"8 bytes. Ends at $0084CF.","beginsAt":33992,"endsAt":33999,"type":"Subroutine (JSL)","descriptio":"Wrapper for the stripe image uploader (pointer lies in $12). Because it upload tiles, it must run in either f- or v-blank (e.g. in NMI)."},{"address":"$0084D0","length":"258 bytes. Ends at $0085D1.","beginsAt":34000,"endsAt":34257,"type":"Stripe Image","descriptio":"Stripe image pointer table. Each 24-bit pointer here corresponds to a value of $12, but only multiples of 3 are used. (The first pointer is for value 00, the second is for value 03, the third for 06, etc.)"},{"address":"$0085FA","length":"86 bytes. Ends at $00864F.","beginsAt":34298,"endsAt":34383,"type":"Subroutine (JSR)","descriptio":"Fills the entire layer 3 tilemap with tile 0x0FC (transparent tile) i.e. the code \"empties\" it. Also wipes the OAM before returning."},{"address":"$008650","length":"119 bytes. Ends at $0086C6.","beginsAt":34384,"endsAt":34502,"type":"Subroutine (JSR)","descriptio":"This is the routine that polls the controller and updates $15, $16, $17, $18.\n$0086A0 (x8A0) - Change to [9C A0 0D AD A0 0D A2 00] to cause both player 1 & 2 to be controlled by controller 1."},{"address":"$0086DF","length":"27 bytes. Ends at $0086F9.","beginsAt":34527,"endsAt":34553,"type":"Subroutine (JSL)","descriptio":"Pointer subroutine: Jump to a 2-byte pointer, the position of the pointer used is \"Position after the JSL + 1 + (A*2)\". The subroutine should always be accessed by a JSL."},{"address":"$0086FA","length":"36 bytes. Ends at $00871D.","beginsAt":34554,"endsAt":34589,"type":"Subroutine (JSL)","descriptio":"Pointer subroutine: Jump to a 3-byte pointer, the position of the pointer used is \"Position after the JSL + 1 + (A*3)\". The subroutine should always be accessed by a JSL."},{"address":"$00871E","length":"143 bytes. Ends at $0087AC.","beginsAt":34590,"endsAt":34732,"type":"Stripe Image","descriptio":"Stripe Image Uploader. Uses $00-$02 as a 24-bit pointer to tile data. See this thread how the stripe image format works. Must be run during a blank, usually NMI.\n\nTo call from a custom routine, do this:\n- Store stripe image pointer (24-bit) to $00-$02\n- Push 24-bit return address (bank -> mid -> lo)\n- PHB : LDA #$00 : PHA : PLB\n- PEA $84CD\n- JSL $00871E"},{"address":"$0087AD","length":"617 bytes. Ends at $008A15.","beginsAt":34733,"endsAt":35349,"type":"Subroutine (JSL)","descriptio":"This routine is the DMA routine in charge of updating layers one and two as needed. This is controlled by the addresses $1BE4 and $1CE6 when they are a non-zero value."},{"address":"$008A4E","length":"43 bytes. Ends at $008A78.","beginsAt":35406,"endsAt":35448,"type":"Subroutine (JSR)","descriptio":"Clear RAM subroutine. This is part of the reset routine."},{"address":"$008A79","length":"59 bytes. Ends at $008AB3.","beginsAt":35449,"endsAt":35507,"type":"ASM","descriptio":"The routine that sets up certain VRAM-related registers in normal levels.\n- $008A80: Default value for $2107 [23].\n- $008A85: Default value for $2108 [33].\n- $008A8A: Default value for $2109 [53].\n- $008A8F: Default value for $210B [00].\n- $008A94: Default value for $210C [04].\n- $008AAB: Default value for $2130 [02], although it's actually stored to the mirror here (i.e. $44).\n$210A is never set, since it is only ever used in Mode 0."},{"address":"$008C59","length":"40 bytes. Ends at $008C80.","beginsAt":35929,"endsAt":35968,"type":"Layer 3","descriptio":"Tile array for numbers in bonus star counter."},{"address":"$008C81","length":"126 bytes. Ends at $008CFE.","beginsAt":35969,"endsAt":36094,"type":"Layer 3","descriptio":"Default status bar tiles. Format for each 8x8 tile:\nTTTTTTTT YXPCCCTT\n\n*$008C81-$008C88: top line of status bar (4 top tiles of the item box)\n*$008C89-$008CC0: Second line of status bar\n*$008CC1-$008CF6: Third line of status bar\n*$008CF7-$008CFE: bottom line of status bar (4 bottom tiles of item box)"},{"address":"$008D8B","length":"1 byte","beginsAt":36235,"endsAt":36235,"type":"Timer","descriptio":"Timer speed (USE WITH $008E2E)"},{"address":"$008D90","length":"28 bytes. Ends at $008DAB.","beginsAt":36240,"endsAt":36267,"type":"Misc.","descriptio":"These four tables indicate the DMA settings and the source address to use for the status bar tiles (the ones that are uploaded at the very beginning of the level). The tables get stored in the order of $43x0-$43x6."},{"address":"$008DAC","length":"59 bytes. Ends at $008DE6.","beginsAt":36268,"endsAt":36326,"type":"Layer 3","descriptio":"The routine that draws the status bar onto the screen. It uses DMA to write the Layer 3 tiles to VRAM."},{"address":"$008DF5","length":"5 bytes. Ends at $008DF9.","beginsAt":36341,"endsAt":36345,"type":"Layer 3","descriptio":"The tiles that make up Luigi's name in the status bar."},{"address":"$008DFA","length":"4 bytes. Ends at $008DFD.","beginsAt":36346,"endsAt":36349,"type":"Sprite tilemap related","descriptio":"Tilemap of reserve item. First byte is mushroom, second is flower, third is star, fourth is feather."},{"address":"$008DFE","length":"4 bytes. Ends at $008E01.","beginsAt":36350,"endsAt":36353,"type":"Sprite tilemap related","descriptio":"YXPPCCCT of stars in the item box. It cycles between the four entries every second frame."},{"address":"$008E02","length":"4 bytes. Ends at $008E05.","beginsAt":36354,"endsAt":36357,"type":"Sprite tilemap related","descriptio":"YXPPCCCT data for reserve item. First byte is mushroom, second is flower, third is bypassed ($008DFF), fourth is feather."},{"address":"$008E06","length":"20 bytes. Ends at $008E19.","beginsAt":36358,"endsAt":36377,"type":"Layer 3","descriptio":"Bonus star counter tilemap - 2 bytes for each number. Every first byte is for the upper tile, every second byte for the bottom tile."},{"address":"$008E1A","length":"480 bytes. Ends at $008FF9.","beginsAt":36378,"endsAt":36857,"type":"Layer 3","descriptio":"The routine that updates the values of all the addresses used for the status bar ($0EF9-$0F2F).\n$008E28 - Change this address to AD to disable the timer.\n$008E2E - Timer speed (USE WITH $008D8B)\n$008E5C - Time is Running Out SFX. Change from FF to 00 to stop the music from speeding up when time reaches 99.\n$008E6B - [22 06 F6 00] Change to [EA EA EA EA] to not kill Mario when the timer reaches zero. The timer will count down normally and stop at zero, but Mario will not die\n$008EDB - Change this and/or $008F09 from 20 12 90 to EA EA EA to disable writing the score to the status bar when playing as Mario and/or Luigi, respectively. Useful if you want to place another counter in place of the score using Smallhacker's Status Bar Editor.\n$008F2C - How many coins you need to get an 1up (USE WITH $008F37)\n$008F2F - [EE E4 18] Change to [EA EA EA] to not gain a life after collecting enough for one.\n$008F37 - Number of coins to subtract from the counter when you gain enough for a 1up (Default: $64 (100). Change to [01] to create a coin wallet effect - use with $008F2F.\n$008F41 - (Use with $008F45) Maximum life limit, minus one. Warning: Changing this to anything higher than 0x7E (127 lives) will remove the life limit entirely! Also, if you have more than\n99 lives, the life counter will appear slightly glitched.\n$008F45 - (Use with $008F41) Maximum life limit, minus one. Note that if you have more than 99 lives, the life counter will appear slightly glitched.\n$008F62 - Number of bonus stars required to enter bonus game\n$008F67 - [8D 25 14] Change to EA EA EA to disable entering bonus game when player has 100 bonus stars.\n$008F6F - Amount of bonus stars that will be subtracted when 100 bonus stars are collected. Change to [01] to make 99 the maximum amount of bonus stars you can get - to create a bonus star wallet effect, use with $008F67.\n$008F7E - Writes coins to status bar. Changing to [EA EA EA EA EA EA] will disable the coins from being written to the status bar.\n$008F95 - [09] The X position of the small bonus star counter in the status bar.\n$008FC5 - [20 79 90] Change to EA EA EA to disable the item GFX in the status bar\n$008FCE - Length of \"LUIGI\" text (Status bar)\n$008FE7 - [FC](blank tile) Tile used on the status bar when there's no Yoshi coin in that spot.\n$008FED - [2E](coin tile) Tile used on the status bar when there is a Yoshi coin in that spot. Change to [FC](blank tile) to visually disable collected Yoshi Coins."},{"address":"$008F1D","length":"30 bytes. Ends at $008F3A.","beginsAt":36637,"endsAt":36666,"type":"Misc.","descriptio":"Routine that handles actually increasing the player's coin count and giving a life from 100 coins, controlled by RAM address $7E13CC."},{"address":"$008FDC","length":"1 byte","beginsAt":36828,"endsAt":36828,"type":"Layer 3","descriptio":"[05] If the player has collected at least this number of Dragon Coins, the status bar will display $008FE0 Dragon Coins instead (none by default)."},{"address":"$008FE0","length":"1 byte","beginsAt":36832,"endsAt":36832,"type":"Layer 3","descriptio":"[00] Number of Dragon Coins to display in the status bar, if the player has collected at least 5."},{"address":"$008FF0","length":"2 bytes. Ends at $008FF1.","beginsAt":36848,"endsAt":36849,"type":"Layer 3","descriptio":"Location of the first Dragon Coin tile in the status bar. See this diagram for possible values."},{"address":"$009012","length":"51 bytes. Ends at $009044.","beginsAt":36882,"endsAt":36932,"type":"Subroutine (JSR)","descriptio":"Subroutine to write a player's score into status bar.\nCall with Y = #$00, X as the position to write to on the status bar (standard is #$14), and $00-$03 as the score to write (in hexadecimal). Note that this routine does not remove leading 0s; that is handled at $008EDE and $008F0C."},{"address":"$009045","length":"12 bytes. Ends at $009050.","beginsAt":36933,"endsAt":36944,"type":"Subroutine (JSR)","descriptio":"Hexadecimal to Decimal conversion subroutine.\n\"A\" now has decimal 1s digit of original \"A\".\n\"X\" now has decimal 10s and possibly 100s digit of original \"A\".\n(Note: It ends with an RTS. You can JSL to $00974C if you want, though.)"},{"address":"$009053","length":"3 bytes. Ends at $009055.","beginsAt":36947,"endsAt":36949,"type":"Layer 3","descriptio":"Change to EAEAEA to get rid of the small bonus stars. Use in conjunction with address $00:9068"},{"address":"$009068","length":"3 bytes. Ends at $00906A.","beginsAt":36968,"endsAt":36970,"type":"Layer 3","descriptio":"Change to EAEAEA to get rid of the small bonus stars. Use in conjunction with address $00:9053"},{"address":"$009079","length":"88 bytes. Ends at $0090D0.","beginsAt":36985,"endsAt":37072,"type":"Layer 3","descriptio":"Subroutine that draws the power up item to the item box on the status bar during levels.\n$0090AE is the X position of the Item Box item.\n$0090B3 is the Y position of the Item Box item.\nNote: Those two positions are only graphical. It won't change where the item drops from when select is pressed."},{"address":"$0090D1","length":"104 bytes. Ends at $009138.","beginsAt":37073,"endsAt":37176,"type":"Sprite tilemap related","descriptio":"Tile numbers for 'MARIO START' and various similar messages.\n$0090EE is for the top half of Time Up.\n$009122 is for the bottom half of Time Up.\n"},{"address":"$009139","length":"98 bytes. Ends at $00919A.","beginsAt":37177,"endsAt":37274,"type":"Sprite tilemap related","descriptio":"YXPPCCCT properties for 'MARIO START' and various similar messages.\nChange $00913F from 30 to 34 and $009170 from F0 to F4 to fix the S in \"Mario/Luigi Start\".\n$009156 is for the top half of 'TIME UP\"."},{"address":"$0091AC","length":"1 byte","beginsAt":37292,"endsAt":37292,"type":"Misc.","descriptio":"Number of coins needed to get an 1up from the green star block."},{"address":"$0091DB","length":"1 byte","beginsAt":37339,"endsAt":37339,"type":"ASM","descriptio":"Change it to D0 to switch the \"Mario/Luigi Start\""},{"address":"$0092AE","length":"2 bytes. Ends at $0092AF.","beginsAt":37550,"endsAt":37551,"type":"Misc.","descriptio":"The scanline × 2 of the solid lava colour in the Iggy/Larry boss battle.\n\nChange it to $A8,$01 (dw $01A8) to have it begin just where the sprite lava tiles end."},{"address":"$009329","length":"84 bytes. Ends at $00937C.","beginsAt":37673,"endsAt":37756,"type":"Pointer","descriptio":"16-bit game mode pointers. Indexed by $7E:0100."},{"address":"$009389","length":"4 bytes. Ends at $00938C.","beginsAt":37769,"endsAt":37772,"type":"Coordinate","descriptio":"X position of the \"Nintendo Presents\" tiles"},{"address":"$00938D","length":"4 bytes. Ends at $009390.","beginsAt":37773,"endsAt":37776,"type":"Sprite tilemap related","descriptio":"\"Nintendo Presents\" logo tilemap"},{"address":"$0093A5","length":"1 byte","beginsAt":37797,"endsAt":37797,"type":"Coordinate","descriptio":"Y position of \"Nintendo Presents\" logo"},{"address":"$0093B0","length":"1 byte","beginsAt":37808,"endsAt":37808,"type":"Sprite tilemap related","descriptio":"YXPPCCCT properties for \"Nintendo Presents\"."},{"address":"$0093C1","length":"1 byte","beginsAt":37825,"endsAt":37825,"type":"Sound effect","descriptio":"\"Nintendo Presents\" logo sound effect"},{"address":"$0093C6","length":"1 byte","beginsAt":37830,"endsAt":37830,"type":"Timer","descriptio":"How long \"Nintendo Presents\" stays on the screen before disappearing."},{"address":"$0093CB","length":"1 byte","beginsAt":37835,"endsAt":37835,"type":"Misc.","descriptio":"Blinking Nintendo Presents (0F = 0 time, 1F = 1 time, 2F = 2 times, etc)\nAlso known as Nintendo Presents Brightness (Values use Brightness Register ($0DAE))"},{"address":"$009436","length":"3 bytes. Ends at $009438.","beginsAt":37942,"endsAt":37944,"type":"Misc.","descriptio":"Change from [AD 33 14] to [4C 17 94] to disable the circle fade in from Title screen. Use in conjunction with address $009AAD."},{"address":"$00943B","length":"1 byte","beginsAt":37947,"endsAt":37947,"type":"Misc.","descriptio":"How fast the circle right before the titlescreen opens. Default value is 04. The higher the value, the faster it opens. Don't go beyond #$19."},{"address":"$009451","length":"7 bytes. Ends at $009457.","beginsAt":37969,"endsAt":37975,"type":"Palette","descriptio":"Back area colours to use for each castle destruction scene (One byte per movie)"},{"address":"$009459","length":"7 bytes. Ends at $00945F.","beginsAt":37977,"endsAt":37983,"type":"Palette","descriptio":"Palette row (in the range 00-07) used by the castle in each castle destruction scene. 1 byte per scene."},{"address":"$009461","length":"7 bytes. Ends at $009467.","beginsAt":37985,"endsAt":37991,"type":"Stripe Image","descriptio":"Stripe image (index to pointers at $0084D0) to load as the background for each castle destruction scene."},{"address":"$0094A1","length":"1 byte","beginsAt":38049,"endsAt":38049,"type":"Music","descriptio":"Music Bank that is used for the ending music.\n0E = Overworld Music\n48 = Level Music\n59 = Ending Music"},{"address":"$0094B3","length":"1 byte","beginsAt":38067,"endsAt":38067,"type":"Music","descriptio":"Boss castle destruction sequence music #1"},{"address":"$00950B","length":"1 byte","beginsAt":38155,"endsAt":38155,"type":"Debug","descriptio":"DEBUG: Boss defeated scene select (30 = enable)"},{"address":"$00955F","length":"1 byte","beginsAt":38239,"endsAt":38239,"type":"Misc.","descriptio":"GFX File loaded for Credits font"},{"address":"$009586","length":"4 bytes. Ends at $009589.","beginsAt":38278,"endsAt":38281,"type":"Level number","descriptio":"Which level to use for the Yoshi's House part in the credits. 'A9 28 A0 01'. Do not change A9 and A0. 28 is the low byte of the level (Note: Level number + 24), 01 is the high byte."},{"address":"$00968E","length":"32 bytes. Ends at $0096AD.","beginsAt":38542,"endsAt":38573,"type":"ASM","descriptio":"This is the beginning of the code that is executed for game mode 10 (the black period between fadeout from the OW and Mario Start).\n$0096A5 is which Layer 1 tile on the overworld will prevent the \"Mario Start!\" from appearing if the player is on it. (Default is $56, the Yoshi's House tile.)\nChange $0096A6 to EA EA to make MARIO START! appear on the Yoshi's house OW tile number, or to 80 03 to make the MARIO START! never appear."},{"address":"$0096AE","length":"158 bytes. Ends at $00974B.","beginsAt":38574,"endsAt":38731,"type":"ASM","descriptio":"This is the code that is executed by game mode 03 (Load title). Game mode 11 (Mario Start) also uses parts of this code. The shared parts starts at $0096D5.\n$0096C4 is music Bank Used for the Title Screen. 0E = Overworld Music, 48 = Level Music, 59 = Ending Music.\n$0096C7 is the title screen (level C7) music.\n$0096CC is the title screen level number+$24.\n$009724 is the intro screen (level C5) music.\nChanging $009725 to \"9C FB 1D\" will allow you to change the music for the intro via Lunar Magic.\n$009737 is the Bowser scene 1 music."},{"address":"$00974C","length":"4 bytes. Ends at $00974F.","beginsAt":38732,"endsAt":38735,"type":"Subroutine (JSL)","descriptio":"Calls the hex->dec subroutine and ends in an RTL."},{"address":"$00980F","length":"2 bytes. Ends at $009810.","beginsAt":38927,"endsAt":38928,"type":"Coordinate","descriptio":"16-bit X position of Mario when he starts at the Iggy / Larry room. First byte = X lo, second byte = X hi (this byte is not recommended to change)."},{"address":"$009A16","length":"1 byte","beginsAt":39446,"endsAt":39446,"type":"Coordinate","descriptio":"Y lo position of Mario at the start of the Morton/Ludwig/Roy battle."},{"address":"$009A1F","length":"47 bytes. Ends at $009A4D.","beginsAt":39455,"endsAt":39501,"type":"Subroutine (JSR)","descriptio":"Writes the Map16 data for Ludwig/Morton/Roy's boss battle room.\n$009A40 is what tile the lava tiles in the Morton/Ludwig/Roy battles act like (by default: 05). Only Map16 page 00 is usable."},{"address":"$009AAD","length":"3 bytes. Ends at $009AAF.","beginsAt":39597,"endsAt":39599,"type":"Misc.","descriptio":"Change from [A9 33 85] to [4C C0 9A] to disable the circle fade in from Title screen. Use in conjunction with address $009436."},{"address":"$009AB2","length":"1 byte","beginsAt":39602,"endsAt":39602,"type":"Misc.","descriptio":"Change to [03] to make all layers appear at the same time during titlescreen load."},{"address":"$009ACB","length":"76 bytes. Ends at $009B16.","beginsAt":39627,"endsAt":39702,"type":"Subroutine (JSR)","descriptio":"The cursor routine used in file selection, player selection, and erase file.\n$009AD3 - If you change this to EA EA EA, the cursor arrow will never be shown in front of the game-start menus. (It will still act as though it were there, though.)\n$009AE4 - SFX that comes up when you select a game at the title screen.\n$009AFA - SFX played when you change an option at the title screen and overworld menus."},{"address":"$009B1D","length":"2 bytes. Ends at $009B1E.","beginsAt":39709,"endsAt":39710,"type":"Palette","descriptio":"BG Palette for the File Erase screen. Original value is $39C9."},{"address":"$009BBC","length":"1 byte","beginsAt":39868,"endsAt":39868,"type":"Sound effect","descriptio":"SFX for saving the game."},{"address":"$009BC9","length":"74 bytes. Ends at $009C12.","beginsAt":39881,"endsAt":39954,"type":"Subroutine (JSL)","descriptio":"Save Game function. (Load Game starts around $009CEF. Last byte used in SRAM seems to be $70:0358.)\nThe save routine is documented in depth here."},{"address":"$009C1F","length":"69 bytes. Ends at $009C63.","beginsAt":39967,"endsAt":40035,"type":"Controller","descriptio":"Mario's movement data on Title Screen.\nFormat: xx yy xx yy xx yy [...] $FF\nThe XXs is the value to store to $15, except that the Select flag (#$20) is instead used to tell if the XY flag (#$40) should be masked away from $16 (if it's set, that bit is stored to $16 unchanged; if clear, that bit is masked away. All other bits are stored to $16.)\nThe YYs is how long to keep that value there. Setting an XX to $FF ends it."},{"address":"$009C6A","length":"1 byte","beginsAt":40042,"endsAt":40042,"type":"ASM","descriptio":"Change to 80 to open save game menu without pressing a button or Title Screen Playing."},{"address":"$009C82","length":"3 bytes. Ends at $009C84.","beginsAt":40066,"endsAt":40068,"type":"ASM","descriptio":"Change to [EA A9 00] to remove title screen movement. Title screen will not loop."},{"address":"$009C87","length":"1 byte","beginsAt":40071,"endsAt":40071,"type":"ASM","descriptio":"Change D0 (BNE) to 80 (BRA) to never make the titlescreen loop."},{"address":"$009C9F","length":"4 bytes. Ends at $009CA2.","beginsAt":40095,"endsAt":40098,"type":"ASM","descriptio":"Change from 22 00 80 7F to EA EA EA EA to disable sprites from disappearing on the title screen when pressing a button (opening file select menu)"},{"address":"$009CA9","length":"1 byte","beginsAt":40105,"endsAt":40105,"type":"Misc.","descriptio":"Display following layers: ---o4321. o = sprite layer, 4 = layer 4 (unused), 3 = layer 3 (no effect however), 2 = layer 2, 1 = layer 1. Clear the corresponding bits for these layers to not make them display on file select screen load."},{"address":"$009CAD","length":"3 bytes. Ends at $009CAF.","beginsAt":40109,"endsAt":40111,"type":"ASM","descriptio":"Change '9C 9F 0D' to 'EA EA EA', and, if you happened to have a HDMA effect in the titlescreen, it will not be disabled when you go to the File Menu."},{"address":"$009CB1","length":"1 byte","beginsAt":40113,"endsAt":40113,"type":"Level number","descriptio":"Determines the low byte of the intro level number. Subtract 0x24 for the actual low byte (by default, E9-24=C5, meaning level C5, or possibly 1C5 with Lunar Magic's Display Level Message 1 fix). Change to [00] to skip the intro level and warp to the overworld immediately."},{"address":"$009CCB","length":"3 bytes. Ends at $009CCD.","beginsAt":40139,"endsAt":40141,"type":"Misc.","descriptio":"SRAM starting addresses for each of the three save files, high byte."},{"address":"$009CCE","length":"3 bytes. Ends at $009CD0.","beginsAt":40142,"endsAt":40144,"type":"Misc.","descriptio":"SRAM starting addresses for each of the three save files, low byte."},{"address":"$009CD4","length":"2 bytes. Ends at $009CD5.","beginsAt":40148,"endsAt":40149,"type":"Palette","descriptio":"BG Palette for File and Player Select screens. Original value is $7393."},{"address":"$009CD7","length":"4 bytes. Ends at $009CDA.","beginsAt":40151,"endsAt":40154,"type":"Sprite tilemap related","descriptio":"Y displacement for tiles in the first shared GFX routine ($019CF3)."},{"address":"$009CDB","length":"24 bytes. Ends at $009CF2.","beginsAt":40155,"endsAt":40178,"type":"Sprite tilemap related","descriptio":"Properties for tiles in the first shared GFX routine ($019CF3). It's indexed by the value of $05 times 4."},{"address":"$009D30","length":"8 bytes. Ends at $009D37.","beginsAt":40240,"endsAt":40247,"type":"Subroutine (JSR)","descriptio":"Subroutine used for changing the background color on the titlescreen, when entering/exiting the file erase menu. To use, load the color (16-bit) to A and a CGADDSUB value (for half-color math) to Y first.\n\nChanging the first three bytes from [8D 01 07] to [EA EA EA] will disable the titlescreen back area color from changing."},{"address":"$009D6D","length":"1 byte","beginsAt":40301,"endsAt":40301,"type":"Misc.","descriptio":"How many exits you need to get the *96 icon."},{"address":"$009D71","length":"1 byte","beginsAt":40305,"endsAt":40305,"type":"Misc.","descriptio":"First tile of the *96 icon."},{"address":"$009D73","length":"1 byte","beginsAt":40307,"endsAt":40307,"type":"Misc.","descriptio":"Second tile of the *96 icon."},{"address":"$009D8B","length":"1 byte","beginsAt":40331,"endsAt":40331,"type":"Palette","descriptio":"Palette for \"number of levels beaten\" in the Title Screen's Game Selection Menu (stored in YXPCCCTT format, but kind of screwy; value 30 seems to work well, though)"},{"address":"$009DB5","length":"69 bytes. Ends at $009DF9.","beginsAt":40373,"endsAt":40441,"type":"Subroutine (JSR)","descriptio":"The subroutine that checks if a saved game file is blank or not. When this subroutine returns, if Z = 0, the file is a new one."},{"address":"$009E25","length":"1 byte","beginsAt":40485,"endsAt":40485,"type":"Misc.","descriptio":"Amount of lives to start with."},{"address":"$009E35","length":"2 bytes. Ends at $009E36.","beginsAt":40501,"endsAt":40502,"type":"ASM","descriptio":"Set powerups at game start. ($19 = #$00, small Mario.)"},{"address":"$009E6C","length":"1 byte","beginsAt":40556,"endsAt":40556,"type":"Misc.","descriptio":"Number of options in the file select menu. $04 by default."},{"address":"$009E6E","length":"1 byte","beginsAt":40558,"endsAt":40558,"type":"Misc.","descriptio":"Number of options in the 1/2 player select menu. $02 by default."},{"address":"$009EC1","length":"1 byte","beginsAt":40641,"endsAt":40641,"type":"Layer 3","descriptio":"Tile number of the arrow cursor in the title screen menus."},{"address":"$009EC2","length":"1 byte","beginsAt":40642,"endsAt":40642,"type":"Palette","descriptio":"YXPCCCTT properties of the arrow cursor in the title screen menus."},{"address":"$009F2A","length":"1 byte","beginsAt":40746,"endsAt":40746,"type":"Misc.","descriptio":"Speed of Fade-ins and Fade-outs."},{"address":"$009F2F","length":"1 byte","beginsAt":40751,"endsAt":40751,"type":"Overworld border","descriptio":"Change from 01 to 0F to stop fadeout on entering level, new area, and back to submap. (Use with $00:9F59)"},{"address":"$009F37","length":"81 bytes. Ends at $009F87.","beginsAt":40759,"endsAt":40839,"type":"Subroutine (JSR)","descriptio":"Fading/mosaic routine.\nChange $009F59 from D0 to 90 to eliminate all fadeouts. (use in conjunction with $009F2F). Mod note: I've heard that this one is buggy. Use on your own risk.\n$009F67 controls which layers are affected by the mosaic effect.\nFormat: xxxx4321.\nThe numbers present the layer numbers to add mosaic on. So 1 = Layer 1, 2 = Layer 2, etc."},{"address":"$009F88","length":"48 bytes. Ends at $009FB7.","beginsAt":40840,"endsAt":40887,"type":"Layer 3","descriptio":"Layer 3 settings. The table is indexed by 3t + i, where t is the tileset number and i is the Layer 3 image setting (00 = variable tide, 01 = low tide, 02 = tileset-specific image). It is used by the routine at $009FB8. The actual format seems to be:\n01 = variable-height tide\n02 = fixed-height tide\n80 = Layer 3 smashers/cage\n81 = slow-auto-scrolling background (except in tilesets 1 and 3, where it will be a background that scrolls at half the rate Layer 1 does)\nC0 = same as 80, except without the smasher palette"},{"address":"$009FB8","length":"141 bytes. Ends at $00A044.","beginsAt":40888,"endsAt":41028,"type":"Subroutine (JSR)","descriptio":"The main Layer 3 handling routine in levels.\n\n- $009FDA: Starting Y position of the rising/lowering tide.\n- $009FDF: Y position of the fixed-height tide.\n- $009FF3: One of two tilesets for which the tileset-specific Layer 3 background will not auto-scroll. The other is at $009FF7.\n- $009FF7: One of two tilesets for which the tileset-specific Layer 3 background will not auto-scroll. The other is at $009FF3.\n- $00A00A: Pointer to the layer 3 crusher palette."},{"address":"$00A045","length":"38 bytes. Ends at $00A06A.","beginsAt":41029,"endsAt":41066,"type":"Layer 3","descriptio":"The routine that sets the interaction of the Layer 3 tide tiles.\n\nBoth $00A04E and $00A04F are the low byte of the Map16 tile that the tides act like; nothing is stored to the high byte, so this is always on page 0."},{"address":"$00A06B","length":"14 bytes. Ends at $00A078.","beginsAt":41067,"endsAt":41080,"type":"Coordinate","descriptio":"16-bit X-coordinates for each of the seven submaps. The main map has values of 0, and is overridden elsewhere."},{"address":"$00A079","length":"14 bytes. Ends at $00A086.","beginsAt":41081,"endsAt":41094,"type":"Coordinate","descriptio":"16-bit Y-coordinates for each of the seven submaps. The main map has values of 0, and is overridden elsewhere."},{"address":"$00A09C","length":"1 byte","beginsAt":41116,"endsAt":41116,"type":"Timer","descriptio":"Timer to disable skipping the intro message (level C5).\nThe timer decreases every 4 frame."},{"address":"$00A0CC","length":"3 bytes. Ends at $00A0CE.","beginsAt":41164,"endsAt":41166,"type":"Misc.","descriptio":"Saves Mario/Luigi's powerups based on which one you are using for the level"},{"address":"$00A0F9","length":"1 byte","beginsAt":41209,"endsAt":41209,"type":"ASM","descriptio":"Part of the routine that runs after dying with zero lives.\n\nIf # of levels beat is zero, then it will take you back to the intro screen, if levels beat is positive, it will take you back to the last place you saved on the OW and bring up the Continue/End dialog.\n\nChange this byte to BRA ($80) to cause it to not send you to the intro screen and bring up the Continue/End dialog if you haven't saved for the first time. (In other words, it will take you back to Yoshi's House on an unedited overworld.)"},{"address":"$00A148","length":"1 byte","beginsAt":41288,"endsAt":41288,"type":"Overworld","descriptio":"GFX file for animated tiles (waterfalls etc) on the overworld."},{"address":"$00A15A","length":"4 bytes. Ends at $00A15D.","beginsAt":41306,"endsAt":41309,"type":"Overworld border","descriptio":"Call to the routine to draw the number of lives on the overworld border.\n\nChange to [80 02] (BRA $02) to disable the amount of lives from being shown in the overworld border. Use with $04A530."},{"address":"$00A1E3","length":"1 byte","beginsAt":41443,"endsAt":41443,"type":"ASM","descriptio":"Change to 0xEA to keep the game running when a message box is on the screen."},{"address":"$00A21E","length":"1 byte","beginsAt":41502,"endsAt":41502,"type":"Controller","descriptio":"Button to press for Pause. (Checks $16)"},{"address":"$00A21F","length":"1 byte","beginsAt":41503,"endsAt":41503,"type":"ASM","descriptio":"Change from F0 (BEQ) to 80 (BRA) to disable pausing"},{"address":"$00A22D","length":"1 byte","beginsAt":41517,"endsAt":41517,"type":"Timer","descriptio":"Timer (in frames) that runs to prevent the pause flag from being flipped instantly. Change [3C] to another value to change the time it takes for Mario to pause/unpause."},{"address":"$00A23E","length":"1 byte","beginsAt":41534,"endsAt":41534,"type":"Music","descriptio":"Change to 12 and music will continue to play when you pause the game. Changing [11] to another value will alter the sound effect that occurs when pausing the game."},{"address":"$00A248","length":"1 byte","beginsAt":41544,"endsAt":41544,"type":"Debug","descriptio":"DEBUG: Advance frame / Slow motion (00 = enable)"},{"address":"$00A256","length":"1 byte","beginsAt":41558,"endsAt":41558,"type":"Debug","descriptio":"DEBUG: Slow motion speed"},{"address":"$00A25B","length":"47 bytes. Ends at $00A289.","beginsAt":41563,"endsAt":41609,"type":"Controller","descriptio":"Code to handle leaving the level with Start+Select.\n\nChange $00:A268 to 00 to always allow leaving the level.\nChange $00:A273 to 00 to beat the level by doing that, not just leave it. Holding A or B will give the secret exit."},{"address":"$00A300","length":"144 bytes. Ends at $00A38F.","beginsAt":41728,"endsAt":41871,"type":"Subroutine (JSR)","descriptio":"The routine that handles the graphics that get DMA'd to the first five 16x16 tiles in SP1. It also write the necessary colors to the player's palette (colors 6-F).\n$00A30A - Mario/Luigi Palette - Starting Index (Changing this will cause Mario/Luigi to flash when the screen fades out after beating a boss)\n$00A320 - Mario/Luigi Palette - Amount of colours * 2"},{"address":"$00A390","length":"1 byte","beginsAt":41872,"endsAt":41872,"type":"ASM","descriptio":"[C2] Change to 60 to disable all animations in levels. This includes colour 64.\nNote: LM will still show the animations."},{"address":"$00A3DB","length":"2 bytes. Ends at $00A3DC.","beginsAt":41947,"endsAt":41948,"type":"Overworld border","descriptio":"[00 08] For which VRAM address animation data will be broken up into two lines of two tiles instead of a single line of four tiles."},{"address":"$00A400","length":"2 bytes. Ends at $00A401.","beginsAt":41984,"endsAt":41985,"type":"Overworld border","descriptio":"[00 09] VRAM address of the second line of two animated tiles (value should be $00A3DB + 0x100)."},{"address":"$00A41A","length":"1 byte","beginsAt":42010,"endsAt":42010,"type":"Palette","descriptio":"[A9] Changing this to 60 will disable the flashing yellow color in levels, but not on the overworld."},{"address":"$00A41B","length":"1 byte","beginsAt":42011,"endsAt":42011,"type":"Palette","descriptio":"Palette number to use for the flashing palette. Default value is $64"},{"address":"$00A429","length":"12 bytes. Ends at $00A434.","beginsAt":42025,"endsAt":42036,"type":"Palette","descriptio":"Changing [B9 0C B6 8D 22 21 B9 0D B6 8D 22 21] to [80 0A EA EA EA EA EA EA EA EA EA EA] will disable the flash animation of colour #64. Make sure that the \"View Animation\" function in Lunar Magic is disabled.\nWARNING: Will disable the animated colours on the OW too!"},{"address":"$00A439","length":"1 byte","beginsAt":42041,"endsAt":42041,"type":"Misc.","descriptio":"Change [F0] (BEQ) to [80] (BRA) to prevent various tiles in SP1 to be overwritten (which meant using ExGFX for them would have no effect). This does not affect tiles 00-09, 10-19 and 7F of SP1."},{"address":"$00A514","length":"1 byte","beginsAt":42260,"endsAt":42260,"type":"Palette","descriptio":"The first animated colour on the overworld. (Default: 6D.)"},{"address":"$00A51D","length":"1 byte","beginsAt":42269,"endsAt":42269,"type":"Palette","descriptio":"The second animated colour on the overworld. (Default: 7D.)"},{"address":"$00A757","length":"1 byte","beginsAt":42839,"endsAt":42839,"type":"Misc.","descriptio":"How far to offset the players position to the right when exiting a vertical pipe. Values above 0F aren't recommended."},{"address":"$00A75F","length":"1 byte","beginsAt":42847,"endsAt":42847,"type":"Misc.","descriptio":"How many frames to move Mario when exiting upward from a vertical pipe."},{"address":"$00A763","length":"1 byte","beginsAt":42851,"endsAt":42851,"type":"Misc.","descriptio":"How many frames to move Mario when exiting downward from a vertical pipe while small."},{"address":"$00A769","length":"1 byte","beginsAt":42857,"endsAt":42857,"type":"Misc.","descriptio":"How many frames to move Mario when exiting downward from a vertical pipe while with a powerup."},{"address":"$00A82E","length":"1 byte","beginsAt":43054,"endsAt":43054,"type":"Misc.","descriptio":"GFX File loaded for \"MARIO START!\", \"GAME OVER\", etc."},{"address":"$00A8C3","length":"104 bytes. Ends at $00A92A.","beginsAt":43203,"endsAt":43306,"type":"Sprite Misc.","descriptio":"26x4 byte table, Sprite GFX list.\nNormal levels can use 00-0F, but the following values have also been observed:\n10: [00 00 00 08] Unused?\n11: [10 0F 1C 1D] Overworld\n12: [00 01 24 22] Morton, Roy, Ludwig\n13: [00 01 25 22] Iggy, Larry, Reznor\n14: [00 22 13 2D] Castle destruction sequence\n15: [00 01 0F 22] Walking home during the credits\n16: [00 26 2E 22] Yoshi's House during the credits\n17: [21 0B 25 0A] Boss list from the credits\n18: [00 0D 24 22] Bowser\n19: [2C 30 2D 0E] THE END screen"},{"address":"$00A92B","length":"60 bytes. Ends at $00A966.","beginsAt":43307,"endsAt":43366,"type":"Level data","descriptio":"26x4 byte table, FG/BG GFX list.\nNormal levels can use 00-0E, but cutscenes set this to higher values."},{"address":"$00A96F","length":"28 bytes. Ends at $00A98A.","beginsAt":43375,"endsAt":43402,"type":"Level data","descriptio":"Submap Foreground Graphics"},{"address":"$00A993","length":"63 bytes. Ends at $00A9D1.","beginsAt":43411,"endsAt":43473,"type":"Layer 3","descriptio":"Layer 3 GFX28 to 2B upload routine. Pages are uploaded in 64 tile chunks in four passes."},{"address":"$00A9CD","length":"1 byte","beginsAt":43469,"endsAt":43469,"type":"Misc.","descriptio":"GFX file to use for Nintendo Presents logo"},{"address":"$00AA70","length":"1 byte","beginsAt":43632,"endsAt":43632,"type":"Misc.","descriptio":"GFX file to load special world graphics into"},{"address":"$00AA76","length":"1 byte","beginsAt":43638,"endsAt":43638,"type":"ASM","descriptio":"Change from 10 to 80 to disable the Koopas from using different graphics after the special world is passed"},{"address":"$00AA79","length":"1 byte","beginsAt":43641,"endsAt":43641,"type":"Sprite tilemap related","descriptio":"GFX File loaded for enemies after Special World is passed"},{"address":"$00AB43","length":"1 byte","beginsAt":43843,"endsAt":43843,"type":"Mode 7 tilemap","descriptio":"GFX File loaded for Mode 7 objects"},{"address":"$00AC06","length":"2 bytes. Ends at $00AC07.","beginsAt":44038,"endsAt":44039,"type":"Palette","descriptio":"Layer 3 Palettes Pointer"},{"address":"$00AC0B","length":"2 bytes. Ends at $00AC0C.","beginsAt":44043,"endsAt":44044,"type":"Palette","descriptio":"Layer 3 Palettes Starting Index"},{"address":"$00AC10","length":"2 bytes. Ends at $00AC11.","beginsAt":44048,"endsAt":44049,"type":"Palette","descriptio":"Layer 3 Palettes X-Span -1"},{"address":"$00AC15","length":"2 bytes. Ends at $00AC16.","beginsAt":44053,"endsAt":44054,"type":"Palette","descriptio":"Layer 3 Palettes Y-Span -1"},{"address":"$00AC1D","length":"2 bytes. Ends at $00AC1E.","beginsAt":44061,"endsAt":44062,"type":"Palette","descriptio":"Foreground/Sprite Palettes Pointer"},{"address":"$00AC22","length":"2 bytes. Ends at $00AC23.","beginsAt":44066,"endsAt":44067,"type":"Palette","descriptio":"Foreground/Sprite Palettes Starting Index"},{"address":"$00AC27","length":"2 bytes. Ends at $00AC28.","beginsAt":44071,"endsAt":44072,"type":"Palette","descriptio":"Foreground/Sprite Palettes X-Span -1"},{"address":"$00AC2C","length":"2 bytes. Ends at $00AC2D.","beginsAt":44076,"endsAt":44077,"type":"Palette","descriptio":"Foreground/Sprite Palettes Y-Span -1"},{"address":"$00AC3C","length":"2 bytes. Ends at $00AC3D.","beginsAt":44092,"endsAt":44093,"type":"Palette","descriptio":"Back Area Colours Pointer"},{"address":"$00AC42","length":"2 bytes. Ends at $00AC43.","beginsAt":44098,"endsAt":44099,"type":"Palette","descriptio":"Tileset Specific FG Palettes Pointer"},{"address":"$00AC59","length":"2 bytes. Ends at $00AC5A.","beginsAt":44121,"endsAt":44122,"type":"Palette","descriptio":"Tileset Specific FG Palettes Starting Index"},{"address":"$00AC5E","length":"2 bytes. Ends at $00AC5F.","beginsAt":44126,"endsAt":44127,"type":"Palette","descriptio":"Tileset Specific FG Palettes X-Span -1"},{"address":"$00AC63","length":"2 bytes. Ends at $00AC64.","beginsAt":44131,"endsAt":44132,"type":"Palette","descriptio":"Tileset Specific FG Palettes Y-Span -1"},{"address":"$00AC6B","length":"2 bytes. Ends at $00AC6C.","beginsAt":44139,"endsAt":44140,"type":"Palette","descriptio":"Tileset Specific Sprite Palettes Pointer"},{"address":"$00AC82","length":"2 bytes. Ends at $00AC83.","beginsAt":44162,"endsAt":44163,"type":"Palette","descriptio":"Tileset Specific Sprite Palettes Starting Index"},{"address":"$00AC87","length":"2 bytes. Ends at $00AC88.","beginsAt":44167,"endsAt":44168,"type":"Palette","descriptio":"Tileset Specific Sprite Palettes X-Span -1"},{"address":"$00AC8C","length":"2 bytes. Ends at $00AC8D.","beginsAt":44172,"endsAt":44173,"type":"Palette","descriptio":"Tileset Specific Sprite Palettes Y-Span -1"},{"address":"$00AC94","length":"2 bytes. Ends at $00AC95.","beginsAt":44180,"endsAt":44181,"type":"Palette","descriptio":"Layer 2 Background Palettes Pointer"},{"address":"$00ACAB","length":"2 bytes. Ends at $00ACAC.","beginsAt":44203,"endsAt":44204,"type":"Palette","descriptio":"Layer 2 Background Palettes Starting Index"},{"address":"$00ACB0","length":"2 bytes. Ends at $00ACB1.","beginsAt":44208,"endsAt":44209,"type":"Palette","descriptio":"Layer 2 Background Palettes X-Span -1"},{"address":"$00ACB5","length":"2 bytes. Ends at $00ACB6.","beginsAt":44213,"endsAt":44214,"type":"Palette","descriptio":"Layer 2 Background Palettes Y-Span -1"},{"address":"$00ACBD","length":"2 bytes. Ends at $00ACBE.","beginsAt":44221,"endsAt":44222,"type":"Palette","descriptio":"Layer 1 Berry Palettes Pointer"},{"address":"$00ACC2","length":"2 bytes. Ends at $00ACC3.","beginsAt":44226,"endsAt":44227,"type":"Palette","descriptio":"Layer 1 Berry Palettes Starting Index"},{"address":"$00ACC7","length":"2 bytes. Ends at $00ACC8.","beginsAt":44231,"endsAt":44232,"type":"Palette","descriptio":"Layer 1 Berry Palettes X-Span -1"},{"address":"$00ACCC","length":"2 bytes. Ends at $00ACCD.","beginsAt":44236,"endsAt":44237,"type":"Palette","descriptio":"Layer 1 Berry Palettes Y-Span -1"},{"address":"$00ACD4","length":"2 bytes. Ends at $00ACD5.","beginsAt":44244,"endsAt":44245,"type":"Palette","descriptio":"Berry Sprite Palettes Pointer"},{"address":"$00ACD9","length":"2 bytes. Ends at $00ACDA.","beginsAt":44249,"endsAt":44250,"type":"Palette","descriptio":"Berry Sprite Palettes Starting Index"},{"address":"$00ACDE","length":"2 bytes. Ends at $00ACDF.","beginsAt":44254,"endsAt":44255,"type":"Palette","descriptio":"Berry Sprite Palettes X-Span -1"},{"address":"$00ACE3","length":"2 bytes. Ends at $00ACE4.","beginsAt":44259,"endsAt":44260,"type":"Palette","descriptio":"Berry Sprite Palettes Y-Span -1"},{"address":"$00AD1E","length":"7 bytes. Ends at $00AD24.","beginsAt":44318,"endsAt":44324,"type":"Palette","descriptio":"Palette IDs to use for each submap"},{"address":"$00AD28","length":"2 bytes. Ends at $00AD29.","beginsAt":44328,"endsAt":44329,"type":"Palette","descriptio":"Overworld Map Layer 2 Palettes Pointer"},{"address":"$00AD30","length":"2 bytes. Ends at $00AD31.","beginsAt":44336,"endsAt":44337,"type":"Palette","descriptio":"Overworld Map Layer 2 Palettes Pointer (Special World Passed)"},{"address":"$00AD4D","length":"2 bytes. Ends at $00AD4E.","beginsAt":44365,"endsAt":44366,"type":"Palette","descriptio":"Overworld Map Layer 2 Palettes Starting Index"},{"address":"$00AD52","length":"2 bytes. Ends at $00AD53.","beginsAt":44370,"endsAt":44371,"type":"Palette","descriptio":"Overworld Map Layer 2 Palettes X-Span -1"},{"address":"$00AD57","length":"2 bytes. Ends at $00AD58.","beginsAt":44375,"endsAt":44376,"type":"Palette","descriptio":"Overworld Map Layer 2 Palettes Y-Span -1"},{"address":"$00AD5F","length":"2 bytes. Ends at $00AD60.","beginsAt":44383,"endsAt":44384,"type":"Palette","descriptio":"Overworld Map Layer 1 Palettes Pointer"},{"address":"$00AD64","length":"2 bytes. Ends at $00AD65.","beginsAt":44388,"endsAt":44389,"type":"Palette","descriptio":"Overworld Map Layer 1 Palettes Starting Index"},{"address":"$00AD69","length":"2 bytes. Ends at $00AD6A.","beginsAt":44393,"endsAt":44394,"type":"Palette","descriptio":"Overworld Map Layer 1 Palettes X-Span -1"},{"address":"$00AD6E","length":"2 bytes. Ends at $00AD6F.","beginsAt":44398,"endsAt":44399,"type":"Palette","descriptio":"Overworld Map Layer 1 Palettes Y-Span -1"},{"address":"$00AD76","length":"2 bytes. Ends at $00AD77.","beginsAt":44406,"endsAt":44407,"type":"Palette","descriptio":"Overworld Map Sprite Palettes Pointer"},{"address":"$00AD7B","length":"2 bytes. Ends at $00AD7C.","beginsAt":44411,"endsAt":44412,"type":"Palette","descriptio":"Overworld Map Sprite Palettes Starting Index"},{"address":"$00AD80","length":"2 bytes. Ends at $00AD81.","beginsAt":44416,"endsAt":44417,"type":"Palette","descriptio":"Overworld Map Sprite Palettes X-Span -1"},{"address":"$00AD85","length":"2 bytes. Ends at $00AD86.","beginsAt":44421,"endsAt":44422,"type":"Palette","descriptio":"Overworld Map Sprite Palettes Y-Span -1"},{"address":"$00AD8D","length":"2 bytes. Ends at $00AD8E.","beginsAt":44429,"endsAt":44430,"type":"Palette","descriptio":"Overworld Map Layer 3 Palettes Pointer"},{"address":"$00AD92","length":"2 bytes. Ends at $00AD93.","beginsAt":44434,"endsAt":44435,"type":"Palette","descriptio":"Overworld Map Layer 3 Palettes Starting Index"},{"address":"$00AD97","length":"2 bytes. Ends at $00AD98.","beginsAt":44439,"endsAt":44440,"type":"Palette","descriptio":"Overworld Map Layer 3 Palettes X-Span -1"},{"address":"$00AD9C","length":"2 bytes. Ends at $00AD9D.","beginsAt":44444,"endsAt":44445,"type":"Palette","descriptio":"Overworld Map Layer 3 Palettes Y-Span -1"},{"address":"$00ADA9","length":"2 bytes. Ends at $00ADAA.","beginsAt":44457,"endsAt":44458,"type":"Palette","descriptio":"Title Screen Layer 3 Palettes (Row 1) Pointer"},{"address":"$00ADAE","length":"2 bytes. Ends at $00ADAF.","beginsAt":44462,"endsAt":44463,"type":"Palette","descriptio":"Title Screen Layer 3 Palettes (Row 1) Starting Index"},{"address":"$00ADB3","length":"2 bytes. Ends at $00ADB4.","beginsAt":44467,"endsAt":44468,"type":"Palette","descriptio":"Title Screen Layer 3 Palettes (Row 1) X-Span -1"},{"address":"$00ADB8","length":"2 bytes. Ends at $00ADB9.","beginsAt":44472,"endsAt":44473,"type":"Palette","descriptio":"Title Screen Layer 3 Palettes (Row 1) Y-Span -1"},{"address":"$00ADC0","length":"2 bytes. Ends at $00ADC1.","beginsAt":44480,"endsAt":44481,"type":"Palette","descriptio":"Title Screen Layer 3 Palettes (Row 2) Pointer"},{"address":"$00ADC5","length":"2 bytes. Ends at $00ADC6.","beginsAt":44485,"endsAt":44486,"type":"Palette","descriptio":"Title Screen Layer 3 Palettes (Row 2) Starting Index"},{"address":"$00ADCA","length":"2 bytes. Ends at $00ADCB.","beginsAt":44490,"endsAt":44491,"type":"Palette","descriptio":"Title Screen Layer 3 Palettes (Row 2) X-Span -1"},{"address":"$00ADCF","length":"2 bytes. Ends at $00ADD0.","beginsAt":44495,"endsAt":44496,"type":"Palette","descriptio":"Title Screen Layer 3 Palettes (Row 2) Y-Span -1"},{"address":"$00AE16","length":"1 byte","beginsAt":44566,"endsAt":44566,"type":"Misc.","descriptio":"[02] Sprite Palette setting for Morton, Ludwig, Roy, Reznor, and Bowser battles"},{"address":"$00AE1B","length":"1 byte","beginsAt":44571,"endsAt":44571,"type":"Misc.","descriptio":"[07] FG Palette setting for Morton, Ludwig, Roy, Reznor, and Bowser battles"},{"address":"$00AF35","length":"4 bytes. Ends at $00AF38.","beginsAt":44853,"endsAt":44856,"type":"ASM","descriptio":"Change to 4C 91 B0 EA to completely disable the fade-out only when beating a level. (USE WITH $00:B091)."},{"address":"$00AF39","length":"1 byte","beginsAt":44857,"endsAt":44857,"type":"ASM","descriptio":"Change to 80 to completely disable the fade-out when beating a level. Warning: Boss fights including Reznor will glitch out and not send you back to the overworld when doing this."},{"address":"$00AFBA","length":"3 bytes. Ends at $00AFBC.","beginsAt":44986,"endsAt":44988,"type":"Misc.","descriptio":"Change from B9 F7 AE [LDA $AEF7,y] to A9 00 00 [LDA #$0000] to disable fading completely, even in boss levels. WARNING: When end level scorecard pops up in boss levels, mode 7 stuff will disappear due to the mode being changed to 1 so layer 3 stuff shows up."},{"address":"$00B091","length":"15 bytes. Ends at $00B09F.","beginsAt":45201,"endsAt":45215,"type":"Empty","descriptio":"Unused data.\nChange to AD C6 13 F0 FA A5 13 29 03 4C 39 AF to completely disable the fade-out only when beating a level. Does not apply to bosses (USE WITH $00:AF35)."},{"address":"$00B0A0","length":"16 bytes. Ends at $00B0AF.","beginsAt":45216,"endsAt":45231,"type":"Palette","descriptio":"Shared background area colour. Back area colour 0 - 7"},{"address":"$00B0B0","length":"24 bytes. Ends at $00B0C7.","beginsAt":45232,"endsAt":45255,"type":"Palette","descriptio":"BG Palette 0"},{"address":"$00B0C8","length":"24 bytes. Ends at $00B0DF.","beginsAt":45256,"endsAt":45279,"type":"Palette","descriptio":"BG Palette 1"},{"address":"$00B0E0","length":"24 bytes. Ends at $00B0F7.","beginsAt":45280,"endsAt":45303,"type":"Palette","descriptio":"BG Palette 2"},{"address":"$00B0F8","length":"24 bytes. Ends at $00B10F.","beginsAt":45304,"endsAt":45327,"type":"Palette","descriptio":"BG Palette 3"},{"address":"$00B110","length":"24 bytes. Ends at $00B127.","beginsAt":45328,"endsAt":45351,"type":"Palette","descriptio":"BG Palette 4"},{"address":"$00B128","length":"24 bytes. Ends at $00B13F.","beginsAt":45352,"endsAt":45375,"type":"Palette","descriptio":"BG Palette 5"},{"address":"$00B140","length":"24 bytes. Ends at $00B157.","beginsAt":45376,"endsAt":45399,"type":"Palette","descriptio":"BG Palette 6"},{"address":"$00B158","length":"24 bytes. Ends at $00B16F.","beginsAt":45400,"endsAt":45423,"type":"Palette","descriptio":"BG Palette 7"},{"address":"$00B170","length":"16 bytes. Ends at $00B17F.","beginsAt":45424,"endsAt":45439,"type":"Palette","descriptio":"Palette 0 colours 8-F in levels."},{"address":"$00B180","length":"16 bytes. Ends at $00B18F.","beginsAt":45440,"endsAt":45455,"type":"Palette","descriptio":"Palette 1 colours 8-F in levels."},{"address":"$00B190","length":"12 bytes. Ends at $00B19B.","beginsAt":45456,"endsAt":45467,"type":"Palette","descriptio":"Palette 2 colours 2-7, FG Palette 0, in levels."},{"address":"$00B19C","length":"12 bytes. Ends at $00B1A7.","beginsAt":45468,"endsAt":45479,"type":"Palette","descriptio":"Palette 3 colours 2-7, FG Palette 0, in levels."},{"address":"$00B1A8","length":"12 bytes. Ends at $00B1B3.","beginsAt":45480,"endsAt":45491,"type":"Palette","descriptio":"Palette 2 colours 2-7, FG Palette 1, in levels."},{"address":"$00B1B4","length":"12 bytes. Ends at $00B1BF.","beginsAt":45492,"endsAt":45503,"type":"Palette","descriptio":"Palette 3 colours 2-7, FG Palette 1, in levels."},{"address":"$00B1C0","length":"12 bytes. Ends at $00B1CB.","beginsAt":45504,"endsAt":45515,"type":"Palette","descriptio":"Palette 2 colours 2-7, FG Palette 2, in levels."},{"address":"$00B1CC","length":"12 bytes. Ends at $00B1D7.","beginsAt":45516,"endsAt":45527,"type":"Palette","descriptio":"Palette 3 colours 2-7, FG Palette 2, in levels."},{"address":"$00B1D8","length":"12 bytes. Ends at $00B1E3.","beginsAt":45528,"endsAt":45539,"type":"Palette","descriptio":"Palette 2 colours 2-7, FG Palette 3, in levels."},{"address":"$00B1E4","length":"12 bytes. Ends at $00B1EF.","beginsAt":45540,"endsAt":45551,"type":"Palette","descriptio":"Palette 3 colours 2-7, FG Palette 3, in levels."},{"address":"$00B1F0","length":"12 bytes. Ends at $00B1FB.","beginsAt":45552,"endsAt":45563,"type":"Palette","descriptio":"Palette 2 colours 2-7, FG Palette 4, in levels."},{"address":"$00B1FC","length":"12 bytes. Ends at $00B207.","beginsAt":45564,"endsAt":45575,"type":"Palette","descriptio":"Palette 3 colours 2-7, FG Palette 4, in levels."},{"address":"$00B208","length":"12 bytes. Ends at $00B213.","beginsAt":45576,"endsAt":45587,"type":"Palette","descriptio":"Palette 2 colours 2-7, FG Palette 5, in levels."},{"address":"$00B214","length":"12 bytes. Ends at $00B21F.","beginsAt":45588,"endsAt":45599,"type":"Palette","descriptio":"Palette 3 colours 2-7, FG Palette 5, in levels."},{"address":"$00B220","length":"12 bytes. Ends at $00B22B.","beginsAt":45600,"endsAt":45611,"type":"Palette","descriptio":"Palette 2 colours 2-7, FG Palette 6, in levels."},{"address":"$00B22C","length":"12 bytes. Ends at $00B237.","beginsAt":45612,"endsAt":45623,"type":"Palette","descriptio":"Palette 3 colours 2-7, FG Palette 6, in levels."},{"address":"$00B238","length":"12 bytes. Ends at $00B243.","beginsAt":45624,"endsAt":45635,"type":"Palette","descriptio":"Palette 2 colours 2-7, FG Palette 7, in levels."},{"address":"$00B244","length":"12 bytes. Ends at $00B24F.","beginsAt":45636,"endsAt":45647,"type":"Palette","descriptio":"Palette 3 colours 2-7, FG Palette 7, in levels."},{"address":"$00B250","length":"12 bytes. Ends at $00B25B.","beginsAt":45648,"endsAt":45659,"type":"Palette","descriptio":"Palette 4 colours 2-7 in levels."},{"address":"$00B25C","length":"12 bytes. Ends at $00B267.","beginsAt":45660,"endsAt":45671,"type":"Palette","descriptio":"Palette 5 colours 2-7 in levels."},{"address":"$00B268","length":"12 bytes. Ends at $00B273.","beginsAt":45672,"endsAt":45683,"type":"Palette","descriptio":"Palette 6 colours 2-7 in levels. Colour 4 will be overwritten in levels, but not in boss rooms."},{"address":"$00B274","length":"12 bytes. Ends at $00B27F.","beginsAt":45684,"endsAt":45695,"type":"Palette","descriptio":"Palette 7 colours 2-7 in levels."},{"address":"$00B280","length":"12 bytes. Ends at $00B28B.","beginsAt":45696,"endsAt":45707,"type":"Palette","descriptio":"Palette 8 colours 2-5 in levels, the last four bytes (colours 6-7) are only available during the Nintendo Presents logo; after that, they are overwritten by the first two colours from Mario's palette."},{"address":"$00B28C","length":"12 bytes. Ends at $00B297.","beginsAt":45708,"endsAt":45719,"type":"Palette","descriptio":"Palette 9 colours 2-7 in levels."},{"address":"$00B298","length":"12 bytes. Ends at $00B2A3.","beginsAt":45720,"endsAt":45731,"type":"Palette","descriptio":"Ludwig palette, and palette A colours 2-7 in levels."},{"address":"$00B2A4","length":"12 bytes. Ends at $00B2AF.","beginsAt":45732,"endsAt":45743,"type":"Palette","descriptio":"Roy palette, and palette B colours 2-7 in levels."},{"address":"$00B2B0","length":"12 bytes. Ends at $00B2BB.","beginsAt":45744,"endsAt":45755,"type":"Palette","descriptio":"Palette C colours 2-7 in levels."},{"address":"$00B2BC","length":"12 bytes. Ends at $00B2C7.","beginsAt":45756,"endsAt":45767,"type":"Palette","descriptio":"Morton palette, and palette D colours 2-7 in levels"},{"address":"$00B2C8","length":"20 bytes. Ends at $00B2DB.","beginsAt":45768,"endsAt":45787,"type":"Palette","descriptio":"Mario Palette"},{"address":"$00B2DC","length":"20 bytes. Ends at $00B2EF.","beginsAt":45788,"endsAt":45807,"type":"Palette","descriptio":"Luigi palette. Colours 6-F of palette 8 while small, big, or caped Luigi."},{"address":"$00B2F0","length":"20 bytes. Ends at $00B303.","beginsAt":45808,"endsAt":45827,"type":"Palette","descriptio":"Fire Mario's palette"},{"address":"$00B304","length":"20 bytes. Ends at $00B317.","beginsAt":45828,"endsAt":45847,"type":"Palette","descriptio":"Fire Luigi palette. Colours 6-F of palette 8 while fire Luigi."},{"address":"$00B318","length":"24 bytes. Ends at $00B32F.","beginsAt":45848,"endsAt":45871,"type":"Palette","descriptio":"Sprite palette 0, loaded to palettes E and F."},{"address":"$00B330","length":"24 bytes. Ends at $00B347.","beginsAt":45872,"endsAt":45895,"type":"Palette","descriptio":"Sprite palette 1, loaded to palettes E and F."},{"address":"$00B348","length":"24 bytes. Ends at $00B35F.","beginsAt":45896,"endsAt":45919,"type":"Palette","descriptio":"Sprite Palette 2, loaded to palettes E and F."},{"address":"$00B360","length":"24 bytes. Ends at $00B377.","beginsAt":45920,"endsAt":45943,"type":"Palette","descriptio":"Sprite palette 3, loaded to palettes E and F."},{"address":"$00B378","length":"24 bytes. Ends at $00B38F.","beginsAt":45944,"endsAt":45967,"type":"Palette","descriptio":"Sprite palette 4, loaded to palettes E and F."},{"address":"$00B390","length":"24 bytes. Ends at $00B3A7.","beginsAt":45968,"endsAt":45991,"type":"Palette","descriptio":"Sprite palette 5, loaded to palettes E and F."},{"address":"$00B3A8","length":"24 bytes. Ends at $00B3BF.","beginsAt":45992,"endsAt":46015,"type":"Palette","descriptio":"Sprite palette 6, loaded to palettes E and F."},{"address":"$00B3C0","length":"24 bytes. Ends at $00B3D7.","beginsAt":46016,"endsAt":46039,"type":"Palette","descriptio":"Sprite palette 7, loaded to palettes E and F."},{"address":"$00B3D8","length":"14 bytes. Ends at $00B3E5.","beginsAt":46040,"endsAt":46053,"type":"Palette","descriptio":"YI Overworld Palette 4, Colours 1-7"},{"address":"$00B3E6","length":"14 bytes. Ends at $00B3F3.","beginsAt":46054,"endsAt":46067,"type":"Palette","descriptio":"YI Overworld Palette 5, Colours 1-7"},{"address":"$00B3F4","length":"14 bytes. Ends at $00B401.","beginsAt":46068,"endsAt":46081,"type":"Palette","descriptio":"YI Overworld Palette 6, Colours 1-7"},{"address":"$00B402","length":"14 bytes. Ends at $00B40F.","beginsAt":46082,"endsAt":46095,"type":"Palette","descriptio":"YI Overworld Palette 7, Colours 1-7"},{"address":"$00B410","length":"14 bytes. Ends at $00B41D.","beginsAt":46096,"endsAt":46109,"type":"Palette","descriptio":"Main Overworld Palette 4, Colours 1-7"},{"address":"$00B41E","length":"14 bytes. Ends at $00B42B.","beginsAt":46110,"endsAt":46123,"type":"Palette","descriptio":"Main Overworld Palette 5, Colours 1-7"},{"address":"$00B42C","length":"14 bytes. Ends at $00B439.","beginsAt":46124,"endsAt":46137,"type":"Palette","descriptio":"Main Overworld Palette 6, Colours 1-7"},{"address":"$00B43A","length":"14 bytes. Ends at $00B447.","beginsAt":46138,"endsAt":46151,"type":"Palette","descriptio":"Main Overworld Palette 7, Colours 1-7"},{"address":"$00B448","length":"14 bytes. Ends at $00B455.","beginsAt":46152,"endsAt":46165,"type":"Palette","descriptio":"Star World Overworld Palette 4, Colours 1-7"},{"address":"$00B456","length":"14 bytes. Ends at $00B463.","beginsAt":46166,"endsAt":46179,"type":"Palette","descriptio":"Star World Overworld Palette 5, Colours 1-7"},{"address":"$00B464","length":"14 bytes. Ends at $00B471.","beginsAt":46180,"endsAt":46193,"type":"Palette","descriptio":"Star World Overworld Palette 6, Colours 1-7"},{"address":"$00B472","length":"14 bytes. Ends at $00B47F.","beginsAt":46194,"endsAt":46207,"type":"Palette","descriptio":"Star World Overworld Palette 7, Colours 1-7"},{"address":"$00B480","length":"14 bytes. Ends at $00B48D.","beginsAt":46208,"endsAt":46221,"type":"Palette","descriptio":"Vanilla Dome/Bowser's Valley Overworld Palette 4, Colours 1-7"},{"address":"$00B48E","length":"14 bytes. Ends at $00B49B.","beginsAt":46222,"endsAt":46235,"type":"Palette","descriptio":"Vanilla Dome/Bowser's Valley Overworld Palette 5, Colours 1-7"},{"address":"$00B49C","length":"14 bytes. Ends at $00B4A9.","beginsAt":46236,"endsAt":46249,"type":"Palette","descriptio":"Vanilla Dome/Bowser's Valley Overworld Palette 6, Colours 1-7"},{"address":"$00B4AA","length":"14 bytes. Ends at $00B4B7.","beginsAt":46250,"endsAt":46263,"type":"Palette","descriptio":"Vanilla Dome/Bowser's Valley Overworld Palette 7, Colours 1-7"},{"address":"$00B4B8","length":"14 bytes. Ends at $00B4C5.","beginsAt":46264,"endsAt":46277,"type":"Palette","descriptio":"Forest of Illusion Overworld Palette 4, Colours 1-7"},{"address":"$00B4C6","length":"14 bytes. Ends at $00B4D3.","beginsAt":46278,"endsAt":46291,"type":"Palette","descriptio":"Forest of Illusion Overworld Palette 5, Colours 1-7"},{"address":"$00B4D4","length":"14 bytes. Ends at $00B4E1.","beginsAt":46292,"endsAt":46305,"type":"Palette","descriptio":"Forest of Illusion Overworld Palette 6, Colours 1-7"},{"address":"$00B4E2","length":"14 bytes. Ends at $00B4EF.","beginsAt":46306,"endsAt":46319,"type":"Palette","descriptio":"Forest of Illusion Overworld Palette 7, Colours 1-7"},{"address":"$00B4F0","length":"14 bytes. Ends at $00B4FD.","beginsAt":46320,"endsAt":46333,"type":"Palette","descriptio":"Special World Overworld Palette 4, Colours 1-7"},{"address":"$00B4FE","length":"14 bytes. Ends at $00B50B.","beginsAt":46334,"endsAt":46347,"type":"Palette","descriptio":"Special World Overworld Palette 5, Colours 1-7"},{"address":"$00B50C","length":"14 bytes. Ends at $00B519.","beginsAt":46348,"endsAt":46361,"type":"Palette","descriptio":"Special World Overworld Palette 6, Colours 1-7"},{"address":"$00B51A","length":"14 bytes. Ends at $00B527.","beginsAt":46362,"endsAt":46375,"type":"Palette","descriptio":"Special World Overworld Palette 7, Colours 1-7"},{"address":"$00B552","length":"14 bytes. Ends at $00B55F.","beginsAt":46418,"endsAt":46431,"type":"Palette","descriptio":"Palette 5 colours 9-F."},{"address":"$00B560","length":"14 bytes. Ends at $00B56D.","beginsAt":46432,"endsAt":46445,"type":"Palette","descriptio":"Palette 6 colours 9-F."},{"address":"$00B56E","length":"14 bytes. Ends at $00B57B.","beginsAt":46446,"endsAt":46459,"type":"Palette","descriptio":"Palette 7 colours 9-F."},{"address":"$00B5DE","length":"16 bytes. Ends at $00B5ED.","beginsAt":46558,"endsAt":46573,"type":"Palette","descriptio":"Contains the colors for the flashing lightning in Valley of Bowser."},{"address":"$00B60C","length":"16 bytes. Ends at $00B61B.","beginsAt":46604,"endsAt":46619,"type":"Palette","descriptio":"Colours used in animation of Yoshi coin and yellow map spot"},{"address":"$00B61C","length":"16 bytes. Ends at $00B62B.","beginsAt":46620,"endsAt":46635,"type":"Palette","descriptio":"Colours used in animation of red map spot"},{"address":"$00B65E","length":"14 bytes. Ends at $00B66B.","beginsAt":46686,"endsAt":46699,"type":"Palette","descriptio":"Iggy/Larry Platform Palette"},{"address":"$00B674","length":"14 bytes. Ends at $00B681.","beginsAt":46708,"endsAt":46721,"type":"Palette","descriptio":"Palettes 2 and 9, colours 9-F."},{"address":"$00B682","length":"14 bytes. Ends at $00B68F.","beginsAt":46722,"endsAt":46735,"type":"Palette","descriptio":"Palettes 3 and A, colours 9-F."},{"address":"$00B690","length":"14 bytes. Ends at $00B69D.","beginsAt":46736,"endsAt":46749,"type":"Palette","descriptio":"Palettes 4 and B, colours 9-F."},{"address":"$00B69E","length":"112 bytes. Ends at $00B70D.","beginsAt":46750,"endsAt":46861,"type":"Palette","descriptio":"Bowser palettes (8 palettes, 7 colours each)"},{"address":"$00B70E","length":"36 bytes. Ends at $00B731.","beginsAt":46862,"endsAt":46897,"type":"Palette","descriptio":"\"The End\" palettes (3 palettes, 6 colours each; order is Luigi, Mario, Princess)"},{"address":"$00B992","length":"50 bytes. Ends at $00B9C3.","beginsAt":47506,"endsAt":47555,"type":"Graphics","descriptio":"Pointers to GFX00 through GFX31, low byte"},{"address":"$00B9C4","length":"50 bytes. Ends at $00B9F5.","beginsAt":47556,"endsAt":47605,"type":"Graphics","descriptio":"Pointers to GFX00 through GFX31, high byte"},{"address":"$00B9F6","length":"50 bytes. Ends at $00BA27.","beginsAt":47606,"endsAt":47655,"type":"Graphics","descriptio":"Pointers to GFX00 through GFX31, bank byte"},{"address":"$00BA4D","length":"19 bytes. Ends at $00BA5F.","beginsAt":47693,"endsAt":47711,"type":"Empty","descriptio":"Unused data."},{"address":"$00BA60","length":"32 bytes. Ends at $00BA7F.","beginsAt":47712,"endsAt":47743,"type":"Pointer","descriptio":"The low byte of a series of Map16 data pointers in horizontal levels. The high bytes are at $00BA9C, and the bank byte is either $7E or $7F. These are indexed by screen number; each byte in this table and the other corresponds to the start of a particular screen's Map16 data (or chunk of 0x1B0 bytes). These are used in various routines that read or write Map16 data to find where a particular tile is."},{"address":"$00BA80","length":"28 bytes. Ends at $00BA9B.","beginsAt":47744,"endsAt":47771,"type":"Pointer","descriptio":"The low byte of a series of Map16 data pointers in vertical levels. The high bytes are at $00BABC, and the bank byte is either $7E or $7F. These are indexed by screen number; each byte in this table and the other corresponds to the start of a particular screen's Map16 data (or chunk of 0x200 bytes, which means that all of these will be 00 in a clean ROM anyway). These are used in various routines that read or write Map16 data to find where a particular tile is."},{"address":"$00BA9C","length":"32 bytes. Ends at $00BABB.","beginsAt":47772,"endsAt":47803,"type":"Pointer","descriptio":"The high byte of a series of Map16 data pointers in horizontal levels. The low bytes are at $00BA60, and the bank byte is either $7E or $7F. These are indexed by screen number; each byte in this table and the other corresponds to the start of a particular screen's Map16 data (or chunk of 0x1B0 bytes). These are used in various routines that read or write Map16 data to find where a particular tile is."},{"address":"$00BABC","length":"28 bytes. Ends at $00BAD7.","beginsAt":47804,"endsAt":47831,"type":"Pointer","descriptio":"The high byte of a series of Map16 data pointers in vertical levels. The high bytes are at $00BA80, and the bank byte is either $7E or $7F. These are indexed by screen number; each byte in this table and the other corresponds to the start of a particular screen's Map16 data (or chunk of 0x200 bytes, which means that these are all simply multiples of 2 plus #$C8). These are used in various routines that read or write Map16 data to find where a particular tile is."},{"address":"$00BEB0","length":"268 bytes. Ends at $00BFBB.","beginsAt":48816,"endsAt":49083,"type":"Subroutine (JSL)","descriptio":"SMW's Map16-tile-generating routine. It uses values of $9C to determine which tile to generate, but these values are hardcoded. (See RAM address $9C.) This is the main part; $00BFBC runs the codes for each tile."},{"address":"$00BFBC","length":"67 bytes. Ends at $00BFFE.","beginsAt":49084,"endsAt":49150,"type":"Subroutine (JSR)","descriptio":"A subroutine used with $00BEB0; it runs different codes depending on the value of $9C. The pointers for the different values begin at $00BFC9. They go from 01 to 1B, although the actual codes are kind of weird...the pointers vary depending on which Map16 page the tile is on, whether or not item memory should be affected, and if there are special cases (such as the Yoshi coin, which generates two tiles simultaneously)."},{"address":"$00C00D","length":"86 bytes. Ends at $00C062.","beginsAt":49165,"endsAt":49250,"type":"Subroutine (JSR)","descriptio":"The subroutine that sets item memory bits. It is called during the subroutine at $00BEB0 for values of $9C that utilize item memory."},{"address":"$00C06B","length":"9 bytes. Ends at $00C073.","beginsAt":49259,"endsAt":49267,"type":"Misc.","descriptio":"Tiles to generate on Map16 page 0, used for values 01-09 of $9C. Note that the first byte is unused."},{"address":"$00C074","length":"54 bytes. Ends at $00C0A9.","beginsAt":49268,"endsAt":49321,"type":"Subroutine (JSR)","descriptio":"SMW's subroutine for generating tiles on Map16 page 0. $00C077 is an alternate entry point to this routine; if it is used instead, then the tile generation will not affect item memory."},{"address":"$00C0B2","length":"15 bytes. Ends at $00C0C0.","beginsAt":49330,"endsAt":49344,"type":"Misc.","descriptio":"Tiles to generate on Map16 page 1, used for values 0A-17 of $9C."},{"address":"$00C0C1","length":"58 bytes. Ends at $00C0FA.","beginsAt":49345,"endsAt":49402,"type":"ASM","descriptio":"A portion of code used in SMW for generating tiles on Map16 page 1. $00C0C4 is an alternate entry point to this routine; if it is used instead, then the tile generation will not affect item memory."},{"address":"$00C0FB","length":"177 bytes. Ends at $00C1AB.","beginsAt":49403,"endsAt":49579,"type":"ASM","descriptio":"The portion of code in SMW's Map16-tile-generating routine that changes the actual graphics of the tile. Both $00C074 and $00C0C1 use it (the former jumps to it, and it immediately follows the latter)."},{"address":"$00C29E","length":"72 bytes. Ends at $00C2E5.","beginsAt":49822,"endsAt":49893,"type":"Misc.","descriptio":"BG Tiles/Palette for Flipped Gate (1)"},{"address":"$00C2E6","length":"72 bytes. Ends at $00C32D.","beginsAt":49894,"endsAt":49965,"type":"Misc.","descriptio":"BG Tiles/Palette for Flipped Gate (2)"},{"address":"$00C4AF","length":"1 byte","beginsAt":50351,"endsAt":50351,"type":"Misc.","descriptio":"If you change this byte from [02] to [01], the keyhole will activate the normal exit."},{"address":"$00C526","length":"1 byte","beginsAt":50470,"endsAt":50470,"type":"Music","descriptio":"Music played when you have completed the Bonus Game."},{"address":"$00C558","length":"1 byte","beginsAt":50520,"endsAt":50520,"type":"Sound effect","descriptio":"POW Finishing Sound Effect."},{"address":"$00C570","length":"1 byte","beginsAt":50544,"endsAt":50544,"type":"Misc.","descriptio":"[F0] Change to [80] to make the item not drop when the player presses Select."},{"address":"$00C576","length":"1 byte","beginsAt":50550,"endsAt":50550,"type":"Debug","descriptio":"DEBUG: Powerup select (F0 = enable)"},{"address":"$00C599","length":"28 bytes. Ends at $00C5B4.","beginsAt":50585,"endsAt":50612,"type":"Pointer","descriptio":"Pointer to Mario's animation routines. ($7E0071)"},{"address":"$00C5E8","length":"248 bytes. Ends at $00C6DF.","beginsAt":50664,"endsAt":50911,"type":"Misc.","descriptio":"Movement data for all of the castle destruction scenes.\n\nEach data entry consists of two values, the first being the command and the second being the number of frames to keep that command active.\nIf bit 4 of the command byte is set, question marks will be drawn above Mario (as in Roy/Ludwig's scenes).\nIf bit 5 is clear, the rest of the byte is read as input data for $15/$16.\nIf bit 5 is set, then the first four bits are used to run additional commands. x0-x6 will run a variety of small routines, while x7-xF will change Mario's pose.\nIf #$2D, the P-balloon sound will also be played (for Lemmy's).\nLastly, #$FF marks the end of that scene's data."},{"address":"$00C6E0","length":"7 bytes. Ends at $00C6E6.","beginsAt":50912,"endsAt":50918,"type":"Misc.","descriptio":"Base indices to the data at $00C5E8 for each of the castle destruction scenes."},{"address":"$00C92C","length":"2 bytes. Ends at $00C92D.","beginsAt":51500,"endsAt":51501,"type":"Misc.","descriptio":"[F0 3D] Change to [EA EA] to prevent Mario walking after touching goal spheres or the goal tape."},{"address":"$00C9A7","length":"7 bytes. Ends at $00C9AD.","beginsAt":51623,"endsAt":51629,"type":"Level number","descriptio":"The level numbers that triggers the seven castle destruction sequences. The first byte is for scene 1, the second is for scene 2, and so on."},{"address":"$00C9AE","length":"1 byte","beginsAt":51630,"endsAt":51630,"type":"Level number","descriptio":"One of the two level numbers that triggers the credits scene. The other is at $00CA13."},{"address":"$00C9BD","length":"1 byte","beginsAt":51645,"endsAt":51645,"type":"Music","descriptio":"Goal point fade-out music"},{"address":"$00C9FE","length":"3 bytes. Ends at $00CA00.","beginsAt":51710,"endsAt":51712,"type":"ASM","descriptio":"[8D D5 0D] The code itself stores either 01 or 02 to $0DD5. Change to [EA EA EA] to make it possible to set the normal/secret exit info through $0DD5 via LevelASM, sprites, etc. (Note: To activate any exit at all, $0DD5 has to be explicitly set to 01 or 02. Leaving it as 00 will cause no exit to be activated at all, and values 03-FF should not be used.)"},{"address":"$00CA0C","length":"1 byte","beginsAt":51724,"endsAt":51724,"type":"Level number","descriptio":"Translevel number of the level where defeating a boss will activate the secret exit."},{"address":"$00CA12","length":"2 bytes. Ends at $00CA13.","beginsAt":51730,"endsAt":51731,"type":"Misc.","descriptio":"[C9 31] Changing this to [80 11] will prevent any \"boss defeated\" scenes from ever being played.\n$00CA13 is one of the two level numbers that triggers the credits scene. The other is at $00C9AE."},{"address":"$00CA2C","length":"1 byte","beginsAt":51756,"endsAt":51756,"type":"Misc.","descriptio":"Set to 00 to disable midway points (they'll still make you big though)"},{"address":"$00CA31","length":"13 bytes. Ends at $00CA3D.","beginsAt":51761,"endsAt":51773,"type":"Subroutine (JSR)","descriptio":"Set the \"peace\" pose for the player depending on whether he's on Yoshi or not."},{"address":"$00CB0C","length":"1 byte","beginsAt":51980,"endsAt":51980,"type":"ASM","descriptio":"Change from '8D' to '0C' to not make HDMA gradients act strangely at the end of the level (goal tape). Of course, you should still avoid using HDMA channel 7 if this is all you change."},{"address":"$00CB12","length":"258 bytes. Ends at $00CC13.","beginsAt":51986,"endsAt":52243,"type":"Misc.","descriptio":"Opening window data.\n$00CBA3 - Change 4B to 49 to fix a misplaced tile on the keyhole \"iris in\" effect."},{"address":"$00CC84","length":"1 byte","beginsAt":52356,"endsAt":52356,"type":"Debug","descriptio":"DEBUG: Free-roaming mode (F0 = enable)"},{"address":"$00CC85","length":"1 byte","beginsAt":52357,"endsAt":52357,"type":"Debug","descriptio":"Change this to 00 and you'll activate free roaming mode (just like $00CC84)"},{"address":"$00CD4E","length":"4 bytes. Ends at $00CD51.","beginsAt":52558,"endsAt":52561,"type":"ASM","descriptio":"[AD 8F 14 0D] Change to [EA EA EA AD] to enable climbing while holding an item"},{"address":"$00CD5F","length":"1 byte","beginsAt":52575,"endsAt":52575,"type":"Mario physics","descriptio":"Change from [15] to [16] so you don't automatically grab whatever you are climbing (vine, net, etc.) again if you happen to still be holding up/down. Instead after you jump it will let go and let you jump until you press up/down again."},{"address":"$00CDA9","length":"4 bytes. Ends at $00CDAC.","beginsAt":52649,"endsAt":52652,"type":"Misc.","descriptio":"Mario riding on Yoshi animations"},{"address":"$00CDC5","length":"1 byte","beginsAt":52677,"endsAt":52677,"type":"Misc.","descriptio":"Animation frame for Mario crouching on Yoshi"},{"address":"$00CDF6","length":"131 bytes. Ends at $00CE78.","beginsAt":52726,"endsAt":52856,"type":"Subroutine (JSR)","descriptio":"L & R scrolling routine.\nChange $00CDFC from D0 to 80 to disable L & R scrolling. Or change to [EA EA] to allow scrolling even if the player is holding multiple buttons (works best if $00CE12 is set to 01).\n$00CE12 is the number of frames L or R must be held before screen scrolling occurs.\n$00CE40 is the screen scroll sound effect."},{"address":"$00CE99","length":"8 bytes. Ends at $00CEA0.","beginsAt":52889,"endsAt":52896,"type":"Mario tilemap","descriptio":"Spin Jump frame table\n(00 00 - Mario Standing - Small - Big)\n(25 44 - Mario Back to Screen - Small - Big)\n(00 00 - Same as first)\n(0F 45 - Mario Facing Screen - Small - Big)\n\nThey are indexed by the frame counter."},{"address":"$00CEA1","length":"8 bytes. Ends at $00CEA8.","beginsAt":52897,"endsAt":52904,"type":"Mario tilemap","descriptio":"Spinjump direction table."},{"address":"$00CEA9","length":"8 bytes. Ends at $00CEB0.","beginsAt":52905,"endsAt":52912,"type":"Mario tilemap","descriptio":"Cape spin cape image table.\n\nThese are run while spin jumping with a cape or doing a spin attack. Only these four cape images ($02,$07,$06,$09) seem to work with cape contact, and will only work if RAM $14A6 is above zero.\n"},{"address":"$00CEBE","length":"1 byte","beginsAt":52926,"endsAt":52926,"type":"Mario physics","descriptio":"Amount of frames to show the cape at highest altitude frame. (After, for example, a spin-jump has been done.)"},{"address":"$00CF42","length":"1 byte","beginsAt":53058,"endsAt":53058,"type":"Mario physics","descriptio":"Power-up that can attack with both cape spin and spin jump"},{"address":"$00CF75","length":"1 byte","beginsAt":53109,"endsAt":53109,"type":"Mario tilemap","descriptio":"[3F] Mario shooting fireball on ground pose."},{"address":"$00CF7B","length":"1 byte","beginsAt":53115,"endsAt":53115,"type":"Mario tilemap","descriptio":"[16] Mario shooting fireball in air pose."},{"address":"$00CF90","length":"1 byte","beginsAt":53136,"endsAt":53136,"type":"Mario tilemap","descriptio":"[0F] Mario turning around while holding item pose."},{"address":"$00CFCA","length":"1 byte","beginsAt":53194,"endsAt":53194,"type":"Controller","descriptio":"Which button to press to look up. (Look at Ram Address $7E:0015 for values)."},{"address":"$00CFCB","length":"1 byte","beginsAt":53195,"endsAt":53195,"type":"Mario physics","descriptio":"Change from [F0] to [80] to disable looking up."},{"address":"$00CFCE","length":"1 byte","beginsAt":53198,"endsAt":53198,"type":"Mario tilemap","descriptio":"This is the player looking up pose, the default is #$03."},{"address":"$00D034","length":"8 bytes. Ends at $00D03B.","beginsAt":53300,"endsAt":53307,"type":"Mario physics","descriptio":"Cape Collision X (Horizontal) Offsets: Two bytes for right and left, on ground and in air.\n\nThe first two sets are for when Mario is on the ground while spinning ($0C,$00- right; $F4,$FF left), and the second two are while he is in the air ($08,$00 - right; $F8,$FF - left)\n\nThe first byte in each set determines the position per pixel, the second sets whether it is in front or behind him ($FF is behind, $00 is in front) Use $FF-$80 for the behind byte($FF), and $00-$79 for the in front byte ($00)\n\nThis does not effect the image offsets."},{"address":"$00D03C","length":"8 bytes. Ends at $00D043.","beginsAt":53308,"endsAt":53315,"type":"Mario physics","descriptio":"Cape Collision Y (Vertical) Offsets: 2 bytes for right and left, on ground and in air.\n\nThe first two sets are for when Mario is on the ground while spinning ($10,$00 - right; $10,$00 - left), and the second two are while he is in the air ($02,$00 - right; $02,$00 - left)\n\nThe first byte in each set determines the position per pixel, the second sets whether it is above him or below him ($FF is below his feet, $00 is from his feet up) Use $FF-$80 for the below byte ($FF), and $00-$79 for the above byte ($00)\n\nThis does not effect the image offsets."},{"address":"$00D044","length":"30 bytes. Ends at $00D061.","beginsAt":53316,"endsAt":53345,"type":"Mario physics","descriptio":"Routine that does the actual calculation for cape-interaction. Uses the two tables at $00:D034 and $00:D03C."},{"address":"$00D062","length":"31 bytes. Ends at $00D080.","beginsAt":53346,"endsAt":53376,"type":"Subroutine (JSR)","descriptio":"Cape Swing routine.\n$00:D065 controls which power-up the player needs to have to be able to cape spin.\nChange $00:D067 to 00 to make mario cape spin in all forms.\n$00:D077 controls how long Cape Spin lasts.\n$00:D07C controls the cape spin sound effect to generate."},{"address":"$00D081","length":"45 bytes. Ends at $00D0AD.","beginsAt":53377,"endsAt":53421,"type":"Subroutine (JSR)","descriptio":"Fireball throwing routine.\n$00D082 is the power-up that can throw fireballs.\nChange $00D084 to 00 to let Mario throw fireballs in all forms.\nChange $00D085 from A5 73 to A9 00 to enable throwing fireballs while ducking.\nChange $00D087 from 0D 7A 18 to EA EA EA to enable throwing fireballs while on Yoshi.\nChange $00D08A to 80 do disable throwing fireballs.\nChange $00D093 from F0 to 80 to disable throwing fireballs while spin jumping."},{"address":"$00D0B9","length":"1 byte","beginsAt":53433,"endsAt":53433,"type":"Mario tilemap","descriptio":"Mario death pose (uses RAM $13E0)"},{"address":"$00D0D5","length":"3 bytes. Ends at $00D0D7.","beginsAt":53461,"endsAt":53463,"type":"ASM","descriptio":"Set 9C C1 0D to EA EA EA in order to not lose Yoshi on the OW when you fall down a pit when on top of Yoshi."},{"address":"$00D0D8","length":"3 bytes. Ends at $00D0DA.","beginsAt":53464,"endsAt":53466,"type":"ASM","descriptio":"ASM that handles losing lives. Change to [EA EA EA] to not lose a life after dying. Change to [80 03 EA] to always go to the Game Over screen when dying."},{"address":"$00D0DE","length":"1 byte","beginsAt":53470,"endsAt":53470,"type":"Music","descriptio":"Game Over music"},{"address":"$00D0F1","length":"1 byte","beginsAt":53489,"endsAt":53489,"type":"ASM","descriptio":"ASM that handles the 'TIME UP!' message. Change 'D0' to '80' to disable it."},{"address":"$00D0F8","length":"10 bytes. Ends at $00D101.","beginsAt":53496,"endsAt":53505,"type":"Misc.","descriptio":"Controls timer for TIME UP/GAME OVER message. Change $00D0F9 from C0 to 00 to remove the animation, and change $00D0FE from FF to whatever you want to shorten the timer (however, 00 is as long as FF; 01 is the shortest)."},{"address":"$00D11A","length":"1 byte","beginsAt":53530,"endsAt":53530,"type":"ASM","descriptio":"Change [85] to [60] and Mario will not flip X-wise when he dies."},{"address":"$00D11D","length":"12 bytes. Ends at $00D128.","beginsAt":53533,"endsAt":53544,"type":"Mario tilemap","descriptio":"Mario Shrinking Animation poses (uses RAM $13E0)."},{"address":"$00D141","length":"1 byte","beginsAt":53569,"endsAt":53569,"type":"Timer","descriptio":"How long flashing invincibility (when you get hit) lasts"},{"address":"$00D156","length":"5 bytes. Ends at $00D15A.","beginsAt":53590,"endsAt":53594,"type":"ASM","descriptio":"Change to EE E4 18 EA 64 to turn the Mushroom into a 1up, but it'll still play the animation"},{"address":"$00D18D","length":"6 bytes. Ends at $00D192.","beginsAt":53645,"endsAt":53650,"type":"Mario physics","descriptio":"Speed at which Mario enters/exits a pipe.\nThe first two bytes are horizontal speed when entering/exiting a horizontal pipe.\nThe next two bytes are both horizontal speed in vertical pipes, and vertical speed in horizontal pipes.\nThe last two are the vertical speed in vertical pipes."},{"address":"$00D1AE","length":"1 byte","beginsAt":53678,"endsAt":53678,"type":"Misc.","descriptio":"Animation frame for Mario entering horizontal pipe on Yoshi"},{"address":"$00D20A","length":"1 byte","beginsAt":53770,"endsAt":53770,"type":"Mario tilemap","descriptio":"Mario's pose for entering a vertical pipe (Default is 0F - facing screen)"},{"address":"$00D229","length":"1 byte","beginsAt":53801,"endsAt":53801,"type":"Misc.","descriptio":"Animation frame for Mario entering vertical pipe on Yoshi"},{"address":"$00D231","length":"5 bytes. Ends at $00D235.","beginsAt":53809,"endsAt":53813,"type":"Overworld border","descriptio":"Change (A9 02 8D F9 13) to EA EA EA EA EA to remove Mario's priority when he's going down a pipe."},{"address":"$00D255","length":"1 byte","beginsAt":53845,"endsAt":53845,"type":"Sound effect","descriptio":"Mario emerge from vertical pipe Sound Effect."},{"address":"$00D2BD","length":"16 bytes. Ends at $00D2CC.","beginsAt":53949,"endsAt":53964,"type":"Mario physics","descriptio":"Mario's jump height. The earlier ones are when Mario is moving slowly (or standing still); the latter is when he's moving faster. Even entries are normal jump, odd are spin.\n\nFormula:\nLDA $7B\nBPL +\nEOR #$FF\nINC A\n+\nLSR #2\nAND #$FE\nTAX\nLDA $140D\nBEQ +\nINX\n+\nLDA $00D2BD,x\nSTA $7D"},{"address":"$00D345","length":"104 bytes. Ends at $00D3AC.","beginsAt":54085,"endsAt":54188,"type":"Mario physics","descriptio":"Accelerations for Mario in a non-slippery level, or in a slippery level while in midair.\nThe table is split into sets of four 16-bit values each, in the order of $13E1. The values in these sets are ordered as: walking (no X/Y) left, running (X/Y held) left, walking right, running right."},{"address":"$00D3AD","length":"16 bytes. Ends at $00D3BC.","beginsAt":54189,"endsAt":54204,"type":"Mario physics","descriptio":"Accelerations for Mario when flying.\nConsists of 16-bit values in two sets (facing left/right) of two groups (moving left/right) with two values each (no X/Y and X/Y held)."},{"address":"$00D3BD","length":"24 bytes. Ends at $00D3D4.","beginsAt":54205,"endsAt":54228,"type":"Mario physics","descriptio":"Sliding accelerations on slopes in a non-slippery level.\nEach value is 16-bit, in the same order as $13E1 (excluding flat ground)."},{"address":"$00D3D5","length":"104 bytes. Ends at $00D43C.","beginsAt":54229,"endsAt":54332,"type":"Mario physics","descriptio":"Turning decelerations for Mario in a non-slippery level, or in a slippery level while in midair.\nThe table is split into sets of four 16-bit values each, in the order of $13E1. The values in these sets are ordered as: walking (no X/Y) left, running (X/Y held) left, walking right, running right."},{"address":"$00D43D","length":"104 bytes. Ends at $00D4A4.","beginsAt":54333,"endsAt":54436,"type":"Mario physics","descriptio":"Accelerations for Mario in a slippery level.\nThe table is split into sets of four 16-bit values, in the order of $13E1. The values in these sets are ordered as: walking (no X/Y) left, running (X/Y held) left, walking right, running right."},{"address":"$00D4B5","length":"24 bytes. Ends at $00D4CC.","beginsAt":54453,"endsAt":54476,"type":"Mario physics","descriptio":"Sliding accelerations on slopes in a slippery level.\nEach value is 16-bit, in the same order as $13E1 (excluding flat ground)."},{"address":"$00D4CD","length":"104 bytes. Ends at $00D534.","beginsAt":54477,"endsAt":54580,"type":"Mario physics","descriptio":"Turning decelerations for Mario in a slippery level.\nThe table is split into sets of four 16-bit values, in the order of $13E1. The values in these sets are ordered as: walking (no X/Y) left, running (X/Y held) left, walking right, running right."},{"address":"$00D535","length":"104 bytes. Ends at $00D59C.","beginsAt":54581,"endsAt":54684,"type":"Mario physics","descriptio":"Mario's maximum X speeds on flat ground and on slopes.\nThe table consists of sets of 8 bytes, in the order of $13E1. Each of these sets then consists of four groups of two bytes each (for max left and max right), in the order: walking, running, running fast, sprinting.\n\nThe \"running fast\" values get used when running faster than #$23 (defined at $00D723) and either on the ground or shot out of a diagonal pipe."},{"address":"$00D59D","length":"16 bytes. Ends at $00D5AC.","beginsAt":54685,"endsAt":54700,"type":"Mario physics","descriptio":"Mario's maximum X speeds while flying. The first 8 bytes are facing right, the second 8 are facing left.\nEach of these sets are split into four groups of two bytes each (for maximum left and right speeds). Only the first two groups are actually used, for flying without X/Y and flying with X/Y respectively.\nAlso, in case it's not clear, the maximum speeds in the direction opposite of Mario's are from pressing that direction with B to slow down (e.g. <+B when facing right)."},{"address":"$00D5AD","length":"16 bytes. Ends at $00D5BC.","beginsAt":54701,"endsAt":54716,"type":"Mario physics","descriptio":"Mario's maximum X speeds in water.\nThe first set of 8 bytes is for when Mario isn't carrying an item, while the second set is with one. Each set consists of four groups of two bytes each (for max left and max right), in the order: on ground, swimming, on ground in a tide, swimming in a tide."},{"address":"$00D5BD","length":"12 bytes. Ends at $00D5C8.","beginsAt":54717,"endsAt":54728,"type":"Mario physics","descriptio":"Mario's maximum X speeds when sliding down slopes with the down button. In the order of $13E1, without flat ground or flying included."},{"address":"$00D5C9","length":"34 bytes. Ends at $00D5EA.","beginsAt":54729,"endsAt":54762,"type":"Mario physics","descriptio":"Mario's minimum X speeds on flat ground and on slopes.\nThe table is in the order of $13E1. Each entry gets two bytes; the second byte is the actual speed ($7B), while the first is the accumulating fraction bits ($7A).\n\nThe last 8 bytes of the table seem to be unused."},{"address":"$00D5CA","length":"30 bytes. Ends at $00D5E7.","beginsAt":54730,"endsAt":54759,"type":"Mario physics","descriptio":"How much Mario moves while on slopes, added to $7B. Values correspond to $7E:13E1 (slope type) divided by four. Every second byte is unused."},{"address":"$00D5E8","length":"1 byte","beginsAt":54760,"endsAt":54760,"type":"Mario physics","descriptio":"X speed of player as he's floating in water freely in a level where a Layer 3 tide is active. (Does not affect the speed given when the player manually moves around on his own horizontally.)"},{"address":"$00D5EA","length":"1 byte","beginsAt":54762,"endsAt":54762,"type":"Mario physics","descriptio":"X speed of player as he's floating in water AND standing on a platform (like the floating grassy platforms) in a level where a Layer 3 tide is active. (Does not affect the speed given when the player manually moves around on his own horizontally.)"},{"address":"$00D603","length":"1 byte","beginsAt":54787,"endsAt":54787,"type":"Controller","descriptio":"Which button to press to duck. Format: byetUDLR; b = A or B; y = X or Y; e = select; t = Start; U = up; D = down; L = left, R = right."},{"address":"$00D604","length":"1 byte","beginsAt":54788,"endsAt":54788,"type":"ASM","descriptio":"Change from F0 (BEQ) to 80 (BRA) to disable ducking.\nNote that setting $01EB16 to [EA EA A5 73] (NOP #2 : LDA $73) is a good idea if you're using this."},{"address":"$00D61C","length":"2 bytes. Ends at $00D61D.","beginsAt":54812,"endsAt":54813,"type":"ASM","descriptio":"Change from 30 12 to EA EA to disable jumping."},{"address":"$00D63E","length":"1 byte","beginsAt":54846,"endsAt":54846,"type":"ASM","descriptio":"Change from 10 to 80 to disable Spin Jump."},{"address":"$00D644","length":"1 byte","beginsAt":54852,"endsAt":54852,"type":"Mario physics","descriptio":"[19] Change to [00] to allow Mario to spin jump while carrying an item. Because Mario spins so fast, the animation will not be smooth."},{"address":"$00D645","length":"1 byte","beginsAt":54853,"endsAt":54853,"type":"ASM","descriptio":"Change this from \"1A\" to \"60\" to disable spin jumping. Unlike 0583E (SNES $00:D63E) from \"10\" to \"80\", changing this address does not make the \"A\" button do the regular jump, but it disables spin jumping altogether. This way, you can use the \"A\" button for something else without it jumping automatically.\n\nNote: Still allows you to spinjump out of the water and dismount Yoshi."},{"address":"$00D64A","length":"1 byte","beginsAt":54858,"endsAt":54858,"type":"Misc.","descriptio":"Spin Jump Sound, uses bank 1DFC."},{"address":"$00D65E","length":"10 bytes. Ends at $00D667.","beginsAt":54878,"endsAt":54887,"type":"ASM","descriptio":"Mario jumping routine. (Sound effect + store to Mario Y speed.)\n$00D65F is the Sound effect for Mario jumping. $00D661 is the bank for the sound effect. By default it uses $1DFA, but you can make it use $1DFC by changing $00D661 to FC or $1DF9 by changing it to F9."},{"address":"$00D66F","length":"1 byte","beginsAt":54895,"endsAt":54895,"type":"Mario physics","descriptio":"Change to 80 to disable Cape Flight and Jumping High while dashing. Interestingly enough, changing it to A9 will make Mario do a dash jump with every jump, even at a standstill, and will allow him to gain speed in the air. In addition, doing so will have the effect of causing every Jump performed by Cape Mario to become a Cape Flight."},{"address":"$00D674","length":"1 byte","beginsAt":54900,"endsAt":54900,"type":"Mario physics","descriptio":"[D0] Change to 80 to prevent the player from flying with a cape. The player will still be able to float, cape-spin, and jump higher when running but will never \"take off\"."},{"address":"$00D677","length":"1 byte","beginsAt":54903,"endsAt":54903,"type":"Mario physics","descriptio":"Mario fly time"},{"address":"$00D707","length":"1 byte","beginsAt":55047,"endsAt":55047,"type":"Mario tilemap","descriptio":"[0D] Mario's turning(skidding) pose"},{"address":"$00D717","length":"1 byte","beginsAt":55063,"endsAt":55063,"type":"ASM","descriptio":"Change [50] to [80] to disable running and cause Mario to never run. The Y (or X) button will not cause Mario to run. This does not affect other uses of the Y button, like shooting fireballs or carrying sprites."},{"address":"$00D718","length":"1 byte","beginsAt":55064,"endsAt":55064,"type":"Mario physics","descriptio":"Change [1E] to [00] to cause Mario to always run, as if the Y button is always down. This does not affect other uses of the Y button, like shooting fireballs or carrying sprites. Also, Cape Mario will still need the Y button to fly."},{"address":"$00D72C","length":"1 byte","beginsAt":55084,"endsAt":55084,"type":"Misc.","descriptio":"Number of frames Mario should continue to show his running frames for after jumping."},{"address":"$00D7A5","length":"3 bytes. Ends at $00D7A7.","beginsAt":55205,"endsAt":55207,"type":"Mario physics","descriptio":"Gravity. The first byte is when not holding B (or A), the second is gravity when holding B/A, and the third is when riding on a winged Yoshi."},{"address":"$00D7AF","length":"1 byte","beginsAt":55215,"endsAt":55215,"type":"Mario physics","descriptio":"Falling maximum speed (without button held)"},{"address":"$00D7B0","length":"1 byte","beginsAt":55216,"endsAt":55216,"type":"Mario physics","descriptio":"Falling maximum speed with button held"},{"address":"$00D7B9","length":"1 byte","beginsAt":55225,"endsAt":55225,"type":"Mario physics","descriptio":"The speed at which Mario falls with a cape. Set it lower to make him float slower, higher to float faster, and over D0 to enable unlimited jumping in midair with the cape."},{"address":"$00D7BA","length":"1 byte","beginsAt":55226,"endsAt":55226,"type":"Mario physics","descriptio":"Flight acceleration (added to y speed)"},{"address":"$00D7C8","length":"7 bytes. Ends at $00D7CE.","beginsAt":55240,"endsAt":55246,"type":"Mario physics","descriptio":"Maximum falling speed for cape mario, index by RAM address $1407 (cape phase)."},{"address":"$00D7CF","length":"6 bytes. Ends at $00D7D4.","beginsAt":55247,"endsAt":55252,"type":"Mario physics","descriptio":"cape speed"},{"address":"$00D805","length":"1 byte","beginsAt":55301,"endsAt":55301,"type":"Mario physics","descriptio":"Power-up that can fly"},{"address":"$00D8EA","length":"1 byte","beginsAt":55530,"endsAt":55530,"type":"Misc.","descriptio":"power-up that can float (cape by default)"},{"address":"$00D905","length":"1 byte","beginsAt":55557,"endsAt":55557,"type":"Mario physics","descriptio":"change to 16 = Raccoon Mario (floating if you tap Y instead of holding it)"},{"address":"$00D909","length":"1 byte","beginsAt":55561,"endsAt":55561,"type":"Mario physics","descriptio":"Time until you stop floating after you have pressed B while while in the air with a cape."},{"address":"$00D972","length":"1 byte","beginsAt":55666,"endsAt":55666,"type":"Mario physics","descriptio":"Change to 00 to disable sprinting after running on the ground for a long period of time. Note that cape flight will also be disabled as a consequence."},{"address":"$00D998","length":"1 byte","beginsAt":55704,"endsAt":55704,"type":"ASM","descriptio":"Change this from [F0] (BEQ) to [80] (BRA) so that when the player is carrying an item while swimming, his Y speed won't be affected (the player will sink normally). Also, if you change this to [D0] (BNE), the player will float if carrying nothing and sink if carrying an item."},{"address":"$00D9D0","length":"1 byte","beginsAt":55760,"endsAt":55760,"type":"Mario physics","descriptio":"Maximum sinking speed of player when holding an item while swimming. When adjusting this value, it's recommended that it's equal to x5BD4. Format of RAM $7E007D."},{"address":"$00D9D4","length":"1 byte","beginsAt":55764,"endsAt":55764,"type":"Mario physics","descriptio":"Maximum sinking speed of player when holding an item while swimming. When adjusting this value, it's recommended that it's equal to x5BD0. Format of RAM $7E007D."},{"address":"$00D9D8","length":"1 byte","beginsAt":55768,"endsAt":55768,"type":"Mario physics","descriptio":"Maximum rising speed of player when holding an item while swimming. When adjusting this value, it's recommended that it's equal to $00D9DC. Format of RAM $7E007D."},{"address":"$00D9DC","length":"1 byte","beginsAt":55772,"endsAt":55772,"type":"Mario physics","descriptio":"Maximum rising speed of player when holding an item while swimming. When adjusting this value, it's recommended that it's equal to x5BD8. Format of RAM $7E007D."},{"address":"$00DA55","length":"84 bytes. Ends at $00DAA8.","beginsAt":55893,"endsAt":55976,"type":"Mario physics","descriptio":"Mario's horizontal water interaction routine.\nTo disable layer 3 tides moving him, set $00:DA6F (0x05C6F) and $00:DA58 (0x05C58) to 80 (BRA)."},{"address":"$00DA8E","length":"1 byte","beginsAt":55950,"endsAt":55950,"type":"Mario tilemap","descriptio":"Shooting fireball while swimming pose. Default is #$18 (Swimming pose 3)"},{"address":"$00DAAA","length":"1 byte","beginsAt":55978,"endsAt":55978,"type":"Sound effect","descriptio":"Sound effect that plays when you press the button to swim"},{"address":"$00DAB7","length":"1 byte","beginsAt":55991,"endsAt":55991,"type":"Mario physics","descriptio":"Vine climbing speed 1 (right and down)"},{"address":"$00DAB9","length":"1 byte","beginsAt":55993,"endsAt":55993,"type":"Mario physics","descriptio":"Vine climbing speed 2 (left and up)"},{"address":"$00DB9A","length":"1 byte","beginsAt":56218,"endsAt":56218,"type":"ASM","descriptio":"[10] Change to 80 to disable jumping while climbing."},{"address":"$00DBA6","length":"1 byte","beginsAt":56230,"endsAt":56230,"type":"Sound effect","descriptio":"Sound effect to play when jumping while climbing. The bank it stores to is located at $00DBA8 [$1DFA by default] and can be changed to $1DF9 or $1DFC."},{"address":"$00DBB3","length":"1 byte","beginsAt":56243,"endsAt":56243,"type":"Sound effect","descriptio":"Sound effect played when Mario hits a net. (1DF9)"},{"address":"$00DC2D","length":"75 bytes. Ends at $00DC77.","beginsAt":56365,"endsAt":56439,"type":"Mario physics","descriptio":"Routine that updates the player's X and Y position by X and Y speed. Here is the formula:\n\nM = $SS/$10\n\nM is the approximate amount of pixels the player has moved per frame. SS is the value in $7B or $7D."},{"address":"$00DC78","length":"4 bytes. Ends at $00DC7B.","beginsAt":56440,"endsAt":56443,"type":"Misc.","descriptio":"Number of animation frames to use for walking/running Mario, indexed by Mario's status.\n\nEx: db $01,$02,$02,$02 The first byte it for small Mario, next is Super (Big) Mario, then Cape Mario, and finally Fire Mario. $01 means 2 frames for small Mario and $02 means 3 frames for the others. Longer animations are possible, but that'd require moving stuff around in $13E0, which hasn't been researched yet."},{"address":"$00DC7C","length":"1 byte","beginsAt":56444,"endsAt":56444,"type":"Mario physics","descriptio":"Animation rates for both Mario's run animation and his cape animation (as it's flapping in the \"wind\" from running).\nIndexed by the absolute value of Mario's X speed, divided by 8. For specifically the run animation, $13E5 is also added to the index."},{"address":"$00DD4E","length":"228 bytes. Ends at $00DE31.","beginsAt":56654,"endsAt":56881,"type":"Mario tilemap","descriptio":"X positions of Mario's tiles in various poses, two bytes per tile."},{"address":"$00DDDE","length":"2 bytes. Ends at $00DDDF.","beginsAt":56798,"endsAt":56799,"type":"Mario tilemap","descriptio":"X offset of cape when climbing."},{"address":"$00DE32","length":"228 bytes. Ends at $00DF15.","beginsAt":56882,"endsAt":57109,"type":"Mario tilemap","descriptio":"Y positions of Mario's tiles in various poses, two bytes per tile."},{"address":"$00DEC2","length":"2 bytes. Ends at $00DEC3.","beginsAt":57026,"endsAt":57027,"type":"Mario tilemap","descriptio":"Y offset of cape when climbing."},{"address":"$00DF16","length":"4 bytes. Ends at $00DF19.","beginsAt":57110,"endsAt":57113,"type":"Mario tilemap","descriptio":"Tileset to use for Mario, paged by status ($7E0019)"},{"address":"$00DF1A","length":"70 bytes. Ends at $00DF5F.","beginsAt":57114,"endsAt":57183,"type":"Pointer","descriptio":"Tile expansion pointer table (Small Mario)"},{"address":"$00DF60","length":"122 bytes. Ends at $00DFD9.","beginsAt":57184,"endsAt":57305,"type":"Pointer","descriptio":"Tile expansion pointer table (Big Mario)"},{"address":"$00DFDA","length":"50 bytes. Ends at $00E00B.","beginsAt":57306,"endsAt":57355,"type":"Mario tilemap","descriptio":"Tile expansion table (8x8 tiles in GFX00 used by Mario)"},{"address":"$00E00C","length":"192 bytes. Ends at $00E0CB.","beginsAt":57356,"endsAt":57547,"type":"Mario tilemap","descriptio":"Mario upper tile."},{"address":"$00E0CC","length":"192 bytes. Ends at $00E18B.","beginsAt":57548,"endsAt":57739,"type":"Mario tilemap","descriptio":"Mario lower tile."},{"address":"$00E18C","length":"2 bytes. Ends at $00E18D.","beginsAt":57740,"endsAt":57741,"type":"Palette","descriptio":"This is a two byte table used to index the player's palette based on the direction the player is facing."},{"address":"$00E23A","length":"44 bytes. Ends at $00E265.","beginsAt":57914,"endsAt":57957,"type":"Mario tilemap","descriptio":"Cape tile map"},{"address":"$00E266","length":"44 bytes. Ends at $00E291.","beginsAt":57958,"endsAt":58001,"type":"Mario tilemap","descriptio":"cape offsets"},{"address":"$00E2D3","length":"1 byte","beginsAt":58067,"endsAt":58067,"type":"Debug","descriptio":"DEBUG: Infinite star (set to 00 to activate)"},{"address":"$00E30D","length":"1 byte","beginsAt":58125,"endsAt":58125,"type":"Misc.","descriptio":"How many palettes to cycle through when Mario/Luigi is invincible, -1"},{"address":"$00E34F","length":"4 bytes. Ends at $00E352.","beginsAt":58191,"endsAt":58194,"type":"Misc.","descriptio":"Change to EA EA EA EA (NOP #4) and all forms of Big Mario will not go into the ground a few pixels."},{"address":"$00E35D","length":"3 bytes. Ends at $00E35F.","beginsAt":58205,"endsAt":58207,"type":"ASM","descriptio":"Change to $EA,$EA,$EA (NOP #3) to cancel out Mario moving up and down one pixel while walking and running. This is useful if you are using more than three animation frames for walking/running, and thus can be worked into your GFX/tilemap accordingly."},{"address":"$00E364","length":"1 byte","beginsAt":58212,"endsAt":58212,"type":"ASM","descriptio":"Change to $80 (BRA) to disable Mario from being offset vertically by one pixel while running on the wall (using the purple triangles). This should be combined with $00E34F and $00E35D for the complete effect."},{"address":"$00E3AA","length":"1 byte","beginsAt":58282,"endsAt":58282,"type":"Misc.","descriptio":"Which animation frame value to start pulling tilemaps from the size-independent table"},{"address":"$00E3FE","length":"1 byte","beginsAt":58366,"endsAt":58366,"type":"Misc.","descriptio":"power-up that shows the cape graphics"},{"address":"$00E4B9","length":"33 bytes. Ends at $00E4D9.","beginsAt":58553,"endsAt":58585,"type":"Misc.","descriptio":"Values stored to $13E1 for each slope tile.\n\nRather than being indexed by the tile's Map16 tile number, this table is instead indexed based on the actual slope tile used; for instance, gradual slopes have 8 tiles (4 left-facing and 4 right-facing) whereas normal slopes have 4 (2 left-facing and 2 right-facing). The slopes in the table by index are:\n00 - Gradual\n08 - Normal\n0C - Steep\n0E - Purple Triangle\n10 - Very Steep Ledge-edge (from standard object 13)\n12 - Upside-down Steep (unused)\n14 - Upside-down Normal (unused)\n18 - Conveyors\n1C - Very Steep\n20 - Flat ground"},{"address":"$00E4DA","length":"33 bytes. Ends at $00E4FA.","beginsAt":58586,"endsAt":58618,"type":"Mario physics","descriptio":"Y speeds to give Mario when standing stationary or walking down on various slope tiles. These values are ordered the same way as $00E4B9."},{"address":"$00E4FB","length":"33 bytes. Ends at $00E51B.","beginsAt":58619,"endsAt":58651,"type":"Mario physics","descriptio":"Y speeds to give Mario when moving up various slope tiles (i.e. towards its \"peak\"). These values are ordered the same way as $00E4B9, though the \"flat ground\" value is unused."},{"address":"$00E51C","length":"33 bytes. Ends at $00E53C.","beginsAt":58652,"endsAt":58684,"type":"Misc.","descriptio":"Sizes of the \"top\" area on various slope tiles; if Mario is moving downwards while within this distance from the top of the ledge/slope, he will be pushed on top of it. These values are ordered the same way as $00E4B9."},{"address":"$00E53D","length":"33 bytes. Ends at $00E55D.","beginsAt":58685,"endsAt":58717,"type":"Misc.","descriptio":"Values stored to $13EE/$15B8 for each slope tile. These values are ordered the same way as $00E4B9, although the upside-down slope values actually do get used (perhaps unintentionally) for fireballs."},{"address":"$00E55E","length":"106 bytes. Ends at $00E5C7.","beginsAt":58718,"endsAt":58823,"type":"Misc.","descriptio":"Indices to the tables at $00E4B9-$00E53D and $00E632, when in any tileset except 0 and 7 (used for upside-down slopes). This table is indexed by Map16 tile number, for the range 16E-1D7.\n\nAn index to this table is stored at $82."},{"address":"$00E5C8","length":"106 bytes. Ends at $00E631.","beginsAt":58824,"endsAt":58929,"type":"Misc.","descriptio":"Indices to the tables at $00E4B9-$00E53D and $00E632, when in tilesets 0 or 7 (used for diagonal pipes). This table is indexed by Map16 tile number, for the range 16E-1D7.\n\nAn index to this table is stored at $82."},{"address":"$00E632","length":"512 bytes. Ends at $00E831.","beginsAt":58930,"endsAt":59441,"type":"Misc.","descriptio":"Values stored to $1694 for slopes, to indicate how far the top of the slope is from the top of the actual tile at any given X position; essentially, these values define the actual shape of each slope.\n\nThe indices to this table are the same as $00E4B9 (excluding flat ground), except multiplied by #$10 and with the sprite's X position within the tile (from $9A) added to it."},{"address":"$00EA08","length":"3 bytes. Ends at $00EA0A.","beginsAt":59912,"endsAt":59914,"type":"ASM","descriptio":"Change [20 29 F6] to [EA EA EA] (JSR $F629 to NOP NOP NOP) to prevent the player from getting killed when stuck in a block, such as a cement block. Instead, he will get thrown downwards."},{"address":"$00EA82","length":"1 byte","beginsAt":60034,"endsAt":60034,"type":"Mario physics","descriptio":"[10] Change to 80 to disable spin jumping from water"},{"address":"$00EA8E","length":"1 byte","beginsAt":60046,"endsAt":60046,"type":"Sound effect","descriptio":"Mario spin-jump from water sound effect."},{"address":"$00EA9C","length":"1 byte","beginsAt":60060,"endsAt":60060,"type":"Mario tilemap","descriptio":"Mario's pose as he comes out of the water."},{"address":"$00EAA0","length":"1 byte","beginsAt":60064,"endsAt":60064,"type":"Mario physics","descriptio":"How high Mario can jump out of the water."},{"address":"$00EAC1","length":"26 bytes. Ends at $00EADA.","beginsAt":60097,"endsAt":60122,"type":"Objects","descriptio":"Table of which slope tiles on Map16 page 1 are in water."},{"address":"$00EB79","length":"2 bytes. Ends at $00EB7A.","beginsAt":60281,"endsAt":60282,"type":"ASM","descriptio":"Change to A9 00 to make Super/Fire/Cape Mario have a 16x16 interaction field (like Small Mario) or change it to A9 01 to have a 16x32 interaction field (like big Mario) (in conjunction with addresses $01B4C0 and $03B67C)"},{"address":"$00EBFD","length":"4 bytes. Ends at $00EC00.","beginsAt":60413,"endsAt":60416,"type":"Misc.","descriptio":"Code that checks Mario's powerup state when entering doors.\n\nChange to [80 02] to allow small doors can be entered even if Mario is big, and normal doors to be entered even if riding Yoshi."},{"address":"$00EC0B","length":"1 byte","beginsAt":60427,"endsAt":60427,"type":"Controller","descriptio":"Change from 16 to 15 to allow Mario to enter doors by holding up, instead of just pressing it."},{"address":"$00EC0D","length":"1 byte","beginsAt":60429,"endsAt":60429,"type":"Controller","descriptio":"What button to press to activate a door. Format of $7E0015. (byetUDLR)"},{"address":"$00EC11","length":"1 byte","beginsAt":60433,"endsAt":60433,"type":"Sound effect","descriptio":"Entering Door Sound Effect."},{"address":"$00EE69","length":"2 bytes. Ends at $00EE6A.","beginsAt":61033,"endsAt":61034,"type":"ASM","descriptio":"Change to EA EA (NOP #2) if you want Small Mario to be able to break turn blocks with a spin jump. Alternatively, change this address to 80 18 (BRA $18) if you want turn blocks to not be breakable by spin jumps."},{"address":"$00EE79","length":"1 byte","beginsAt":61049,"endsAt":61049,"type":"Objects","descriptio":"Controls which (page 1) tile activates the brown creating/eating block sprite when stood on. Note that a few tiles are handled before this and can not trigger this effect."},{"address":"$00EEB2","length":"1 byte","beginsAt":61106,"endsAt":61106,"type":"Objects","descriptio":"Change from 1E to 04 to make it possible to trigger already triggered switches, as opposed to them randomly becoming solid for no obvious reason."},{"address":"$00EEF6","length":"1 byte","beginsAt":61174,"endsAt":61174,"type":"Mario physics","descriptio":"Change this to [80] to disable sliding on slopes. The slide will instead be changed to ducking like on flat terrain"},{"address":"$00EEF8","length":"3 bytes. Ends at $00EEFA.","beginsAt":61176,"endsAt":61178,"type":"ASM","descriptio":"Change to [EA A9 00] to enable sliding while holding an item."},{"address":"$00F05C","length":"36 bytes. Ends at $00F07F.","beginsAt":61532,"endsAt":61567,"type":"Misc.","descriptio":"Table for several Map16 blocks that handles which bounce block sprite is shown when the block is hit. Please see this thread and this thread for additional information.\nBlock order is as follows:\n00-1C: Tiles 111-12D\n1D-20: Tiles 021-024\n21: Broken turnblock\n22: Green ! block\n23: Yellow ! block"},{"address":"$00F080","length":"36 bytes. Ends at $00F0A3.","beginsAt":61568,"endsAt":61603,"type":"Misc.","descriptio":"Table for several Map16 blocks that handles which powerup is spawned out of the block when it's hit (see here for more details). Block order is the same as $00F05C."},{"address":"$00F0A4","length":"36 bytes. Ends at $00F0C7.","beginsAt":61604,"endsAt":61639,"type":"Misc.","descriptio":"Table for several Map16 blocks that handles from which sides the block is activated, in ----btrl format.\n- = unused, b = bottom, t = top, r = right, l = left\nBlock order is the same as $00F05C."},{"address":"$00F0C8","length":"36 bytes. Ends at $00F0EB.","beginsAt":61640,"endsAt":61675,"type":"Objects","descriptio":"Table for several Map16 blocks that handles which tiles to generate (the value stored to $9C) when the block is hit. Block order is the same as $00F05C."},{"address":"$00F124","length":"2 bytes. Ends at $00F125.","beginsAt":61732,"endsAt":61733,"type":"ASM","descriptio":"Change from D0 39 to EA EA to make Munchers (and other hurt blocks such as castle spikes) hurt Mario while riding Yoshi."},{"address":"$00F176","length":"131 bytes. Ends at $00F1F8.","beginsAt":61814,"endsAt":61944,"type":"Objects","descriptio":"Green Star Block code.\n$00:F1E9 - FG/BG Tileset in which coin question blocks' behavior are changed for the 3-block 1up bonus game.\n$00:F1EA - Change from F0 0D to EA EA to disable the 3-block 1up bonus game, allowing you to use coin question blocks in levels with the switch palace tileset (4), and freeing up the 5 bytes at RAM address $13F4 for custom use."},{"address":"$00F17A","length":"1 byte","beginsAt":61818,"endsAt":61818,"type":"Objects","descriptio":"How many colored Exclamation Blocks are allowed by default within all tilesets to enable spawning items, with the exception of Ghost House, Boss Battles, etc...\n\n$02 (Green, Yellow) by default, Can be set to $00 to disable item spawning, and instead make them solid."},{"address":"$00F21D","length":"1 byte","beginsAt":61981,"endsAt":61981,"type":"Sprite Misc.","descriptio":"Sprite to generate out of the bonus block (the rows of ?-blocks) if all three of them were guessed right. Default: #$05 (1-Up). Other possible values include, but are not excluded to: #$00 = None; #$01 = Mushroom; #$02 = Fire Flower; #$03 = Star; #$04 = Feather."},{"address":"$00F237","length":"1 byte","beginsAt":62007,"endsAt":62007,"type":"Sound effect","descriptio":"Incorrect! Sound effect for the bonus 3 block minigame."},{"address":"$00F253","length":"1 byte","beginsAt":62035,"endsAt":62035,"type":"Misc.","descriptio":"What the remaining blocks become when hitting the incorrect block in a bonus area"},{"address":"$00F2BB","length":"3 bytes. Ends at $00F2BD.","beginsAt":62139,"endsAt":62141,"type":"ASM","descriptio":"Change [99 3C 1F] to [EA EA EA] to make the 1up checkpoint work again when reentering a level"},{"address":"$00F2CD","length":"33 bytes. Ends at $00F2ED.","beginsAt":62157,"endsAt":62189,"type":"Objects","descriptio":"The code for the midway point tile (Map16 tile 38, not the extended object).\n$00F2CE - What object you get after breaking midway point tape (default 02 - none).\n$00F2E2 - Change to 0x80 to disable midway powerups (or EA EA to make them always make you big, even if you have a better powerup).\n$00F2E5 - What powerup midway points give you.\n$00F2E9 - What sound effect midway points play."},{"address":"$00F316","length":"1 byte","beginsAt":62230,"endsAt":62230,"type":"Misc.","descriptio":"Change '0F' to the following, and the 3UP moon will add this to your life or score counter:\n\n00 = Nothing at all\n01 - 0C = Scores 10-8000.\n0D = 1UP.\n0E = 2UP.\n0F = 3UP.\n10 = 5UP (glitched).\n11-FF = Best not to use."},{"address":"$00F325","length":"3 bytes. Ends at $00F327.","beginsAt":62245,"endsAt":62247,"type":"ASM","descriptio":"Replace '99 EE 1F' with 'EA EA EA' to make moons reappear when you re-enter a level after collecting them."},{"address":"$00F332","length":"69 bytes. Ends at $00F376.","beginsAt":62258,"endsAt":62326,"type":"ASM","descriptio":"The code that handles a Yoshi coin being collected.\n\n$00F333 is the Map16 tile number of the top half of the coin.\n$00F33C is the offset of the score sprite when the top half is collected, relative to the bottom half.\nChanging $00F343 [EE 22 14] to [EA EA EA] will disable the Yoshi Coin counter in the status bar. Note that this will also stop them from respawining when you've got five of them.\n$00F34A is the number of Yoshi coins that need to be collected to trigger the \"collected all\" flag.\nChanging $00F354 [99 2F 1F] to [EA EA EA] will make the Yoshi coins reappear even after collecting all 5 (or more) of them.\n$00F359 is the Yoshi coin sound.\n$00F35E is how many regular coins a Dragon Coin gives you.\n$00F364 is the value stored to $9C when the coin is collected."},{"address":"$00F377","length":"59 bytes. Ends at $00F3B1.","beginsAt":62327,"endsAt":62385,"type":"Subroutine (JSL)","descriptio":"The subroutine that handles the score when you get a Yoshi coin.\nChanging $00F37A [EE 20 14] to [EA EA EA] will stop the Yoshi Coin counter from increasing and giving you points and giving you a life after you collected enough for one."},{"address":"$00F38A","length":"40 bytes. Ends at $00F3B1.","beginsAt":62346,"endsAt":62385,"type":"Subroutine (JSL)","descriptio":"Subroutine to spawn a score sprite at Mario's position. Load the score sprite to spawn in A before calling; alternatively, jump a few bytes earlier to $00F388 to specifically spawn a 1up score sprite."},{"address":"$00F3B2","length":"18 bytes. Ends at $00F3C3.","beginsAt":62386,"endsAt":62403,"type":"Subroutine (JSR)","descriptio":"This subroutine gets an index to the \"one bit per level\" tables ($1F2F, $1F3C, $1FEE) depending on the overworld level number ($13BF). When it returns, Y holds the byte index to $1F2F and A holds the bit to check/set."},{"address":"$00F3E5","length":"4 bytes. Ends at $00F3E8.","beginsAt":62437,"endsAt":62440,"type":"Controller","descriptio":"Which button you have to be pushing in order to enter the 4 kinds of pipes. In order: End on right, end on left, end on bottom, end on top."},{"address":"$00F3ED","length":"1 byte","beginsAt":62445,"endsAt":62445,"type":"Misc.","descriptio":"[37] Offset of entering vertical pipes. Setting it to any other number than 36-38 will make the player incapable of entering."},{"address":"$00F43A","length":"1 byte","beginsAt":62522,"endsAt":62522,"type":"Sound effect","descriptio":"Going Down Pipe Sound"},{"address":"$00F443","length":"10 bytes. Ends at $00F44C.","beginsAt":62531,"endsAt":62540,"type":"Subroutine (JSR)","descriptio":"Subroutine that checks if Mario is in the center of a door. Not used for boss doors.\n\n$00F44B [08] is the width of the enterable region of the door (up to 0x10). $00F447 [04] is how far to offset the enterable region; this should be set to half of $00F44B."},{"address":"$00F44D","length":"24 bytes. Ends at $00F464.","beginsAt":62541,"endsAt":62564,"type":"Mario physics","descriptio":"Routine that sets up Mario's object collision points for RAM addresses $98-$9B, inclusive."},{"address":"$00F598","length":"2 bytes. Ends at $00F599.","beginsAt":62872,"endsAt":62873,"type":"Mario physics","descriptio":"Highest Y position that the player is able to be at, 16 bit. Note that this is a negative value."},{"address":"$00F5AD","length":"2 bytes. Ends at $00F5AE.","beginsAt":62893,"endsAt":62894,"type":"Misc.","descriptio":"Change to 80 03 (BRA $03) to make it so falling into a pit results in death even in Yoshi wings levels, or to 80 00 (BRA $00) to make it so falling into a pit will always activate the normal exit."},{"address":"$00F5B7","length":"79 bytes. Ends at $00F605.","beginsAt":62903,"endsAt":62981,"type":"Subroutine (JSL)","descriptio":"Hurt Subroutine (JSL to it to hurt the player).\n$00:F5B9: Change to F0 to make mario invincible. (Will not make him invincible to crushing objects, lava or pitfalls).\n$00:F5C1-$00:F5C3: Change from 0D 93 14 to EA EA EA to make Mario die normally when touching an enemy/muncher even after getting the goal tape/sphere.\n$00:F5C6: Change from 9C E3 18 to EA EA EA to prevent coin game cloud counter from resetting on hit.\n$00:F5D7: Change this to 80 to have Mario die when touched, regardless of powerup status.\n$00:F5E3: This SFX plays when you get hit when flying.\n$00:F5ED: Invincibility timer when hit while flying.\n$00:F5F4: Mario shrinking SFX.\n$00:F5F8-$00:F5FB: Set to EA EA EA EA to disable item box auto-falling when you get hurt.\n$00:F5FC-$00:F5FF: Change the \"A9 01 85 71\" to \"EA EA EA EA\" to disable mario's shrinking animation when hit."},{"address":"$00F606","length":"35 bytes. Ends at $00F628.","beginsAt":62982,"endsAt":63016,"type":"Subroutine (JSL)","descriptio":"Death Subroutine (JSL to it to kill Mario).\n$00F607 controls the speed at which the player jumps up ($7E007D format).\n$00F60B controls which music is played when Mario dies.\n$00F619 can be changed from 0D 14 to 12 14 to make the screen not scroll when the player loses a life.\n$00F61C controls the amount of time Mario stays on screen before dying.\n\n*note that if Mario Falls into a hole, the rom will JSL to $00F60A to skip the death animation"},{"address":"$00F69F","length":"4 bytes. Ends at $00F6A2.","beginsAt":63135,"endsAt":63138,"type":"Misc.","descriptio":"Where Mario has to be vertically on-screen for the game to consider the screen \"caught up\" with him in a particular direction, thereby stopping it from scrolling. The first two bytes are for scrolling upwards, while the second two are scrolling down."},{"address":"$00F6A7","length":"6 bytes. Ends at $00F6AC.","beginsAt":63143,"endsAt":63148,"type":"Misc.","descriptio":"How fast the camera \"catches up\" to Mario when scrolling vertically. The first two bytes are when scrolling upwards, while the second two are scrolling down.\n\nThe third entry is a bit strange, and for the most part unused. If the level is set to \"no vertical scroll unless flying/climbing/etc.\", then it gets used as the upwards scroll speed of the screen when it's below the point where the screen \"locks\" vertical scrolling. Since this is normally at the bottom of a level where the screen can't scroll any further down, it can only really get used in vertical levels."},{"address":"$00F6AD","length":"6 bytes. Ends at $00F6B2.","beginsAt":63149,"endsAt":63154,"type":"Misc.","descriptio":"Vertical limits for scrolling the screen.\n\nThe first two bytes are the highest distance the screen can scroll upwards; essentially, it's the top of the level.\nThe second two are the highest distance the screen can scroll upwards... when the screen is stationary or moving downwards. Recommended to keep it identical to the first two bytes.\nThe third entry is where the screen's vertical scrolling locks in a level with the \"no vertical scroll unless flying/climbing/etc.\" option. The screen can actually still scroll vertically if it goes below this point, but it can't scroll up past it unless one of the special conditions is met."},{"address":"$00F6B3","length":"4 bytes. Ends at $00F6B6.","beginsAt":63155,"endsAt":63158,"type":"Misc.","descriptio":"The maximum distances the screen will scroll normally (without L/R held), in 16-bit. The first two are scrolling left, the second two are scrolling right.\n\nSetting these values higher than the ones in $00F6CD may cause the screen to act strangely."},{"address":"$00F6C1","length":"4 bytes. Ends at $00F6C4.","beginsAt":63169,"endsAt":63172,"type":"Misc.","descriptio":"How quickly the screen moves when scrolling with L/R. The first two bytes are scrolling right, while the second two are scrolling left.\n\nIt's worth noting that these are also used to check whether Mario is facing the direction the screen is scrolling, for deciding whether to have it \"catch up\" to him while he's walking around. It only matters whether the two values are negative or positive, though, so as long as you aren't changing the scroll direction, there shouldn't be any issues. If you want to fix that, you can do so by changing $00F8CB from 0xBF to 0xC5."},{"address":"$00F6C7","length":"4 bytes. Ends at $00F6CA.","beginsAt":63175,"endsAt":63178,"type":"Misc.","descriptio":"How quickly the screen scrolls horizontally when \"catching up\" to Mario while he's walking around normally. The first two bytes are right, while the second are left."},{"address":"$00F6CD","length":"4 bytes. Ends at $00F6D0.","beginsAt":63181,"endsAt":63184,"type":"Misc.","descriptio":"The maximum distances the screen can be scrolled with L and R, in 16-bit. The first is scrolling right, the second is scrolling left.\n\nSetting these values lower than the ones in $00F6B3 may cause the screen to act strangely when screen scrolling."},{"address":"$00F6E5","length":"2 bytes. Ends at $00F6E6.","beginsAt":63205,"endsAt":63206,"type":"Misc.","descriptio":"Distance Mario must be offset to the left of the screen's \"hotspot\" defined by $7E142A for the screen to scroll leftwards."},{"address":"$00F6EC","length":"2 bytes. Ends at $00F6ED.","beginsAt":63212,"endsAt":63213,"type":"Misc.","descriptio":"Distance Mario must be offset to the right of the offset at $00F6E5 for the screen to scroll rightwards. Essentially, this defines the width of the area where the screen will never scroll horizontally."},{"address":"$00F70E","length":"2 bytes. Ends at $00F70F.","beginsAt":63246,"endsAt":63247,"type":"Coordinate","descriptio":"Lowest Y position the screen is allowed to scroll down to in horizontal levels. Change from C0 00 to CF 00 (do the same on $00F6B1 so the \"no vertical scroll unless flying/climbing/etc.\" work consistently) to allow the bottom row of 16x16 blocks to be shown."},{"address":"$00F727","length":"1 byte","beginsAt":63271,"endsAt":63271,"type":"Misc.","descriptio":"Change #$00 to #$02 (value to be stored in $7E:0055 and $7E:0056) and you'll get a SMB1-like effect regarding screen-scrolling: it's impossible to go to the left, even with L/R-scrolling."},{"address":"$00F79D","length":"13 bytes. Ends at $00F7A9.","beginsAt":63389,"endsAt":63401,"type":"ASM","descriptio":"Code that handles the Layer 2 horizontal scroll settings (LM's \"Layer 2 (BG) Scrolling Rate\")."},{"address":"$00F7AA","length":"24 bytes. Ends at $00F7C1.","beginsAt":63402,"endsAt":63425,"type":"ASM","descriptio":"Code that handles the Layer 2 vertical scroll settings (LM's \"Layer 2 (BG) Scrolling Rate\")."},{"address":"$00F806","length":"2 bytes. Ends at $00F807.","beginsAt":63494,"endsAt":63495,"type":"Coordinate","descriptio":"How high Mario must be in order to make the screen scroll vertically, when the scrolling mode is 'Vertical scroll at will', when Mario lands on a platform. 16-bit value, little endian.\nThe lower the value, the higher Mario must be in order to make the screen scroll vertically."},{"address":"$00F878","length":"1 byte","beginsAt":63608,"endsAt":63608,"type":"Misc.","descriptio":"Change from D0 to 80 to activate free vertical scrolling. This will bypass the routine that checks whether Mario is standing on solid ground or not (RAM address $72) and sets the scrolling flag accordingly. The camera follows Mario instead of waiting for him to land on something."},{"address":"$00F99C","length":"2 bytes. Ends at $00F99D.","beginsAt":63900,"endsAt":63901,"type":"Coordinate","descriptio":"What 16-bit Y position on screen ($7E:0080) the player should have at the very minimum, before being killed in the Iggy/Larry battle room. Used to simulate lava tiles."},{"address":"$00F9F5","length":"27 bytes. Ends at $00FA0F.","beginsAt":63989,"endsAt":64015,"type":"Empty","descriptio":"Unused data."},{"address":"$00FA10","length":"9 bytes. Ends at $00FA18.","beginsAt":64016,"endsAt":64024,"type":"Subroutine (JSL)","descriptio":"Unreachable, but can be JSL'ed to clear out the sprite status table."},{"address":"$00FA46","length":"1 byte","beginsAt":64070,"endsAt":64070,"type":"Misc.","descriptio":"Time to shake ground when you hit the big switch in the switch palace. Default is 20."},{"address":"$00FA4D","length":"1 byte","beginsAt":64077,"endsAt":64077,"type":"Sprite number","descriptio":"Sprite that's spawned when hitting a switch palace. Note that it always uses slot 02."},{"address":"$00FA80","length":"95 bytes. Ends at $00FADE.","beginsAt":64128,"endsAt":64222,"type":"Subroutine (JSL)","descriptio":"This will trigger the goal tape. Changing 0x07CBF from [06] to [0x] will change what state sprites to turn when triggered.\n"},{"address":"$00FADF","length":"28 bytes. Ends at $00FAFA.","beginsAt":64223,"endsAt":64250,"type":"Misc.","descriptio":"Table of the various sprites Mario receives for carrying different items past the goal tape.\n\nThe table itself is divided into four 7-byte sections: P-switches and springboards will use the second section, keys will use the third, baby Yoshi will use the fourth, and anything else will use the first.\nEach section is then indexed by Mario's current state, in the order: small, big, cape, fire, with star power, on Yoshi, and unused. The star power index is essentially unused, however, because the counter always gets cleared before the table gets loaded from.\n\nIf the value returned is E0-EF, Mario will receive the sprite written at $00FB50 (1-up by default). If it's F0-FF, he'll receive the sprite at $00FB54 (...also a 1-up by default). In both cases, it'll also store the lower four bits to $1594, but that ends up being 0 in every obtainable case anyway, so it's likely a remnant of some beta feature.\n\nAdditionally, $00FB40 is the sprite to spawn if Mario already has the sprite in his item box (again, 1-up by default).\n\nLastly, you can re-enable factoring star power into the table by changing $01C0FE to EA EA EA."},{"address":"$00FB40","length":"1 byte","beginsAt":64320,"endsAt":64320,"type":"Sprite number","descriptio":"Sprite that the Blue/Silver P-switch, Portable Spring Board, Throw Block Sprite and carryable stunned enemies will turn into when they reach the goal point."},{"address":"$00FB50","length":"1 byte","beginsAt":64336,"endsAt":64336,"type":"Sprite number","descriptio":"Sprite that the Key will turn into when it reaches the goal point."},{"address":"$00FB53","length":"5 bytes. Ends at $00FB57.","beginsAt":64339,"endsAt":64343,"type":"ASM","descriptio":"Change to EA EA EA EA EA to prevent the 1UPs being spawned at the goal point. $00:FB54 controls the sprite number that Baby Yoshi (Green, Red, Yellow, Blue) will turn into when it reaches the goal point."},{"address":"$00FB6F","length":"1 byte","beginsAt":64367,"endsAt":64367,"type":"Sprite Misc.","descriptio":"The Y speed of the sprite when you carry an item over the goal."},{"address":"$00FB74","length":"1 byte","beginsAt":64372,"endsAt":64372,"type":"Sprite Misc.","descriptio":"The X speed of the sprite when you carry an item over the goal."},{"address":"$00FB7E","length":"1 byte","beginsAt":64382,"endsAt":64382,"type":"Sound effect","descriptio":"Sound for items given at goal point"},{"address":"$00FC17","length":"1 byte","beginsAt":64535,"endsAt":64535,"type":"Misc.","descriptio":"[02] Difference between point values of successive sprite coins spawned at the goal tape. The default is 02, so the point sequence will go 100, 400, 1000, 4000, etc.; you can change it to 01 to make the point values go 100, 200, 400, 800, etc. or to 00 to make it always stay at 100 no matter how many sprites get turned into coins."},{"address":"$00FC7A","length":"114 bytes. Ends at $00FCEB.","beginsAt":64634,"endsAt":64747,"type":"Subroutine (JSL)","descriptio":"Used in SMW to initialize Yoshi when entering a level, or sublevel. JSLing to this will cause a Yoshi to spawn and Mario will be riding him, however the Yoshi will not transfer to sublevel or to the overworld. You must set $13C7 if you plan to manually JSL to this routine.\nChanging $00FCCE to 0x80 will keep Yoshi from turning blue after grabbing a pair of Yoshi wings."},{"address":"$00FCF6","length":"1 byte","beginsAt":64758,"endsAt":64758,"type":"Coordinate","descriptio":"X lo position of Iggy and Larry at the start of the boss battle."},{"address":"$00FCFA","length":"1 byte","beginsAt":64762,"endsAt":64762,"type":"Coordinate","descriptio":"X hi position of Iggy and Larry at the start of the boss battle."},{"address":"$00FCFF","length":"1 byte","beginsAt":64767,"endsAt":64767,"type":"Coordinate","descriptio":"Y lo position of Iggy and Larry at the start of the boss battle."},{"address":"$00FD03","length":"1 byte","beginsAt":64771,"endsAt":64771,"type":"Coordinate","descriptio":"Y hi position of Iggy and Larry at the start of the boss battle."},{"address":"$00FD27","length":"1 byte","beginsAt":64807,"endsAt":64807,"type":"Sprite number","descriptio":"Object that Mario \"breathes\" while underwater (small bubble)"},{"address":"$00FD5A","length":"67 bytes. Ends at $00FD9C.","beginsAt":64858,"endsAt":64924,"type":"Subroutine (JSR)","descriptio":"SMW's glitter trail subroutine, called when you collect a coin or Yoshi coin.\nChange $00FD6B to EA EA EA EA EA (NOP #5) to disable showing a glitter effect when a coin is collected."},{"address":"$00FE17","length":"1 byte","beginsAt":65047,"endsAt":65047,"type":"Sprite number","descriptio":"Object that Mario leaves when he jumps into water (small bubble)"},{"address":"$00FE4A","length":"73 bytes. Ends at $00FE92.","beginsAt":65098,"endsAt":65170,"type":"Subroutine (JSR)","descriptio":"Routine to show little puff of smoke when the player turns around."},{"address":"$00FE94","length":"1 byte","beginsAt":65172,"endsAt":65172,"type":"Mario physics","descriptio":"Initial fireball X speed facing left"},{"address":"$00FE95","length":"1 byte","beginsAt":65173,"endsAt":65173,"type":"Mario physics","descriptio":"Initial fireball X speed facing right"},{"address":"$00FE96","length":"1 byte","beginsAt":65174,"endsAt":65174,"type":"Coordinate","descriptio":"X-position of Mario's fireball (left)"},{"address":"$00FE97","length":"1 byte","beginsAt":65175,"endsAt":65175,"type":"Coordinate","descriptio":"X-position of Mario's fireball (right)"},{"address":"$00FE98","length":"1 byte","beginsAt":65176,"endsAt":65176,"type":"Coordinate","descriptio":"X-position of Mario's fireball when on Yoshi (left). Only relevant if you enable the debug code at $00D087."},{"address":"$00FE99","length":"1 byte","beginsAt":65177,"endsAt":65177,"type":"Coordinate","descriptio":"X-position of Mario's fireball when on Yoshi (right). Only relevant if you enable the debug code at $00D087."},{"address":"$00FE9A","length":"1 byte","beginsAt":65178,"endsAt":65178,"type":"Coordinate","descriptio":"X-position of Mario's fireball when on Yoshi and ducking (left). Only relevant if you enable the debug code at $00D087."},{"address":"$00FE9B","length":"1 byte","beginsAt":65179,"endsAt":65179,"type":"Coordinate","descriptio":"X-position of Mario's fireball when on Yoshi and ducking (right). Only relevant if you enable the debug code at $00D087."},{"address":"$00FE9C","length":"1 byte","beginsAt":65180,"endsAt":65180,"type":"Coordinate","descriptio":"X-position of Mario's fireball (left), high byte."},{"address":"$00FE9D","length":"1 byte","beginsAt":65181,"endsAt":65181,"type":"Coordinate","descriptio":"X-position of Mario's fireball (right), high byte."},{"address":"$00FE9E","length":"1 byte","beginsAt":65182,"endsAt":65182,"type":"Coordinate","descriptio":"X-position of Mario's fireball when on Yoshi (left), high byte. Only relevant if you enable the debug code at $00D087."},{"address":"$00FE9F","length":"1 byte","beginsAt":65183,"endsAt":65183,"type":"Coordinate","descriptio":"X-position of Mario's fireball when on Yoshi (right), high byte. Only relevant if you enable the debug code at $00D087."},{"address":"$00FEA0","length":"1 byte","beginsAt":65184,"endsAt":65184,"type":"Coordinate","descriptio":"X-position of Mario's fireball when on Yoshi and ducking (left), high byte. Only relevant if you enable the debug code at $00D087."},{"address":"$00FEA1","length":"1 byte","beginsAt":65185,"endsAt":65185,"type":"Coordinate","descriptio":"X-position of Mario's fireball when on Yoshi and ducking (right), high byte. Only relevant if you enable the debug code at $00D087."},{"address":"$00FEA2","length":"1 byte","beginsAt":65186,"endsAt":65186,"type":"Coordinate","descriptio":"Y-Position for Mario's Fireballs (Left)"},{"address":"$00FEA3","length":"1 byte","beginsAt":65187,"endsAt":65187,"type":"Coordinate","descriptio":"Y-Position for Mario's Fireballs (Right)"},{"address":"$00FEA4","length":"1 byte","beginsAt":65188,"endsAt":65188,"type":"Coordinate","descriptio":"Y-position of Mario's fireball when on Yoshi (left). Only relevant if you enable the debug code at $00D087"},{"address":"$00FEA5","length":"1 byte","beginsAt":65189,"endsAt":65189,"type":"Coordinate","descriptio":"Y-position of Mario's fireball when on Yoshi (right). Only relevant if you enable the debug code at $00D087"},{"address":"$00FEA6","length":"1 byte","beginsAt":65190,"endsAt":65190,"type":"Coordinate","descriptio":"Y-position of Mario's fireball when on Yoshi and ducking (left). Only relevant if you enable the debug code at $00D087."},{"address":"$00FEA7","length":"1 byte","beginsAt":65191,"endsAt":65191,"type":"Coordinate","descriptio":"Y-position of Mario's fireball when on Yoshi and ducking (right). Only relevant if you enable the debug code at $00D087."},{"address":"$00FEB6","length":"1 byte","beginsAt":65206,"endsAt":65206,"type":"Sound effect","descriptio":"Fireball sound effect"},{"address":"$00FEC0","length":"1 byte","beginsAt":65216,"endsAt":65216,"type":"Sprite number","descriptio":"Object Fire Mario shoots (must change $00FEA9 to 07 for some values to work)"},{"address":"$00FEC5","length":"1 byte","beginsAt":65221,"endsAt":65221,"type":"Mario physics","descriptio":"Initial fireball Y speed"},{"address":"$00FF93","length":"45 bytes. Ends at $00FFBF.","beginsAt":65427,"endsAt":65471,"type":"Empty","descriptio":"Empty (all FF) in a clean ROM.\nUsed by many patches (like fastrom), and the last byte becomes 42 when you lock the ROM."},{"address":"$00FFC0","length":"21 bytes. Ends at $00FFD4.","beginsAt":65472,"endsAt":65492,"type":"Misc.","descriptio":"Internal rom name."},{"address":"$00FFD5","length":"1 byte","beginsAt":65493,"endsAt":65493,"type":"Misc.","descriptio":"xxAAxxxB. If both A bits are set, FastROM. B is HiROM. x = unknown?"},{"address":"$00FFD7","length":"1 byte","beginsAt":65495,"endsAt":65495,"type":"Misc.","descriptio":"Size of ROM byte. Amount of kilobytes = 2^decimal value of $00FFD7."},{"address":"$00FFD8","length":"1 byte","beginsAt":65496,"endsAt":65496,"type":"Misc.","descriptio":"SRAM size. Amount of kilobytes = 2^decimal value of $00FFD8. Default value is 01, which is 2kb. The limit is 07 which is 128kb."},{"address":"$00FFD9","length":"1 byte","beginsAt":65497,"endsAt":65497,"type":"ASM","descriptio":"Region Changer: Can change NTSC to PAL."},{"address":"$018008","length":"6 bytes. Ends at $01800D.","beginsAt":98312,"endsAt":98317,"type":"Sprite subroutine (JSL)","descriptio":"Subroutine that checks if a sprite is touching a wall. If bit is set, it's touching a wall."},{"address":"$01800E","length":"6 bytes. Ends at $018013.","beginsAt":98318,"endsAt":98323,"type":"Sprite subroutine (JSL)","descriptio":"Subroutine that is accessed by sprites to check if a sprite is touching the ground. If bit set, it's touching the ground."},{"address":"$01801A","length":"8 bytes. Ends at $018021.","beginsAt":98330,"endsAt":98337,"type":"Sprite subroutine (JSL)","descriptio":"The subroutine that updates a sprite's Y position without gravity."},{"address":"$018022","length":"8 bytes. Ends at $018029.","beginsAt":98338,"endsAt":98345,"type":"Sprite subroutine (JSL)","descriptio":"The subroutine that updates a sprite's X position without gravity."},{"address":"$01802A","length":"8 bytes. Ends at $018031.","beginsAt":98346,"endsAt":98353,"type":"Sprite subroutine (JSL)","descriptio":"Subroutine that updates a sprite's X/Y position, including gravity and interaction."},{"address":"$018032","length":"8 bytes. Ends at $018039.","beginsAt":98354,"endsAt":98361,"type":"Sprite subroutine (JSL)","descriptio":"Sprite<->sprite interaction subroutine"},{"address":"$01803A","length":"8 bytes. Ends at $018041.","beginsAt":98362,"endsAt":98369,"type":"Sprite subroutine (JSL)","descriptio":"A subroutine that makes sprites interact with each other and with the player, essentially combining $018032 and $01A7DC."},{"address":"$018042","length":"8 bytes. Ends at $018049.","beginsAt":98370,"endsAt":98377,"type":"Sprite subroutine (JSL)","descriptio":"SMW's generic sprite GFX subroutine. Not terribly useful for custom sprites."},{"address":"$018137","length":"26 bytes. Ends at $018150.","beginsAt":98615,"endsAt":98640,"type":"Pointer","descriptio":"Sprite status subroutine pointers. These are called based on the value of $14C8,x; valid values are 00-0C."},{"address":"$018151","length":"6 bytes. Ends at $018156.","beginsAt":98641,"endsAt":98646,"type":"Sprite Misc.","descriptio":"This is sprite status #$00, which is is called when a sprite is either dead or nonexistent. It also sets $161A,x to #$FF to prevent that sprite from being reloaded."},{"address":"$018172","length":"11 bytes. Ends at $01817C.","beginsAt":98674,"endsAt":98684,"type":"Subroutine (JSR)","descriptio":"This is sprite status #$01, which will call the current sprite's init routine."},{"address":"$01817D","length":"402 bytes. Ends at $01830E.","beginsAt":98685,"endsAt":99086,"type":"Pointer","descriptio":"Pointers to sprite initialization routines. These are called based on the sprite number ($9E,x). Valid values are 00-C8; sprites C9 and above are considered different types of sprites and handled by other routines."},{"address":"$018223","length":"2 bytes. Ends at $018224.","beginsAt":98851,"endsAt":98852,"type":"Pointer","descriptio":"Change from C2 85 to 35 84 to allow throw blocks to be placed directly in Lunar Magic, with infinite timer until they disappear."},{"address":"$018327","length":"1 byte","beginsAt":99111,"endsAt":99111,"type":"Timer","descriptio":"[3F] How many frames until a Timed Lift (sprite BA) will fall if it starts at an odd X position. Default value is $3F, or about 1 second."},{"address":"$01832F","length":"1 byte","beginsAt":99119,"endsAt":99119,"type":"Timer","descriptio":"[FF] How many frames until a Timed Lift (sprite BA) will fall if it starts at an even X position. Default value is $FF, or about 4 seconds."},{"address":"$018335","length":"4 bytes. Ends at $018338.","beginsAt":99125,"endsAt":99128,"type":"Palette","descriptio":"Colours of Yoshi Eggs (Red, Blue, Yellow, Blue)"},{"address":"$018340","length":"1 byte","beginsAt":99136,"endsAt":99136,"type":"Misc.","descriptio":"How many types of Yoshi Eggs to allow, minus one"},{"address":"$01834C","length":"2 bytes. Ends at $01834D.","beginsAt":99148,"endsAt":99149,"type":"Sprite physics","descriptio":"Initial leftward and rightward X speeds of diagonally moving sprites, i.e. stream of boo buddies and reflecting fireball (F0)."},{"address":"$018357","length":"1 byte","beginsAt":99159,"endsAt":99159,"type":"Misc.","descriptio":"Initial Y speed of diagonally moving sprites, i.e. stream of boo buddies and reflecting fireball (F0)."},{"address":"$01836A","length":"1 byte","beginsAt":99178,"endsAt":99178,"type":"ASM","descriptio":"Change to EA to make both wooden spikes move up or down depending on X&1 instead of sprite AC always moving down first."},{"address":"$018391","length":"1 byte","beginsAt":99217,"endsAt":99217,"type":"Sound effect","descriptio":"SFX played by the Banzai Bill"},{"address":"$0183A0","length":"4 bytes. Ends at $0183A3.","beginsAt":99232,"endsAt":99235,"type":"Sprite number","descriptio":"Sprites inside exploding turn block (Fish, Goomba, Shelless Green Koopa, Green Koopa)"},{"address":"$0183DB","length":"1 byte","beginsAt":99291,"endsAt":99291,"type":"Timer","descriptio":"Length of time before sprite #19's message box appears (don't set lower than 04)"},{"address":"$018455","length":"1 byte","beginsAt":99413,"endsAt":99413,"type":"Misc.","descriptio":"How many types of P-Switches to allow, minus one"},{"address":"$018466","length":"2 bytes. Ends at $018467.","beginsAt":99430,"endsAt":99431,"type":"Palette","descriptio":"Colours of P-Switches (Blue, Silver)"},{"address":"$0184A5","length":"1 byte","beginsAt":99493,"endsAt":99493,"type":"Sprite number","descriptio":"Sprite spawned by killing Lakitu with cape or fireball (Lakitu Cloud)"},{"address":"$0184C6","length":"4 bytes. Ends at $0184C9.","beginsAt":99526,"endsAt":99529,"type":"ASM","descriptio":"Change to EA EA EA EA to make lakitu cloud never get spawned"},{"address":"$01854C","length":"1 byte","beginsAt":99660,"endsAt":99660,"type":"Misc.","descriptio":"How many segments Pokey has when Mario is riding Yoshi. The amount of segments depends on these bits:\n---x xxxx. If any of the x bits are set, a segment will be added. If none is set, the sprite won't appear. If any of the - bits is set, the sprite won't appear."},{"address":"$018553","length":"1 byte","beginsAt":99667,"endsAt":99667,"type":"Misc.","descriptio":"How many segments Pokey has when Mario isn't riding Yoshi. The amount of segments depends on these bits:\n---x xxxx. If any of the x bits are set, a segment will be added. If none is set, the sprite won't appear. If any of the - bits is set, the sprite won't appear."},{"address":"$01857A","length":"8 bytes. Ends at $018581.","beginsAt":99706,"endsAt":99713,"type":"Sprite subroutine (JSR)","descriptio":"Face Mario subroutine, usually used by sprites to initially face Mario's direction."},{"address":"$0185CC","length":"402 bytes. Ends at $01875D.","beginsAt":99788,"endsAt":100189,"type":"Pointer","descriptio":"Pointers to sprite main routines. These are called based on the sprite number ($9E,x). Valid values are 00-C8; sprites C9 and above are considered different types of sprites and handled by other routines."},{"address":"$018763","length":"38 bytes. Ends at $018788.","beginsAt":100195,"endsAt":100232,"type":"Sprite subroutine (JSR)","descriptio":"Goal point sphere/boss killed code.\n$018778 - If you change this to \"20 23 CD\" and change $01CD23 to \"9E C8 14 CE C6 13 60\", it will prevent the player from walking after touching a goal sphere in a horizontal level.\n$018784 - Controls which music is played when it's collected."},{"address":"$018890","length":"3 bytes. Ends at $018892.","beginsAt":100496,"endsAt":100498,"type":"Subroutine (JSR)","descriptio":"Initialization routine for sprite 52 (moving ledge hole in ghost house) that simply decrements the low byte of its Y position.\nLunar Magic v2.53+ renders this routine unused by changing the initialization routine to $0185B7 instead. This is done in order to fix the glitch where placing the hole at the top of a subscreen causes its position to wrap around to the bottom of the subscreen."},{"address":"$018898","length":"82 bytes. Ends at $0188E9.","beginsAt":100504,"endsAt":100585,"type":"Sprite subroutine (JSR)","descriptio":"The yellow koopa's \"Jump over shells\" routine."},{"address":"$0188EC","length":"4 bytes. Ends at $0188EF.","beginsAt":100588,"endsAt":100591,"type":"Sprite Misc.","descriptio":"Standard X speeds for sprites 00-13. The first two bytes are used when the \"move faster\" bit at $0188F0 is clear for the sprite, while the second two are used when it's set."},{"address":"$0188F0","length":"20 bytes. Ends at $018903.","beginsAt":100592,"endsAt":100611,"type":"Sprite Misc.","descriptio":"Various properties for sprites 00-13. Format: ak--jfls.\na = animate twice as fast in air\nk = use 32x16 tilemap (also draws wings on sprites 08+)\n-- = unknown/unused\nj = jump over thrown shells\nf = follow Mario\nl = stay on ledges\ns = move faster (use $0188EE for X speeds instead of $0188EC)"},{"address":"$0189ED","length":"1 byte","beginsAt":100845,"endsAt":100845,"type":"Sprite tilemap related","descriptio":"Tilemap of blue shell less koopa sliding out of shell"},{"address":"$018AED","length":"1 byte","beginsAt":101101,"endsAt":101101,"type":"Sprite Misc.","descriptio":"Change from D0 to 80 to make bob-ombs not stun themselves then explode on their own, like SMB3 and other games."},{"address":"$018AF5","length":"1 byte","beginsAt":101109,"endsAt":101109,"type":"Timer","descriptio":"How quickly Bob-omb explodes"},{"address":"$018BCD","length":"1 byte","beginsAt":101325,"endsAt":101325,"type":"Misc.","descriptio":"What animation frame most regular sprites use when turning around"},{"address":"$018C0D","length":"1 byte","beginsAt":101389,"endsAt":101389,"type":"Sprite number","descriptio":"Sprite number to start adding wings to 2-tile high sprites"},{"address":"$018C31","length":"1 byte","beginsAt":101425,"endsAt":101425,"type":"Sprite number","descriptio":"Sprite that Spiny Egg turns into after touching the ground"},{"address":"$018CD7","length":"1 byte","beginsAt":101591,"endsAt":101591,"type":"Misc.","descriptio":"Time it takes for a Red Vertical Parakoopa to turn around after reaching it's maximum/mimimum Y speed. (08)"},{"address":"$018DA2","length":"1 byte","beginsAt":101794,"endsAt":101794,"type":"Sprite physics","descriptio":"Winged Goomba jump height (between 80-FF)."},{"address":"$018DC7","length":"16 bytes. Ends at $018DD6.","beginsAt":101831,"endsAt":101846,"type":"Sprite tilemap related","descriptio":"Goomba Wing alignment, X position. First 8 bytes are for the alignment when the goomba's hopping left, the other 8 when he's hopping into the right direction."},{"address":"$018DDF","length":"2 bytes. Ends at $018DE0.","beginsAt":101855,"endsAt":101856,"type":"Sprite tilemap related","descriptio":"Palette/GFX page/Priority/Flip of Goomba Wing Tiles"},{"address":"$018DE1","length":"4 bytes. Ends at $018DE4.","beginsAt":101857,"endsAt":101860,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Goomba Wings"},{"address":"$018DE5","length":"4 bytes. Ends at $018DE8.","beginsAt":101861,"endsAt":101864,"type":"Sprite tilemap related","descriptio":"Size of Goomba Wing tiles"},{"address":"$018E6E","length":"4 bytes. Ends at $018E71.","beginsAt":101998,"endsAt":102001,"type":"Misc.","descriptio":"Speed of piranha plant (in pipe, going up, staying up, going down)."},{"address":"$018E93","length":"1 byte","beginsAt":102035,"endsAt":102035,"type":"Sprite Misc.","descriptio":"YXPPCCCT properties of the stem of sprite 2A, the upside-down piranha plant. Change to $0A to make it use the first graphics page."},{"address":"$018ECE","length":"1 byte","beginsAt":102094,"endsAt":102094,"type":"Misc.","descriptio":"Replace D0 with 80 to make the classic and upsidedown piranha plants keep coming out of the pipe even if Mario is near or on top of the sprite."},{"address":"$018F8D","length":"1 byte","beginsAt":102285,"endsAt":102285,"type":"Sprite number","descriptio":"Object Hopping Flame leaves behind"},{"address":"$018FC7","length":"8 bytes. Ends at $018FCE.","beginsAt":102343,"endsAt":102350,"type":"Sprite tilemap related","descriptio":"Bullet Bill properties, YXPPCCCT.\n- First byte: Right flying bullet bill\n- Second byte: Left flying bullet bill\n- Third byte: Vertically upwards flying bullet bill\n- Fourth byte: Vertically downwards flying bullet bill\n- Fifth byte: Diagonally flying bullet bill, lower left\n- Sixth byte: Diagonally flying bullet bill, upper left\n- Seventh byte: Diagonally flying bullet bill, upper right\n- Eighth byte: Diagonally flying bullet bill, lower right"},{"address":"$018FCF","length":"8 bytes. Ends at $018FD6.","beginsAt":102351,"endsAt":102358,"type":"Sprite tilemap related","descriptio":"Which GFX frame to use (00 = regular bill, 01 = vertical bill, 02 = diagonal bill) for the Bullet Bills. Same order as x91C7."},{"address":"$018FD7","length":"8 bytes. Ends at $018FDE.","beginsAt":102359,"endsAt":102366,"type":"Sprite physics","descriptio":"X speed of Bullet Bills. Same order as $018FC7."},{"address":"$018FDF","length":"8 bytes. Ends at $018FE6.","beginsAt":102367,"endsAt":102374,"type":"Sprite physics","descriptio":"Y speed of Bullet Bills. Same order as $018FC7."},{"address":"$0190BA","length":"61 bytes. Ends at $0190F6.","beginsAt":102586,"endsAt":102646,"type":"Sprite physics","descriptio":"X positions of the sprite/object clippings.\nEach clipping value uses four pairs of bytes (one from here, one from $01:90F7); they point to which pixels the sprite uses to interact with the two layers, relative to $D8/$E4/etc."},{"address":"$0190F7","length":"61 bytes. Ends at $019133.","beginsAt":102647,"endsAt":102707,"type":"Sprite physics","descriptio":"Y positions of the sprite/object clippings.\nEach clipping value uses four pairs of bytes (one from $01:8EBA, one from here); they point to which pixels the sprite uses to interact with the two layers, relative to $D8/$E4/etc."},{"address":"$019138","length":"8 bytes. Ends at $01913F.","beginsAt":102712,"endsAt":102719,"type":"Subroutine (JSL)","descriptio":"JSL for sprites interacting with objects. Actually calls routine at $019140."},{"address":"$019211","length":"115 bytes. Ends at $019283.","beginsAt":102929,"endsAt":103043,"type":"Subroutine (JSR)","descriptio":"Sprite buoyancy routine. Called by the object interaction routine."},{"address":"$0193EF","length":"22 bytes. Ends at $019404.","beginsAt":103407,"endsAt":103428,"type":"Sprite subroutine (JSR)","descriptio":"The code that makes sprites move if placed on conveyor belts."},{"address":"$0195A5","length":"1 byte","beginsAt":103845,"endsAt":103845,"type":"Sprite physics","descriptio":"Change this value to $00 to fix a small glitch with carryable sprites where throwing the sprite upwards at a hittable block will occasionally cause it to hit the block without actually activating it (due to registering both the bottom of the block and the side of another block at the same time)."},{"address":"$01961C","length":"8 bytes. Ends at $019623.","beginsAt":103964,"endsAt":103971,"type":"Sprite number","descriptio":"Sprites spawned by stomping Koopa Troopas (shelless Koopas)"},{"address":"$01962A","length":"49 bytes. Ends at $01965A.","beginsAt":103978,"endsAt":104026,"type":"ASM","descriptio":"Code that handles the Bob-omb flashing and exploding. Change $019630 from 1D to 1C to disable the flashing entirely."},{"address":"$019632","length":"1 byte","beginsAt":103986,"endsAt":103986,"type":"Sound effect","descriptio":"Bob-omb's explosion SFX"},{"address":"$01963C","length":"1 byte","beginsAt":103996,"endsAt":103996,"type":"Timer","descriptio":"Length of Bob-omb's explosion"},{"address":"$019688","length":"1 byte","beginsAt":104072,"endsAt":104072,"type":"Misc.","descriptio":"Which shell colour makes a shelless Koopa become invincible (00=Green; 01=Red; 02=Blue; 03=Yellow)"},{"address":"$0196C6","length":"1 byte","beginsAt":104134,"endsAt":104134,"type":"ASM","descriptio":"Change from 1A to 04 to prevent shelless Koopas from hopping out of stunned shells (Use with $01AA15)"},{"address":"$019768","length":"1 byte","beginsAt":104296,"endsAt":104296,"type":"Sprite number","descriptio":"[07] Which of the four Koopas generates a coin when stomped. Valid values are 04 (green), 05 (red), 06 (blue), and 07 (yellow). All others will make the coin never appear.\nAlternatively, you can change the next two bytes ([D0 0A]) to [EA EA] to make all (shelled) Koopas spawn coins."},{"address":"$01977C","length":"1 byte","beginsAt":104316,"endsAt":104316,"type":"Sprite number","descriptio":"Sprite that's spawned when a Yellow Koopa is stomped (Coin)"},{"address":"$019807","length":"1 byte","beginsAt":104455,"endsAt":104455,"type":"Misc.","descriptio":"Default animation frame to use for the shell"},{"address":"$01980E","length":"1 byte","beginsAt":104462,"endsAt":104462,"type":"Misc.","descriptio":"Animation frame to use for the shell when Mario is turning around while holding it"},{"address":"$01983F","length":"1 byte","beginsAt":104511,"endsAt":104511,"type":"Timer","descriptio":"Timing that enemies in a stunned state begin to shake"},{"address":"$019851","length":"1 byte","beginsAt":104529,"endsAt":104529,"type":"Sprite tilemap related","descriptio":"Change to #$80 to prevent koopas eyes blinking while inside the shell."},{"address":"$019881","length":"1 byte","beginsAt":104577,"endsAt":104577,"type":"Sprite tilemap related","descriptio":"Koopa eye tiles when in shell (open)"},{"address":"$019889","length":"1 byte","beginsAt":104585,"endsAt":104585,"type":"Sprite tilemap related","descriptio":"Koopa eye tiles when in shell (closed)"},{"address":"$019913","length":"8 bytes. Ends at $01991A.","beginsAt":104723,"endsAt":104730,"type":"ASM","descriptio":"Start of sprite being kicked routine."},{"address":"$019972","length":"1 byte","beginsAt":104818,"endsAt":104818,"type":"Sprite physics","descriptio":"Y speed of kicked Koopa shells and throw blocks when they hit the ground.\nChange from 10 to 0C to make shells always glide over one-tile-wide holes, or 14 to make them always fall in."},{"address":"$01999F","length":"1 byte","beginsAt":104863,"endsAt":104863,"type":"Sound effect","descriptio":"Hitting block with shell sound"},{"address":"$019A22","length":"4 bytes. Ends at $019A25.","beginsAt":104994,"endsAt":104997,"type":"Misc.","descriptio":"Animation frame assignments for the shell"},{"address":"$019A26","length":"4 bytes. Ends at $019A29.","beginsAt":104998,"endsAt":105001,"type":"Misc.","descriptio":"Flip of each animation frame"},{"address":"$019A34","length":"1 byte","beginsAt":105012,"endsAt":105012,"type":"Misc.","descriptio":"How many animation frames the spinning shell has, -1"},{"address":"$019A93","length":"1 byte","beginsAt":105107,"endsAt":105107,"type":"Sprite physics","descriptio":"Change to 02 to fix a small glitch where sprites can slide through solid blocks while sinking in lava if they're moving to the left."},{"address":"$019AA2","length":"66 bytes. Ends at $019AE3.","beginsAt":105122,"endsAt":105187,"type":"Sprite subroutine (JSR)","descriptio":"Routine for sprites in state 02 (killed and falling offscreen). It's also shared by the routine for sprites killed in lava."},{"address":"$019B0B","length":"1 byte","beginsAt":105227,"endsAt":105227,"type":"Sprite tilemap related","descriptio":"Tile used by squished Dino Torch"},{"address":"$019B83","length":"6 bytes. Ends at $019B88.","beginsAt":105347,"endsAt":105352,"type":"Sprite tilemap related","descriptio":"Standard Sprite Tile Table: Koopa tilemap"},{"address":"$019B89","length":"3 bytes. Ends at $019B8B.","beginsAt":105353,"endsAt":105355,"type":"Sprite tilemap related","descriptio":"Standard Sprite Tile Table: Koopa shell tilemap"},{"address":"$019B8C","length":"7 bytes. Ends at $019B92.","beginsAt":105356,"endsAt":105362,"type":"Sprite tilemap related","descriptio":"Standard Sprite Tile Table: Shelless koopa tilemap (Fourth byte unused?)"},{"address":"$019B93","length":"7 bytes. Ends at $019B99.","beginsAt":105363,"endsAt":105369,"type":"Sprite tilemap related","descriptio":"Standard Sprite Tile Table: Blue shelless koopa tilemap (Fourth byte unused?)"},{"address":"$019B9A","length":"14 bytes. Ends at $019BA7.","beginsAt":105370,"endsAt":105383,"type":"Sprite tilemap related","descriptio":"Standard Sprite Tile Table: Para-goomba tilemap"},{"address":"$019BA8","length":"4 bytes. Ends at $019BAB.","beginsAt":105384,"endsAt":105387,"type":"Sprite tilemap related","descriptio":"Standard Sprite Tile Table: Goomba tilemap"},{"address":"$019BAC","length":"14 bytes. Ends at $019BB9.","beginsAt":105388,"endsAt":105401,"type":"Sprite tilemap related","descriptio":"Standard Sprite Tile Table: Para-bomb tilemap"},{"address":"$019BBA","length":"3 bytes. Ends at $019BBC.","beginsAt":105402,"endsAt":105404,"type":"Sprite tilemap related","descriptio":"Standard Sprite Tile Table: Bob-omb tilemap"},{"address":"$019BBD","length":"12 bytes. Ends at $019BC8.","beginsAt":105405,"endsAt":105416,"type":"Sprite tilemap related","descriptio":"Standard Sprite Tile Table: Piranha plant tilemap"},{"address":"$019BC9","length":"1 byte","beginsAt":105417,"endsAt":105417,"type":"Sprite tilemap related","descriptio":"Standard Sprite Tile Table: Football tilemap"},{"address":"$019BCA","length":"4 bytes. Ends at $019BCD.","beginsAt":105418,"endsAt":105421,"type":"Sprite tilemap related","descriptio":"Standard Sprite Tile Table: Bullet Bill tilemap (Horizontal, Vertical, Diagonal, Diagonal)"},{"address":"$019BCE","length":"3 bytes. Ends at $019BD0.","beginsAt":105422,"endsAt":105424,"type":"Sprite tilemap related","descriptio":"Standard Sprite Tile Table: Spiny tilemap"},{"address":"$019BD1","length":"8 bytes. Ends at $019BD8.","beginsAt":105425,"endsAt":105432,"type":"Sprite tilemap related","descriptio":"Standard Sprite Tile Table: Spiny egg tilemap"},{"address":"$019BDD","length":"3 bytes. Ends at $019BDF.","beginsAt":105437,"endsAt":105439,"type":"Sprite tilemap related","descriptio":"Standard Sprite Tile Table: Buzzy Beetle"},{"address":"$019BE3","length":"3 bytes. Ends at $019BE5.","beginsAt":105443,"endsAt":105445,"type":"Sprite tilemap related","descriptio":"Standard Sprite Tile Table: Buzzy Beetle Shell."},{"address":"$019BE6","length":"6 bytes. Ends at $019BEB.","beginsAt":105446,"endsAt":105451,"type":"Sprite tilemap related","descriptio":"Spike Top tilemap"},{"address":"$019BEC","length":"2 bytes. Ends at $019BED.","beginsAt":105452,"endsAt":105453,"type":"Sprite tilemap related","descriptio":"Hopping Flame tilemap"},{"address":"$019BEE","length":"6 bytes. Ends at $019BF3.","beginsAt":105454,"endsAt":105459,"type":"Sprite tilemap related","descriptio":"Lakitu tilemap (3 frames, 2 bytes each)"},{"address":"$019BF6","length":"12 bytes. Ends at $019C01.","beginsAt":105462,"endsAt":105473,"type":"Sprite tilemap related","descriptio":"Magikoopa Tilemap"},{"address":"$019C02","length":"1 byte","beginsAt":105474,"endsAt":105474,"type":"Sprite tilemap related","descriptio":"Throw block sprite tilemap and turn block sprite with hidden enemies inside. (Both use the same byte)"},{"address":"$019C03","length":"10 bytes. Ends at $019C0C.","beginsAt":105475,"endsAt":105484,"type":"Sprite tilemap related","descriptio":"Climbing Koopa Tilemap"},{"address":"$019C0D","length":"4 bytes. Ends at $019C10.","beginsAt":105485,"endsAt":105488,"type":"Sprite tilemap related","descriptio":"Fish (Cheep Cheep) Tilemap (2 frames swimming, 2 frames flopping)"},{"address":"$019C13","length":"4 bytes. Ends at $019C16.","beginsAt":105491,"endsAt":105494,"type":"Sprite tilemap related","descriptio":"Thwimp Tilemap"},{"address":"$019C17","length":"1 byte","beginsAt":105495,"endsAt":105495,"type":"Sprite tilemap related","descriptio":"Yoshi Egg Tilemap (only manifests if the Yoshi egg is in the stunned status ($14C8 = #$09), i.e. found in a block or laid by Yoshi; otherwise, the tile loaded from this address is overwritten before drawing).\n\nChange alongside $01F760 - $01F763 and $01F794 to completely remap the Yoshi egg tiles."},{"address":"$019C1D","length":"12 bytes. Ends at $019C28.","beginsAt":105501,"endsAt":105512,"type":"Sprite tilemap related","descriptio":"Portable Springboard Tilemap"},{"address":"$019C2D","length":"4 bytes. Ends at $019C30.","beginsAt":105517,"endsAt":105520,"type":"Sprite tilemap related","descriptio":"Bony Beetle tilemap"},{"address":"$019C35","length":"16 bytes. Ends at $019C44.","beginsAt":105525,"endsAt":105540,"type":"Sprite tilemap related","descriptio":"Vertical Fireball (Podoboo) tilemap."},{"address":"$019C5A","length":"2 bytes. Ends at $019C5B.","beginsAt":105562,"endsAt":105563,"type":"Sprite tilemap related","descriptio":"Eerie tilemap"},{"address":"$019C5C","length":"9 bytes. Ends at $019C64.","beginsAt":105564,"endsAt":105572,"type":"Sprite tilemap related","descriptio":"Boo Ghost Tilemap"},{"address":"$019C65","length":"4 bytes. Ends at $019C68.","beginsAt":105573,"endsAt":105576,"type":"Sprite tilemap related","descriptio":"Rip Van Fish Tilemap"},{"address":"$019C69","length":"2 bytes. Ends at $019C6A.","beginsAt":105577,"endsAt":105578,"type":"Sprite tilemap related","descriptio":"Vertical Dolphin Tilemap"},{"address":"$019C6B","length":"2 bytes. Ends at $019C6C.","beginsAt":105579,"endsAt":105580,"type":"Sprite tilemap related","descriptio":"Diggin' Chuck's Rock Tilemap"},{"address":"$019C6D","length":"3 bytes. Ends at $019C6F.","beginsAt":105581,"endsAt":105583,"type":"Sprite tilemap related","descriptio":"Monty Mole Tilemap"},{"address":"$019C70","length":"1 byte","beginsAt":105584,"endsAt":105584,"type":"Sprite tilemap related","descriptio":"Ledge-dwelling Mole's Dirt Tilemap (data shared with Goal Point Sphere's Tilemap)"},{"address":"$019C71","length":"8 bytes. Ends at $019C78.","beginsAt":105585,"endsAt":105592,"type":"Sprite tilemap related","descriptio":"Ground-dwelling Monty Mole's Dirt (2 Air tiles, 2 Dirt Tiles, 2 Air tiles, 2 Dirt Tiles)"},{"address":"$019C79","length":"4 bytes. Ends at $019C7C.","beginsAt":105593,"endsAt":105596,"type":"Sprite tilemap related","descriptio":"Sumo Bros' Lightning Tilemap"},{"address":"$019C7D","length":"2 bytes. Ends at $019C7E.","beginsAt":105597,"endsAt":105598,"type":"Sprite tilemap related","descriptio":"Ninji Tilemap"},{"address":"$019C7F","length":"84 bytes. Ends at $019CD2.","beginsAt":105599,"endsAt":105682,"type":"Sprite tilemap related","descriptio":"Table containing a sprite's location in the Standard Sprite Tile Table."},{"address":"$019CD3","length":"4 bytes. Ends at $019CD6.","beginsAt":105683,"endsAt":105686,"type":"Sprite tilemap related","descriptio":"X displacement for tiles in the first shared GFX routine ($019CF3)."},{"address":"$019CF3","length":"108 bytes. Ends at $019D5E.","beginsAt":105715,"endsAt":105822,"type":"Sprite subroutine (JSR)","descriptio":"The first of the shared graphics subroutines. This one creates 4 8x8 tiles in a 16x16 block."},{"address":"$019D5F","length":"177 bytes. Ends at $019E0F.","beginsAt":105823,"endsAt":105999,"type":"Sprite subroutine (JSL)","descriptio":"The second of the shared graphics subroutines. This one creates 2 16x16 tiles in a 16x32 block, with the second one tile below the base position. It can also be called with a JSR to $019D67."},{"address":"$019DB6","length":"1 byte","beginsAt":105910,"endsAt":105910,"type":"Sprite tilemap related","descriptio":"Palette/GFX page of standard sprites (shared)"},{"address":"$019E1C","length":"4 bytes. Ends at $019E1F.","beginsAt":106012,"endsAt":106015,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Paratroopa Wings"},{"address":"$019E20","length":"4 bytes. Ends at $019E23.","beginsAt":106016,"endsAt":106019,"type":"Sprite tilemap related","descriptio":"Palette/GFX page/Priority/Flip of Paratroopa Wing tiles"},{"address":"$019E24","length":"4 bytes. Ends at $019E27.","beginsAt":106020,"endsAt":106023,"type":"Sprite tilemap related","descriptio":"Size of Paratroopa Wing tiles"},{"address":"$019F0D","length":"78 bytes. Ends at $019F5A.","beginsAt":106253,"endsAt":106330,"type":"Sprite subroutine (JSR)","descriptio":"The third of the shared graphics subroutines. This one creates a single 16x16 tile."},{"address":"$019F3C","length":"1 byte","beginsAt":106300,"endsAt":106300,"type":"Sprite tilemap related","descriptio":"Palette/GFX page of standard sprites (shared)"},{"address":"$019F5B","length":"6 bytes. Ends at $019F60.","beginsAt":106331,"endsAt":106336,"type":"Coordinate","descriptio":"x-pos table of sprite being carried:\nwalking, turn from left to right, turn from right to left (two bytes each, indexed by Mario's direction)"},{"address":"$019F6B","length":"4 bytes. Ends at $019F6E.","beginsAt":106347,"endsAt":106350,"type":"Sprite physics","descriptio":"X-speed of the touched/kicked shell.\nValue 1: left-speed, when touched (not kicking)\nValue 2: right-speed, when touched\nValue 3: left-speed, when kicked\nValue 4: right-speed, when kicked.\nThis will also affect the shell of buzzy beetle! Setting the speed to 00 or FF will make the shells not spinning, giving unlimited score.\nOriginal Values:\nD2 2E CC 34"},{"address":"$019F9B","length":"46 bytes. Ends at $019FC8.","beginsAt":106395,"endsAt":106440,"type":"Subroutine (JSR)","descriptio":"First half of the routine that handles sprites being carried, though it's actually only the part that handles the P-balloon.\nAny other sprite will branch to $019FE0\n$019FA7 change to EA EA EA EA EA to the P-Balloon last forever.\n$019FB0 is the time at which the deflatting animation starts. (default 30)\n$019FC2 change 90 to 80 to make Mario keep the balloon effect even after taking hits or power-ups. (causes weird behaviour when dying)"},{"address":"$019FA7","length":"5 bytes. Ends at $019FAB.","beginsAt":106407,"endsAt":106411,"type":"ASM","descriptio":"Change to [EA EA EA EA EA] to give the P-Balloon an infinite timer"},{"address":"$01A0A7","length":"1 byte","beginsAt":106663,"endsAt":106663,"type":"Sprite physics","descriptio":"Number of frames to disable player contact with any carryable sprite after kicking it."},{"address":"$01A0AC","length":"1 byte","beginsAt":106668,"endsAt":106668,"type":"Timer","descriptio":"Time to show Mario's \"kicking\" pose when a Bob-omb is kicked"},{"address":"$01A119","length":"1 byte","beginsAt":106777,"endsAt":106777,"type":"Coordinate","descriptio":"carried sprite Y-pos while picking up"},{"address":"$01A1E1","length":"4 bytes. Ends at $01A1E4.","beginsAt":106977,"endsAt":106980,"type":"ASM","descriptio":"Changing [1A 1A 29 0F] to [EA EA EA EA] will disable the throw block sprites flashing."},{"address":"$01A1F0","length":"1 byte","beginsAt":106992,"endsAt":106992,"type":"Sprite tilemap related","descriptio":"Tile used by stunned Bob-omb"},{"address":"$01A1FA","length":"1 byte","beginsAt":107002,"endsAt":107002,"type":"Sprite tilemap related","descriptio":"Key tilemap"},{"address":"$01A221","length":"1 byte","beginsAt":107041,"endsAt":107041,"type":"Sprite tilemap related","descriptio":"POW (P-Switch) Tilemap"},{"address":"$01A291","length":"1 byte","beginsAt":107153,"endsAt":107153,"type":"Sound effect","descriptio":"Sound baby Yoshi makes when eating"},{"address":"$01A2AD","length":"2 bytes. Ends at $01A2AE.","beginsAt":107181,"endsAt":107182,"type":"ASM","descriptio":"Change to [80 06] to make Baby Yoshi instantly get big from everything, or change it to [80 45] to make Baby Yoshi treat powerups as any other sprite and require five of them to become big."},{"address":"$01A2BC","length":"1 byte","beginsAt":107196,"endsAt":107196,"type":"Sprite number","descriptio":"Sprite that Baby Yoshi turns into"},{"address":"$01A2C6","length":"1 byte","beginsAt":107206,"endsAt":107206,"type":"Sound effect","descriptio":"Yoshi's egg explodes sound"},{"address":"$01A2FB","length":"1 byte","beginsAt":107259,"endsAt":107259,"type":"Misc.","descriptio":"Number of enemies Baby Yoshi must eat to grow"},{"address":"$01A61E","length":"7 bytes. Ends at $01A624.","beginsAt":108062,"endsAt":108068,"type":"Sound effect","descriptio":"Sound effects to use for consecutive bounces on enemies. Begins with [13] (1st bounce) and ends with [19] (7th bounce)."},{"address":"$01A65B","length":"1 byte","beginsAt":108123,"endsAt":108123,"type":"Sound effect","descriptio":"Koopa hit by shell sound"},{"address":"$01A716","length":"1 byte","beginsAt":108310,"endsAt":108310,"type":"ASM","descriptio":"Set to 60 to stop Blue Koopas from kicking shells"},{"address":"$01A729","length":"1 byte","beginsAt":108329,"endsAt":108329,"type":"Sound effect","descriptio":"Kicking shell sound"},{"address":"$01A78D","length":"1 byte","beginsAt":108429,"endsAt":108429,"type":"ASM","descriptio":"Set to 80 to stop Blue Koopas from stopping shells"},{"address":"$01A7D1","length":"1 byte","beginsAt":108497,"endsAt":108497,"type":"Sprite number","descriptio":"Enemy spawned from stomping horizontal green winged koopas"},{"address":"$01A7D2","length":"1 byte","beginsAt":108498,"endsAt":108498,"type":"Sprite number","descriptio":"Enemy spawned from stomping bouncing green winged koopas"},{"address":"$01A7D3","length":"1 byte","beginsAt":108499,"endsAt":108499,"type":"Sprite number","descriptio":"Enemy spawned from stomping vertical red winged koopas"},{"address":"$01A7D4","length":"1 byte","beginsAt":108500,"endsAt":108500,"type":"Sprite number","descriptio":"Enemy spawned from stomping horizontal red winged koopas"},{"address":"$01A7D5","length":"1 byte","beginsAt":108501,"endsAt":108501,"type":"Sprite number","descriptio":"Enemy spawned from stomping yellow winged koopas"},{"address":"$01A7D9","length":"1 byte","beginsAt":108505,"endsAt":108505,"type":"Sprite number","descriptio":"Enemy spawned from stomping winged goombas"},{"address":"$01A7DA","length":"1 byte","beginsAt":108506,"endsAt":108506,"type":"Sprite number","descriptio":"Sprite spawned from Para-Goomba"},{"address":"$01A7DB","length":"1 byte","beginsAt":108507,"endsAt":108507,"type":"Sprite number","descriptio":"Sprite spawned from Para-Bomb"},{"address":"$01A7DC","length":"93 bytes. Ends at $01A838.","beginsAt":108508,"endsAt":108600,"type":"Subroutine (JSL)","descriptio":"Subroutine that checks for contact between Mario and the sprite slot currently in X. If carry is set, Mario is touching the sprite."},{"address":"$01A7F0","length":"3 bytes. Ends at $01A7F2.","beginsAt":108528,"endsAt":108530,"type":"Sprite Misc.","descriptio":"Change from [1D A0 15] to [EA EA EA] to fix a glitch where sprites lose their interaction with the player while touching the edge of the screen. An example of this happens when a Banzai Bill's leftmost pixel goes past the left edge of the screen."},{"address":"$01A83B","length":"778 bytes. Ends at $01AB44.","beginsAt":108603,"endsAt":109380,"type":"Sprite subroutine (JSR)","descriptio":"Default sprite interaction routine. The sprite interaction routine calls it if $167A,x is positive/ bit 7 is not set.\n- $01A852 controls number where the star chain should stop. To be used with $01A856\n- $01A856 controls, how many points/ one-ups are added if the max limit of a star chain is reached. To be used with $01A852\n\n$01A8D0 handles the code when you jump on a spiky enemy.\nChange $01A8D3 to $AD (LDA $xxxx) to disable spin jumping on spiky enemies. On contrary, change $01A8D3 to $80,$01 (BRA $01) to disable jumping with Yoshi on spiky enemies. To disable both, change $01A8D0 to $80,$04 (BRA $04).\n\n$01A91C handles the code when you jump on a non-spiky enemy.\nChange $01A91F to $AD (LDA $xxxx) to make spin jumps count as normal jumps. On contrary, change $01A91F to $80,$01 (BRA $01) to make jumps with Yoshi on enemies count as regular jumps. To make both count as regular jumps, change $01A91C to $80,$04 (BRA $04).\n\nChange $01A930 to $00 to enable the boost gain with spin jump kill.\n$01A940 is the sound effect to play when you kill an enemy with a spin jump/ jump with Yoshi.\n\n$01AA42 is the routine for carryable sprites.\nChange $01AA61 to $AD (LDA $xxxx) to enable carrying more than one sprite at time even though you already have one."},{"address":"$01A887","length":"1 byte","beginsAt":108679,"endsAt":108679,"type":"Sprite physics","descriptio":"Number of frames to disable player contact for most sprites after being touched by Mario. Used to prevent issues like Mario getting hurt by a sprite he just bounced off of."},{"address":"$01A8D3","length":"1 byte","beginsAt":108755,"endsAt":108755,"type":"Misc.","descriptio":"Change from 0D to AD to prevent Mario from being able to jump on spikey enemies with the spin jump"},{"address":"$01A940","length":"1 byte","beginsAt":108864,"endsAt":108864,"type":"Sound effect","descriptio":"Sound effect used when spinjumping an enemy or when Yoshi stomps on it."},{"address":"$01A976","length":"1 byte","beginsAt":108918,"endsAt":108918,"type":"Sprite number","descriptio":"Sprite that Super Koopa (sprite 73) becomes when stomped"},{"address":"$01A987","length":"1 byte","beginsAt":108935,"endsAt":108935,"type":"Sprite number","descriptio":"Enemy spawned from stomping Dino-Rhino"},{"address":"$01A9D9","length":"1 byte","beginsAt":109017,"endsAt":109017,"type":"Timer","descriptio":"Timer for displaying smashed shelless Koopas"},{"address":"$01AA0E","length":"1 byte","beginsAt":109070,"endsAt":109070,"type":"Misc.","descriptio":"Change to 03 to prevent Bob-omb, Goomba, Mechakoopa's stun timers from being reset when kicked"},{"address":"$01AA15","length":"1 byte","beginsAt":109077,"endsAt":109077,"type":"ASM","descriptio":"Change from 02 to FF to prevent Koopas from spawning shelless Koopas when jumped on. (Use with $0196C6)"},{"address":"$01AA29","length":"1 byte","beginsAt":109097,"endsAt":109097,"type":"Timer","descriptio":"Stun timer for Goombas, Buzzy Beetles, Mechakoopas, Bob-ombs"},{"address":"$01AA2E","length":"1 byte","beginsAt":109102,"endsAt":109102,"type":"Misc.","descriptio":"State of Koopa when stomped"},{"address":"$01AA33","length":"15 bytes. Ends at $01AA41.","beginsAt":109107,"endsAt":109121,"type":"Subroutine (JSL)","descriptio":"Boost player subroutine. Boosts the player up a bit or a lot depending on whether A/B are being pressed."},{"address":"$01AA38","length":"1 byte","beginsAt":109112,"endsAt":109112,"type":"Sprite physics","descriptio":"How high Mario bounces when he jumps on an enemy (normal jump & spin jump)"},{"address":"$01AA3E","length":"1 byte","beginsAt":109118,"endsAt":109118,"type":"Sprite physics","descriptio":"How high Mario bounces when he jumps on an enemy with button A pressed (normal jump & spin jump)"},{"address":"$01AA5C","length":"1 byte","beginsAt":109148,"endsAt":109148,"type":"ASM","descriptio":"Change from BEQ [F0] to BRA [80] and Mario will not be able to carry items by holding X or Y."},{"address":"$01AAA0","length":"1 byte","beginsAt":109216,"endsAt":109216,"type":"Misc.","descriptio":"State of Koopa shell when kicked"},{"address":"$01AAA5","length":"1 byte","beginsAt":109221,"endsAt":109221,"type":"Timer","descriptio":"Number of frames to disable player contact with any carryable sprite after touching it without holding dash (not to be confused with $01A0A7). Default is $10."},{"address":"$01AB05","length":"2 bytes. Ends at $01AB06.","beginsAt":109317,"endsAt":109318,"type":"Music","descriptio":"Change to [80 00] to not have star music override P-Switch music. Instead which ever is pressed/collected recently will have priority."},{"address":"$01AB08","length":"1 byte","beginsAt":109320,"endsAt":109320,"type":"Music","descriptio":"Music played when a POW is pressed"},{"address":"$01AB0D","length":"1 byte","beginsAt":109325,"endsAt":109325,"type":"Timer","descriptio":"Time it takes for POW to disappear after jumping on it. Change to 00 to keep the POW after jumping on it."},{"address":"$01AB1B","length":"1 byte","beginsAt":109339,"endsAt":109339,"type":"Timer","descriptio":"How long blue and silver P-Switches last"},{"address":"$01AB20","length":"1 byte","beginsAt":109344,"endsAt":109344,"type":"Timer","descriptio":"POW shaking screen timer."},{"address":"$01AB28","length":"4 bytes. Ends at $01AB2B.","beginsAt":109352,"endsAt":109355,"type":"Misc.","descriptio":"Change to EA EA EA EA to prevent on screen sprites from turning into silver coins when the silver POW is active (USE WITH $02A9A1)"},{"address":"$01AB55","length":"1 byte","beginsAt":109397,"endsAt":109397,"type":"Sound effect","descriptio":"Change to [80] to give enemies (inc. goomba) the SMAS stomp sound."},{"address":"$01AB63","length":"1 byte","beginsAt":109411,"endsAt":109411,"type":"Misc.","descriptio":"Value that determines what to give the player for bouncing on 8 or more enemies consecutively. Change to [07] to give the player 8000 points instead of a 1up for the consecutive jumps.\n(See ROM Map address $02ACE5 for other values)"},{"address":"$01AB6F","length":"42 bytes. Ends at $01AB98.","beginsAt":109423,"endsAt":109464,"type":"Sprite subroutine (JSL)","descriptio":"Display the white star effect (mostly used when spin-jumping on a spiked ennemy)"},{"address":"$01ACF9","length":"55 bytes. Ends at $01AD2F.","beginsAt":109817,"endsAt":109871,"type":"Subroutine (JSL)","descriptio":"Random number generation subroutine. Access using JSL $01ACF9.\n\noutput:\n16bit result at $148D."},{"address":"$01AE88","length":"8 bytes. Ends at $01AE8F.","beginsAt":110216,"endsAt":110223,"type":"Sprite Misc.","descriptio":"Sprites for the flying ? blocks to spawn, as indexes to the table starting at $0288A3. First four are used if Mario has a powerup, second four if he doesn't."},{"address":"$01AEE1","length":"1 byte","beginsAt":110305,"endsAt":110305,"type":"Misc.","descriptio":"What face to use for Thwomp if Mario comes close (00 - Calm, 01 - Grumpy, 02 - Raging)"},{"address":"$01AEEF","length":"1 byte","beginsAt":110319,"endsAt":110319,"type":"Misc.","descriptio":"What face to use for Thwomp Crashing down (00 - Calm, 01 - Grumpy, 02 - Raging)"},{"address":"$01AF13","length":"1 byte","beginsAt":110355,"endsAt":110355,"type":"Timer","descriptio":"Thwomp shaking screen timer."},{"address":"$01AF18","length":"1 byte","beginsAt":110360,"endsAt":110360,"type":"Sound effect","descriptio":"Thwomp Sound Effect."},{"address":"$01AF1D","length":"1 byte","beginsAt":110365,"endsAt":110365,"type":"Timer","descriptio":"Thwomp Stalling Timer."},{"address":"$01AF39","length":"1 byte","beginsAt":110393,"endsAt":110393,"type":"Sprite physics","descriptio":"Thwomp returning Y speed (between 80-90, C0, E0-FF) other values can give odd effects, so do not use any other bytes."},{"address":"$01AF4A","length":"5 bytes. Ends at $01AF4E.","beginsAt":110410,"endsAt":110414,"type":"Sprite tilemap related","descriptio":"Thwomp Tilemap"},{"address":"$01AF4F","length":"5 bytes. Ends at $01AF53.","beginsAt":110415,"endsAt":110419,"type":"Sprite tilemap related","descriptio":"YXPPCCCT - Thwomp Properties\n\nByte 01 - Top left\nByte 02 - Bottom left\nByte 03 - Top right\nByte 04 - Bottom Right\nByte 05 - Angry Thwomp Face"},{"address":"$01AF8D","length":"1 byte","beginsAt":110477,"endsAt":110477,"type":"Sprite tilemap related","descriptio":"Angry Thwomp Face"},{"address":"$01AFEA","length":"1 byte","beginsAt":110570,"endsAt":110570,"type":"Sprite physics","descriptio":"Thwimp jumping height (between 80-FF)"},{"address":"$01AFF3","length":"1 byte","beginsAt":110579,"endsAt":110579,"type":"Sprite physics","descriptio":"Thwimp jumping Right speed."},{"address":"$01AFF7","length":"1 byte","beginsAt":110583,"endsAt":110583,"type":"Sprite physics","descriptio":"Thwimp jumping Left Speed."},{"address":"$01AFFD","length":"1 byte","beginsAt":110589,"endsAt":110589,"type":"Sound effect","descriptio":"Thwimp Sound Effect."},{"address":"$01B002","length":"1 byte","beginsAt":110594,"endsAt":110594,"type":"Timer","descriptio":"Thwimp stalling timer"},{"address":"$01B0A1","length":"1 byte","beginsAt":110753,"endsAt":110753,"type":"Misc.","descriptio":"Value to add for flopping Cheep-Cheep animations"},{"address":"$01B0C4","length":"1 byte","beginsAt":110788,"endsAt":110788,"type":"Sprite physics","descriptio":"How far cheep-cheeps will move (the greater the value, the longer the distance.)"},{"address":"$01B10F","length":"1 byte","beginsAt":110863,"endsAt":110863,"type":"Misc.","descriptio":"Change to 00 to switch the GFX pages used by the swimming and flopping Cheep-Cheeps"},{"address":"$01B119","length":"3 bytes. Ends at $01B11B.","beginsAt":110873,"endsAt":110875,"type":"Sprite tilemap related","descriptio":"Replace 9D F6 15 with EA EA EA to make the fish (Cheep Cheep) tilemap use a single GFX page"},{"address":"$01B12A","length":"36 bytes. Ends at $01B14D.","beginsAt":110890,"endsAt":110925,"type":"Sprite subroutine (JSR)","descriptio":"This subroutine is what is used to kill stunned koopas and out of water fish. The following offsets may be of use:\n$01B12B - How long to show the player kicked a sprite pose.\n$01B130 - The sound effect to play (default #$03)\n$01B132 - The sound effect channel (default $1DF9)\n$01B13D - Y speed of the dying sprite (default #$E0)\n$01B145 - Forces the player to face the killed sprite, change to NOP #2 (EA EA) to disable"},{"address":"$01B14E","length":"44 bytes. Ends at $01B179.","beginsAt":110926,"endsAt":110969,"type":"Sprite subroutine (JSR)","descriptio":"Sprite based sparkle routine. Used by Magikoopa's magic and the goal sphere. The goal sphere calls $01:B152."},{"address":"$01B212","length":"4 bytes. Ends at $01B215.","beginsAt":111122,"endsAt":111125,"type":"Sprite physics","descriptio":"Table of X speeds for the floating spike ball (sprite A4). In order: Slow right, slow left, fast right, fast left."},{"address":"$01B22E","length":"5 bytes. Ends at $01B232.","beginsAt":111150,"endsAt":111154,"type":"Sprite Misc.","descriptio":"The code that checks the sprite buoyancy to determine whether sprites 5C and 5E should float on water or be suspended in the air. You can change this to 80 03 xx xx xx (xx can by any byte) to make them always stay in air or to 80 06 xx xx xx to make them always float."},{"address":"$01B2C3","length":"14 bytes. Ends at $01B2D0.","beginsAt":111299,"endsAt":111312,"type":"Sprite tilemap related","descriptio":"For sprites 55-58 and 5B-5E, partly determines which tilemap to use. 00 -> wooden or checkerboard platform, 01 -> flying rock or grassy platform. The table offset is the sprite number minus 55, and the fifth and sixth bytes and the last four bytes are not used."},{"address":"$01B32B","length":"1 byte","beginsAt":111403,"endsAt":111403,"type":"Sprite tilemap related","descriptio":"Change to 80 to let sprite 63 use the wooden platform tilemap only.\nHowever, the size will be still different, depending on the x-pos."},{"address":"$01B32E","length":"1 byte","beginsAt":111406,"endsAt":111406,"type":"Sprite tilemap related","descriptio":"Left Tile of Checkerboard Platform (sprites 55, 57, 5C and 63)"},{"address":"$01B333","length":"1 byte","beginsAt":111411,"endsAt":111411,"type":"Sprite tilemap related","descriptio":"Center Tile of Checkerboard Platform (sprites 55, 57, 5C and 63)"},{"address":"$01B33E","length":"1 byte","beginsAt":111422,"endsAt":111422,"type":"Sprite tilemap related","descriptio":"Right Tile of Checkerboard Platform (sprites 55, 57, 5C and 63)"},{"address":"$01B345","length":"1 byte","beginsAt":111429,"endsAt":111429,"type":"Sprite tilemap related","descriptio":"Tilemap: Left edge of line guided wooden platform (Sprite 62)"},{"address":"$01B34A","length":"1 byte","beginsAt":111434,"endsAt":111434,"type":"Sprite tilemap related","descriptio":"Tilemap: Center of line guided wooden platform (Sprite 62)"},{"address":"$01B355","length":"1 byte","beginsAt":111445,"endsAt":111445,"type":"Sprite tilemap related","descriptio":"Tilemap: Right edge of line guided wooden platform (Sprite 62)"},{"address":"$01B372","length":"1 byte","beginsAt":111474,"endsAt":111474,"type":"Sprite tilemap related","descriptio":"Tilemap: Right edge of line guided wooden platform (Sprite 62)"},{"address":"$01B383","length":"9 bytes. Ends at $01B38B.","beginsAt":111491,"endsAt":111499,"type":"Sprite tilemap related","descriptio":"Grassy Orange Platform Tilemap (sprites 5D and 5E)"},{"address":"$01B38C","length":"9 bytes. Ends at $01B394.","beginsAt":111500,"endsAt":111508,"type":"Sprite tilemap related","descriptio":"Flying Rock Platform Tilemap (Sprites 56 and 58)"},{"address":"$01B42F","length":"1 byte","beginsAt":111663,"endsAt":111663,"type":"Sprite tilemap related","descriptio":"Edge of Flying Rock Platform (mirrored)"},{"address":"$01B434","length":"1 byte","beginsAt":111668,"endsAt":111668,"type":"Sprite tilemap related","descriptio":"Bottom edge of Rock Platform (mirrored)"},{"address":"$01B43B","length":"1 byte","beginsAt":111675,"endsAt":111675,"type":"Sprite tilemap related","descriptio":"Edge of Grassy Orange Platform (mirrored)"},{"address":"$01B440","length":"1 byte","beginsAt":111680,"endsAt":111680,"type":"Sprite tilemap related","descriptio":"Bottom edge of Grassy Orange Platform (mirrored)"},{"address":"$01B44F","length":"231 bytes. Ends at $01B535.","beginsAt":111695,"endsAt":111925,"type":"Sprite subroutine (JSL)","descriptio":"Invisible solid block subroutine. JSL to it in a sprite to make it solid.\n$01B4C0 - Change to A0 00 to make Super/Fire/Cape Mario have a 16x16 interaction field (like Small Mario) or change to A0 01 to have a 16x32 intereaction field (like Big Mario) (in conjunction with addresses $00EB79 and $03B67C)\n$01B4F3 - SFX that comes up when Mario hits the Message Block/Flying ?-Block sprite.\n\nAfter the routine is done, it outputs the carry flag:\nC = set when the player is in contact with the solid sprite, otherwise clear."},{"address":"$01B555","length":"1 byte","beginsAt":111957,"endsAt":111957,"type":"Sprite physics","descriptio":"Speed of the horizontal platform that goes on forever (sprite 5E)."},{"address":"$01B65A","length":"4 bytes. Ends at $01B65D.","beginsAt":112218,"endsAt":112221,"type":"Sprite tilemap related","descriptio":"X displacement for each tile of the floating spike ball (sprite A4). In order: Top left, top right, bottom left, bottom right."},{"address":"$01B65E","length":"4 bytes. Ends at $01B661.","beginsAt":112222,"endsAt":112225,"type":"Sprite tilemap related","descriptio":"Y displacement for each tile of the floating spike ball (sprite A4). In order: Top left, top right, bottom left, bottom right."},{"address":"$01B662","length":"4 bytes. Ends at $01B665.","beginsAt":112226,"endsAt":112229,"type":"Sprite tilemap related","descriptio":"Tile properties for each tile of the floating spike ball (sprite A4). In order: Top left, top right, bottom left, bottom right."},{"address":"$01B666","length":"57 bytes. Ends at $01B69E.","beginsAt":112230,"endsAt":112286,"type":"Sprite subroutine (JSR)","descriptio":"The GFX routine for the floating spike ball (sprite A4). $01B686 controls the first tile number used, and the second is always one 16x16 tile to the right of that."},{"address":"$01B69F","length":"2 bytes. Ends at $01B6A0.","beginsAt":112287,"endsAt":112288,"type":"Misc.","descriptio":"Length of Turn Block Bridge (sprites 59 and 5A)"},{"address":"$01B6A1","length":"2 bytes. Ends at $01B6A2.","beginsAt":112289,"endsAt":112290,"type":"Sprite physics","descriptio":"X speed of Turn Block Bridge (sprites 59 and 5A)"},{"address":"$01B6A3","length":"2 bytes. Ends at $01B6A4.","beginsAt":112291,"endsAt":112292,"type":"Misc.","descriptio":"Time of Turn Block Bridge (sprites 59 and 5A)"},{"address":"$01B77E","length":"1 byte","beginsAt":112510,"endsAt":112510,"type":"Sprite tilemap related","descriptio":"Tile used by Turn Block Bridge (sprites 59 and 5A)"},{"address":"$01B790","length":"14 bytes. Ends at $01B79D.","beginsAt":112528,"endsAt":112541,"type":"Sprite tilemap related","descriptio":"Change to [09 xx 99 07 03 99 0B 03 99 0F 03 99 13 03] to change the palette used by the turn block bridge. (\"xx\" is the new palette value; 00 is the original.) This also prevents the last tile from being X-flipped."},{"address":"$01B7B3","length":"8 bytes. Ends at $01B7BA.","beginsAt":112563,"endsAt":112570,"type":"Sprite subroutine (JSL)","descriptio":"Finish OAM write caller subroutine (JSRs to the main one and ends in RTL).\n\nValue in A: Amount of OAM slots to write minus 1 (i.e. to write 4 tiles, A must be #$03)\nValue in Y: Size of the OAM tiles. #$00 = 8x8, #$02 = 16x16, any negative value (e.g. #$FF) = is manually set with $0460.\n\nNote: This routine is only used if you finished to write with a regular sprite. Do not use it outside of regular sprites!"},{"address":"$01B7BB","length":"136 bytes. Ends at $01B842.","beginsAt":112571,"endsAt":112706,"type":"Sprite subroutine (JSR)","descriptio":"Finish OAM write routine. JSL to $01B7B3 to access it from all banks other then bank $01."},{"address":"$01B93C","length":"2 bytes. Ends at $01B93D.","beginsAt":112956,"endsAt":112957,"type":"Sprite physics","descriptio":"Green horizontal net Koopa's speed (right, left). Red horizontal net Koopas move twice this speed."},{"address":"$01B94D","length":"1 byte","beginsAt":112973,"endsAt":112973,"type":"Sprite physics","descriptio":"Green vertical net Koopa's initial speed. Red vertical net Koopas move twice this speed."},{"address":"$01BA20","length":"1 byte","beginsAt":113184,"endsAt":113184,"type":"Sprite physics","descriptio":"Lowest Map16 tile that a vertical net Koopa can climb on. Change from 07 to 06 to allow vertical net Koopas to climb on vine tiles."},{"address":"$01BA24","length":"1 byte","beginsAt":113188,"endsAt":113188,"type":"Sprite physics","descriptio":"Highest Map16 tile that a vertical net Koopa can climb on, plus one."},{"address":"$01BA2B","length":"1 byte","beginsAt":113195,"endsAt":113195,"type":"Sprite physics","descriptio":"Lowest Map16 tile that a horizontal net Koopa can climb on. Change from 07 to 06 to allow horizontal net Koopas to climb on vine tiles."},{"address":"$01BA2F","length":"1 byte","beginsAt":113199,"endsAt":113199,"type":"Sprite physics","descriptio":"Highest Map16 tile that a horizontal net Koopa can climb on, plus one."},{"address":"$01BAB7","length":"21 bytes. Ends at $01BACB.","beginsAt":113335,"endsAt":113355,"type":"Sprite tilemap related","descriptio":"Gate Sprite Tilemap"},{"address":"$01BBD3","length":"1 byte","beginsAt":113619,"endsAt":113619,"type":"Sprite tilemap related","descriptio":"Gate Sprite palette"},{"address":"$01BC67","length":"8 bytes. Ends at $01BC6E.","beginsAt":113767,"endsAt":113774,"type":"Misc.","descriptio":"Change to EA EA EA EA EA EA EA EA and every Map16 block will change into sprites when touched by Magikoopa's Magic. (Not just turn blocks)"},{"address":"$01BC7D","length":"1 byte","beginsAt":113789,"endsAt":113789,"type":"Sprite number","descriptio":"What Magikoopa's magic transforms turn block into (1up)"},{"address":"$01BC83","length":"1 byte","beginsAt":113795,"endsAt":113795,"type":"Sprite number","descriptio":"What Magikoopa's magic transforms turn block into (Coin)"},{"address":"$01BC89","length":"1 byte","beginsAt":113801,"endsAt":113801,"type":"Sprite number","descriptio":"What Magikoopa's magic transforms turn block into (Thwimp)"},{"address":"$01BC8F","length":"1 byte","beginsAt":113807,"endsAt":113807,"type":"Sprite number","descriptio":"What Magikoopa's magic transforms turn block into (Yellow Koopa)"},{"address":"$01BD83","length":"1 byte","beginsAt":114051,"endsAt":114051,"type":"Sprite tilemap related","descriptio":"Magikoopa's Magic Tilemap (Circle)"},{"address":"$01BD88","length":"1 byte","beginsAt":114056,"endsAt":114056,"type":"Sprite tilemap related","descriptio":"Magikoopa's Magic Tilemap (Square)"},{"address":"$01BD8D","length":"1 byte","beginsAt":114061,"endsAt":114061,"type":"Sprite tilemap related","descriptio":"Magikoopa's Magic Tilemap (Triangle)"},{"address":"$01BF05","length":"1 byte","beginsAt":114437,"endsAt":114437,"type":"Sprite tilemap related","descriptio":"Tile used by Magikoopa's Wand"},{"address":"$01BF29","length":"1 byte","beginsAt":114473,"endsAt":114473,"type":"Sound effect","descriptio":"SFX played by Magikoopa"},{"address":"$01BF33","length":"1 byte","beginsAt":114483,"endsAt":114483,"type":"Sprite number","descriptio":"The sprite that Magikoopa throws"},{"address":"$01BF6A","length":"121 bytes. Ends at $01BFE2.","beginsAt":114538,"endsAt":114658,"type":"Sprite subroutine (JSR)","descriptio":"The aiming routine used by Magikoopas to aim their magic at (the upper tile of) the player. Input is the total speed (X + Y); output is Y speed in $00 and X speed in $01."},{"address":"$01C0BD","length":"1 byte","beginsAt":114877,"endsAt":114877,"type":"Misc.","descriptio":"[95] Change to A5 to stop the goal point bar from moving."},{"address":"$01C0F0","length":"1 byte","beginsAt":114928,"endsAt":114928,"type":"Music","descriptio":"Goal tape end level music"},{"address":"$01C10A","length":"1 byte","beginsAt":114954,"endsAt":114954,"type":"Sound effect","descriptio":"Goal tape breaking sound effect."},{"address":"$01C11B","length":"1 byte","beginsAt":114971,"endsAt":114971,"type":"Timer","descriptio":"How long the bonus star number stays on screen"},{"address":"$01C158","length":"1 byte","beginsAt":115032,"endsAt":115032,"type":"Sprite tilemap related","descriptio":"Goal Bar Tilemap"},{"address":"$01C164","length":"1 byte","beginsAt":115044,"endsAt":115044,"type":"Sprite tilemap related","descriptio":"Palette/priority/flip of Goal tape tiles"},{"address":"$01C17A","length":"4 bytes. Ends at $01C17D.","beginsAt":115066,"endsAt":115069,"type":"Misc.","descriptio":"Change 22 CA F1 07 to EA EA EA EA to disable the digits made up of star tiles at the goal tape (which resemble the amount of bonus stars gathered)"},{"address":"$01C19E","length":"1 byte","beginsAt":115102,"endsAt":115102,"type":"Sprite tilemap related","descriptio":"Tile for Growing Vine's Piranha head(1)"},{"address":"$01C1A2","length":"1 byte","beginsAt":115106,"endsAt":115106,"type":"Sprite tilemap related","descriptio":"Tile for Growing Vine's Piranha head(2)"},{"address":"$01C1AE","length":"1 byte","beginsAt":115118,"endsAt":115118,"type":"Misc.","descriptio":"Y speed of Growing Vine's growth"},{"address":"$01C1E6","length":"1 byte","beginsAt":115174,"endsAt":115174,"type":"Misc.","descriptio":"Tiles created from growing vine sprite"},{"address":"$01C313","length":"4 bytes. Ends at $01C316.","beginsAt":115475,"endsAt":115478,"type":"Sprite number","descriptio":"Sprites used by the changing item (Mushroom, Flower, Feather, Star)"},{"address":"$01C33D","length":"1 byte","beginsAt":115517,"endsAt":115517,"type":"Sprite number","descriptio":"Sprite that the Changing Item is made from"},{"address":"$01C345","length":"4 bytes. Ends at $01C348.","beginsAt":115525,"endsAt":115528,"type":"Sprite tilemap related","descriptio":"Eaten berry palettes (unused, red, pink, green)"},{"address":"$01C34C","length":"1 byte","beginsAt":115532,"endsAt":115532,"type":"Misc.","descriptio":"Change to 00 and the Fire Flower won't flip back and forth"},{"address":"$01C35F","length":"1 byte","beginsAt":115551,"endsAt":115551,"type":"Sprite tilemap related","descriptio":"Eaten berry tile"},{"address":"$01C42C","length":"3 bytes. Ends at $01C42E.","beginsAt":115756,"endsAt":115758,"type":"ASM","descriptio":"Set to EA EA EA to disable moving coin and star movement"},{"address":"$01C47B","length":"1 byte","beginsAt":115835,"endsAt":115835,"type":"Sprite physics","descriptio":"Star bounce height (between 80-FF)"},{"address":"$01C510","length":"20 bytes. Ends at $01C523.","beginsAt":115984,"endsAt":116003,"type":"Misc.","descriptio":"Table of items to put in the item box when a powerup is touched. Indexed by Mario's status ($19), plus 4 times the type of powerup touched. Powerups are ordered as follows:\n$01C510 to $01C513 - Mushroom\n$01C514 to $01C517 - Flower\n$01C518 to $01C51B - Star\n$01C51C to $01C51F - Cape\n$01C520 to $01C523 - 1-up\n\nFor a list of possible values, see $0DC2.\nNote: A value of 0x00 (empty) means that the item in the item box doesn't change."},{"address":"$01C524","length":"20 bytes. Ends at $01C537.","beginsAt":116004,"endsAt":116023,"type":"Misc.","descriptio":"Action to take when Mario touches a powerup. Indexed by Mario's status ($19), plus 4 times the type of powerup touched. Powerups are ordered as follows:\n$01C524 to $01C527 - Mushroom\n$01C528 to $01C52B - Flower\n$01C52C to $01C52F - Star\n$01C530 to $01C533 - Cape\n$01C534 to $01C537 - 1up\n\nPossible values are:\n00: Give a mushroom\n01: Do nothing\n02: Give a star\n03: Give a cape\n04: Give a flower\n05: Give a 1up"},{"address":"$01C538","length":"28 bytes. Ends at $01C553.","beginsAt":116024,"endsAt":116051,"type":"ASM","descriptio":"Handles what happens when the player touches a powerup. This routine will manage the item box as well. $01:C549 [0B] is the sound effect to play when touching a powerup.\n\nSet $01:C545 to EA EA EA to disable the item box."},{"address":"$01C554","length":"12 bytes. Ends at $01C55F.","beginsAt":116052,"endsAt":116063,"type":"Pointer","descriptio":"powerup routines (indexed by values from $01C524 - $01C537)"},{"address":"$01C566","length":"1 byte","beginsAt":116070,"endsAt":116070,"type":"Timer","descriptio":"Length of Mario's growing animation. Setting it higher than 2F may cause it to use different Mario tiles."},{"address":"$01C568","length":"1 byte","beginsAt":116072,"endsAt":116072,"type":"Mario tilemap","descriptio":"Changing this to 99 will make Mario face the camera if he grows from a mushroom."},{"address":"$01C570","length":"1 byte","beginsAt":116080,"endsAt":116080,"type":"Misc.","descriptio":"How many points you get by getting a powerup.\n00 = 200\n01 = 400\n02 = 800\n03 = 1000\n04 = 2000\n05 = 4000\n06 = 8000\n07 and above = 1-up\nFB = nothing"},{"address":"$01C57B","length":"1 byte","beginsAt":116091,"endsAt":116091,"type":"Sound effect","descriptio":"Mario picking up a Mushroom or Flower Sound Effect."},{"address":"$01C580","length":"18 bytes. Ends at $01C591.","beginsAt":116096,"endsAt":116113,"type":"Subroutine (JSL)","descriptio":"Star Subroutine. JSL to it to give Mario star power. $01C581 controls how long stars last, $01C586 controls the music that is played during star power."},{"address":"$01C599","length":"1 byte","beginsAt":116121,"endsAt":116121,"type":"Misc.","descriptio":"What powerup feathers give you"},{"address":"$01C59D","length":"1 byte","beginsAt":116125,"endsAt":116125,"type":"Sound effect","descriptio":"Sound Effect will make if you grabbed the feather. Change to 0C to make the sound effect like in SMB3."},{"address":"$01C5F8","length":"1 byte","beginsAt":116216,"endsAt":116216,"type":"Misc.","descriptio":"What powerup flowers give you"},{"address":"$01C609","length":"5 bytes. Ends at $01C60D.","beginsAt":116233,"endsAt":116237,"type":"Sprite tilemap related","descriptio":"Tilemap: Power-ups (Mushroom, Flower, Star, Feather, 1Up)"},{"address":"$01C612","length":"1 byte","beginsAt":116242,"endsAt":116242,"type":"Sprite tilemap related","descriptio":"Tile used by the P-Balloon"},{"address":"$01C613","length":"1 byte","beginsAt":116243,"endsAt":116243,"type":"Sprite tilemap related","descriptio":"Tile used by Flying Red Coin"},{"address":"$01C614","length":"1 byte","beginsAt":116244,"endsAt":116244,"type":"Sprite tilemap related","descriptio":"Tile used by Flying Yellow 1Up Mushroom"},{"address":"$01C615","length":"1 byte","beginsAt":116245,"endsAt":116245,"type":"Sprite tilemap related","descriptio":"Tile used by Flying Key?"},{"address":"$01C616","length":"4 bytes. Ends at $01C619.","beginsAt":116246,"endsAt":116249,"type":"Palette","descriptio":"The palettes the star sprite flashes through. 00 is palette 8, 02 is palette 9, 04 palette A, etc. YXPPCCCT format."},{"address":"$01C641","length":"96 bytes. Ends at $01C6A0.","beginsAt":116289,"endsAt":116384,"type":"Sprite subroutine (JSL)","descriptio":"The GFX routine of the moving coin (sprite 21) and various other coin sprites, such as the directional coins.\n\n- $01C641: 4 bytes, JSRs to the main routine and ends in RTL.\n- $01C645: Start of the main GFX routine.\n- $01C653: Tile used by the first frame. This is the 16x16 one.\n- $01C667: Changing this to [80 07] will cause all 4 frames to use 2 tiles, and changing it to [D0 00] or [EA EA] will cause all 4 frames to use only 1 tile.\n- $01C66A: Changing this to 00 will cause all 4 frames to be 8x8.\n- $01C66D: Tiles used by the second, third, and fourth frames. These are all 8x8.\n- $01C699: Changing this to 02 will cause all 4 frames to be 16x16."},{"address":"$01C6A1","length":"69 bytes. Ends at $01C6E5.","beginsAt":116385,"endsAt":116453,"type":"Sprite subroutine (JSR)","descriptio":"Graphics routine for the powerups (mushroom, fire flower, cape feather, and star).\n\n- $01C6A3: Changing this to [80] will disable the star flashing.\n- $01C6C2: Changing this to [30] will fix the powerups being covered by the background in levels with transparent layer 3.\n- $01C6C3: Changing this to [80] will disable the x-flipping of the feather and fire flower."},{"address":"$01C7EA","length":"1 byte","beginsAt":116714,"endsAt":116714,"type":"Sprite tilemap related","descriptio":"Tilemap: Swinging Platform's Chain 1 (Sprite 5F)"},{"address":"$01C7EF","length":"1 byte","beginsAt":116719,"endsAt":116719,"type":"Palette","descriptio":"Palette of chain link connected to platform"},{"address":"$01C871","length":"1 byte","beginsAt":116849,"endsAt":116849,"type":"Sprite tilemap related","descriptio":"Tilemap: Swinging Platform's Chain 2 (Sprite 5F)"},{"address":"$01C8C7","length":"1 byte","beginsAt":116935,"endsAt":116935,"type":"Sprite tilemap related","descriptio":"Tilemap: Swinging Platform's Chain 3 (Sprite 5F). Also used by Chains 4 and 5."},{"address":"$01C8CC","length":"1 byte","beginsAt":116940,"endsAt":116940,"type":"Palette","descriptio":"Palette of other chain links"},{"address":"$01C8FB","length":"1 byte","beginsAt":116987,"endsAt":116987,"type":"Palette","descriptio":"Palette of wooden platform"},{"address":"$01C9BB","length":"4 bytes. Ends at $01C9BE.","beginsAt":117179,"endsAt":117182,"type":"Sprite tilemap related","descriptio":"Tilemap: Brown Swinging Platform (Sprite 5F)"},{"address":"$01CACB","length":"85 bytes. Ends at $01CB1F.","beginsAt":117451,"endsAt":117535,"type":"ASM","descriptio":"Sprite rotation preparation routine. First JSR to this, then to $01CB20 and finally to $01CB53."},{"address":"$01CB20","length":"51 bytes. Ends at $01CB52.","beginsAt":117536,"endsAt":117586,"type":"ASM","descriptio":"Routine for preparing the game's global rotation routine. First you can JSR to either $01CACB\nfor sprite rotation or to $01CCC7 for Mode 7 rotation (this step seems to be optional). Next you JSR to this to prepare the rotation and finally you JSR to $01CB53."},{"address":"$01CB53","length":"330 bytes. Ends at $01CC9C.","beginsAt":117587,"endsAt":117916,"type":"ASM","descriptio":"The game's global rotation routine. First you can JSR to either $01CACB\nfor sprite rotation or to $01CCC7 for Mode 7 rotation (this step seems to be optional). Next you JSR to $01CB20 to prepare the rotation and finally you JSR to this."},{"address":"$01CCC7","length":"35 bytes. Ends at $01CCE9.","beginsAt":117959,"endsAt":117993,"type":"ASM","descriptio":"Mode 7 rotation preparation routine. First JSR to this, then to $01CB20 and finally to $01CB53."},{"address":"$01CD1E","length":"12 bytes. Ends at $01CD29.","beginsAt":118046,"endsAt":118057,"type":"Empty","descriptio":"Unused ROM."},{"address":"$01CD4F","length":"1 byte","beginsAt":118095,"endsAt":118095,"type":"Coordinate","descriptio":"Y lo starting position of Morton/Ludwig/Roy at the boss battle."},{"address":"$01CD7E","length":"1 byte","beginsAt":118142,"endsAt":118142,"type":"Coordinate","descriptio":"X low position of Ludwig at the start of the boss battle."},{"address":"$01CD82","length":"1 byte","beginsAt":118146,"endsAt":118146,"type":"Coordinate","descriptio":"X high position of Ludwig at the start of the boss battle."},{"address":"$01CE3E","length":"2 bytes. Ends at $01CE3F.","beginsAt":118334,"endsAt":118335,"type":"ASM","descriptio":"Change [64 7B] to [EA EA] in order to prevent Mario from slowing down when Ludwig appears."},{"address":"$01CEAE","length":"2 bytes. Ends at $01CEAF.","beginsAt":118446,"endsAt":118447,"type":"Sprite physics","descriptio":"Ludwig's shell speed"},{"address":"$01CEB4","length":"2 bytes. Ends at $01CEB5.","beginsAt":118452,"endsAt":118453,"type":"Sprite physics","descriptio":"Ludwig's horizontal jump distance"},{"address":"$01CECE","length":"1 byte","beginsAt":118478,"endsAt":118478,"type":"Timer","descriptio":"Counts how long to delay before Ludwig jumps out of his shell."},{"address":"$01CED8","length":"1 byte","beginsAt":118488,"endsAt":118488,"type":"Sprite physics","descriptio":"Vertical height of Ludwig's jump (lower is shorter)."},{"address":"$01CF57","length":"1 byte","beginsAt":118615,"endsAt":118615,"type":"Misc.","descriptio":"Ludwig jump right type modifier"},{"address":"$01CF58","length":"1 byte","beginsAt":118616,"endsAt":118616,"type":"Misc.","descriptio":"Ludwig jump left type modifier"},{"address":"$01CFCD","length":"1 byte","beginsAt":118733,"endsAt":118733,"type":"Misc.","descriptio":"Ludwig, Morton, and Roy's HP"},{"address":"$01CFD1","length":"1 byte","beginsAt":118737,"endsAt":118737,"type":"Sound effect","descriptio":"Morton/Ludwig/Roy spiralling out sound effect."},{"address":"$01D04F","length":"1 byte","beginsAt":118863,"endsAt":118863,"type":"Music","descriptio":"Music played after Morton/Ludwig/Roy is defeated"},{"address":"$01D05A","length":"1 byte","beginsAt":118874,"endsAt":118874,"type":"Sound effect","descriptio":"What sound is played by Ludwig's fireball."},{"address":"$01D06F","length":"1 byte","beginsAt":118895,"endsAt":118895,"type":"Sprite number","descriptio":"Sprite spawned by Ludwig von Koopa"},{"address":"$01D080","length":"1 byte","beginsAt":118912,"endsAt":118912,"type":"Misc.","descriptio":"Height of fireball spawned by Ludwig."},{"address":"$01D0B8","length":"1 byte","beginsAt":118968,"endsAt":118968,"type":"Misc.","descriptio":"How long fireballs stay in Ludwig's mouth for."},{"address":"$01D0BE","length":"1 byte","beginsAt":118974,"endsAt":118974,"type":"Sprite physics","descriptio":"X Speed of Ludwig's Fireball (Right)"},{"address":"$01D0BF","length":"1 byte","beginsAt":118975,"endsAt":118975,"type":"Sprite physics","descriptio":"Left speed of ludwig's fireballs (reversed)"},{"address":"$01D122","length":"1 byte","beginsAt":119074,"endsAt":119074,"type":"Sprite physics","descriptio":"Morton and Roy's speed for first hit, left."},{"address":"$01D124","length":"1 byte","beginsAt":119076,"endsAt":119076,"type":"Sprite physics","descriptio":"Morton and Roy's speed for first hit, right."},{"address":"$01D126","length":"1 byte","beginsAt":119078,"endsAt":119078,"type":"Sprite physics","descriptio":"Morton and Roy's speed for second hit, left."},{"address":"$01D128","length":"1 byte","beginsAt":119080,"endsAt":119080,"type":"Sprite physics","descriptio":"Morton and Roy's speed for second hit, right."},{"address":"$01D12A","length":"1 byte","beginsAt":119082,"endsAt":119082,"type":"Sprite physics","descriptio":"Morton and Roy's speed for third hit, left."},{"address":"$01D12C","length":"1 byte","beginsAt":119084,"endsAt":119084,"type":"Sprite physics","descriptio":"Morton and Roy's speed for third hit, right."},{"address":"$01D12F","length":"1 byte","beginsAt":119087,"endsAt":119087,"type":"Sprite physics","descriptio":"Morton and Roy's vertical speed for first hit, up."},{"address":"$01D131","length":"1 byte","beginsAt":119089,"endsAt":119089,"type":"Sprite physics","descriptio":"Morton and Roy's vertical speed for first hit, down."},{"address":"$01D133","length":"1 byte","beginsAt":119091,"endsAt":119091,"type":"Sprite physics","descriptio":"Morton and Roy's vertical speed for second hit, up."},{"address":"$01D135","length":"1 byte","beginsAt":119093,"endsAt":119093,"type":"Sprite physics","descriptio":"Morton and Roy's vertical speed for second hit, down."},{"address":"$01D137","length":"1 byte","beginsAt":119095,"endsAt":119095,"type":"Sprite physics","descriptio":"Morton and Roy's vertical speed for third hit, up."},{"address":"$01D139","length":"1 byte","beginsAt":119097,"endsAt":119097,"type":"Sprite physics","descriptio":"Morton and Roy's vertical speed for third hit, down."},{"address":"$01D239","length":"2 bytes. Ends at $01D23A.","beginsAt":119353,"endsAt":119354,"type":"Sprite physics","descriptio":"How fast Morton and Roy rotate when they're crawling on a wall or ceiling. By default FC and 04. The closer to 00, the slower it gets. Do not exceed above a difference of 80 (that is, don't make the first value 01-7F, and don't make the second value 81-FF). Using 00 isn't recommended either."},{"address":"$01D26E","length":"1 byte","beginsAt":119406,"endsAt":119406,"type":"Sprite physics","descriptio":"Falling speed of Morton and Roy"},{"address":"$01D28C","length":"1 byte","beginsAt":119436,"endsAt":119436,"type":"Timer","descriptio":"How much the ground shakes after Morton/Roy hit the floor."},{"address":"$01D295","length":"1 byte","beginsAt":119445,"endsAt":119445,"type":"Timer","descriptio":"How long Mario is stunned for after Morton/Roy hits ground."},{"address":"$01D29A","length":"1 byte","beginsAt":119450,"endsAt":119450,"type":"Sound effect","descriptio":"Morton/Roy landing sound effect."},{"address":"$01D29F","length":"1 byte","beginsAt":119455,"endsAt":119455,"type":"Timer","descriptio":"How long Morton/Roy stays put after landing on floor."},{"address":"$01D2D0","length":"1 byte","beginsAt":119504,"endsAt":119504,"type":"Misc.","descriptio":"Timer determining how many frames to wait before being able to interact with Morton/Ludwig/Roy, after having interacted with it. (By default: 08)"},{"address":"$01D2FA","length":"1 byte","beginsAt":119546,"endsAt":119546,"type":"Misc.","descriptio":"Y speed of Mario when he bounces off Morton/Roy (normal state) and Ludwig (always)."},{"address":"$01D2FE","length":"1 byte","beginsAt":119550,"endsAt":119550,"type":"Sound effect","descriptio":"Which sound to generate when stomping Ludwig when he's inside his shell, and Morton/Roy/Ludwig when they're vulnerable (a second sound effect is generated too here, see $01D3AC).\nBy default #$02."},{"address":"$01D31F","length":"1 byte","beginsAt":119583,"endsAt":119583,"type":"Sound effect","descriptio":"SFX Played when Mario hits Morton/Roy while on the ceiling, while falling, and after they have just landed."},{"address":"$01D330","length":"1 byte","beginsAt":119600,"endsAt":119600,"type":"Mario physics","descriptio":"Mario's Y-Speed after jumping on Morton/Roy when they have just landed. Closer to 80 - highest."},{"address":"$01D335","length":"1 byte","beginsAt":119605,"endsAt":119605,"type":"Sound effect","descriptio":"Sound effect played when Mario hits Morton/Roy when going up the wall."},{"address":"$01D343","length":"1 byte","beginsAt":119619,"endsAt":119619,"type":"Misc.","descriptio":"X speed of Mario when he bounces off Morton/Roy when they're crawling on the left side of the screen."},{"address":"$01D349","length":"1 byte","beginsAt":119625,"endsAt":119625,"type":"Misc.","descriptio":"X speed of Mario when he bounces off Morton/Roy when they're crawling on the right half of the screen."},{"address":"$01D34D","length":"1 byte","beginsAt":119629,"endsAt":119629,"type":"Misc.","descriptio":"Y speed of Mario when he bounces off Morton/Roy in their unusual state (as in, crawling on walls, falling from ceiling)."},{"address":"$01D37A","length":"1 byte","beginsAt":119674,"endsAt":119674,"type":"Misc.","descriptio":"Horizontal scaling of Morton/Roy/Ludwig (Mode 7) just after they're hit. The higher the value, the thinner they are. Extreme values, such as 00 (biggest) or FF (smallest), are not recommended as they may or may not partially affect the gameplay. Keep the value near the original, if you change it.\nBy default: #$18."},{"address":"$01D383","length":"1 byte","beginsAt":119683,"endsAt":119683,"type":"Misc.","descriptio":"Vertical scaling of Morton/Roy/Ludwig (Mode 7) just after they had been hit. The bigger the value, the shorter the Koopa Kids become.\nDo not change the value to #$00 - #$1F or #$80 - #$FF as it will mess up. If changing value, keep it near the original since it might affect the Koopa Kid's height afterwards, if the value was too extreme.\nBy default: #$28."},{"address":"$01D3A2","length":"1 byte","beginsAt":119714,"endsAt":119714,"type":"Timer","descriptio":"How long Morton/Roy/Ludwig recovers after Mario has hit him."},{"address":"$01D3AC","length":"1 byte","beginsAt":119724,"endsAt":119724,"type":"Sound effect","descriptio":"Which sound to generate when stomping Morton/Roy/Ludwig when they're vulnerable (a second sound effect is generated too, see $01D2FE).\nBy default #$28."},{"address":"$01D3F4","length":"1 byte","beginsAt":119796,"endsAt":119796,"type":"Sound effect","descriptio":"Sound effect played when Morton, Ludwig and Roy takes damage from a fireball. Stored into $1DF9."},{"address":"$01D3F8","length":"6 bytes. Ends at $01D3FD.","beginsAt":119800,"endsAt":119805,"type":"Misc.","descriptio":"Counts fireball hits to Morton/Roy/Ludwig. Change to [80 06] to make Morton/Roy/Ludwig immune to fireballs.\n\nAlternately, change to [FE 10 15 BD 10 15] to decouple their fireball HP from their stomp HP, so that they don't die after 2+ fireballs and a single jump."},{"address":"$01D3FF","length":"1 byte","beginsAt":119807,"endsAt":119807,"type":"Misc.","descriptio":"How many fireballs it takes before Morton/Ludwig/Roy are killed.\nCounts up to the stomping HP counter as well. By default: 0C."},{"address":"$01D446","length":"4 bytes. Ends at $01D449.","beginsAt":119878,"endsAt":119881,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Ludwig Fireball"},{"address":"$01D6D2","length":"6 bytes. Ends at $01D6D7.","beginsAt":120530,"endsAt":120535,"type":"Sprite Misc.","descriptio":"The code that determines whether sprite 63 should be brown or checkered. Change to \"A9 xx EA EA EA EA\" to make the platform always brown or always checkered (if brown, xx = 00, if checkered, xx = 01).\n$01D6D5 - change to 00 to make sprite 63 use the small wooden platform no matter which x-position. (to use with $01D6D7)\n$01D6D7 - change to 00 to make sprite 63 use the small wooden platform no matter which x-position. (to use with $01D6D5)"},{"address":"$01D6ED","length":"3 bytes. Ends at $01D6EF.","beginsAt":120557,"endsAt":120559,"type":"ASM","descriptio":"Change to EA EA EA to make all line-guided sprites move at the same speed instead of the chainsaws, Grinder, and Fuzzy going twice as fast."},{"address":"$01D6F0","length":"23 bytes. Ends at $01D706.","beginsAt":120560,"endsAt":120582,"type":"Sprite Misc.","descriptio":"Change to B5 E4 29 10 4A 4A 4A 4A 9D 7C 15 80 14 EA EA EA EA EA EA EA EA EA EA to fix certain line-guided sprites: instead of moving left on odd starting X positions and not showing up at all on even ones (actually, they are just shifted offscreen), they will instead move right on even starting X positions.\nx$01D6FA - X position (low byte) of sprites 65, 66, 67 and 68. Change it to 0F to fix its x position when it goes to the right. (USE WITH $01D701)\n$01D701 - X position (high byte) of sprites 65, 66, 67 and 68. Change it to 00 to fix its x position when it goes to the right. (USE WITH $01D6FA)"},{"address":"$01D77D","length":"1 byte","beginsAt":120701,"endsAt":120701,"type":"ASM","descriptio":"Change from F0 to D0 to switch the speeds of the line-guided sprites. (Normally, the chainsaws, Grinder, and Fuzzy move fast, while the platforms and rope move slow.) Use with $01D7A1."},{"address":"$01D7A1","length":"1 byte","beginsAt":120737,"endsAt":120737,"type":"ASM","descriptio":"Change from F0 to D0 to switch the speeds of the line-guided sprites. (Normally, the chainsaws, Grinder, and Fuzzy move fast, while the platforms and rope move slow.) Use with $01D77D."},{"address":"$01D9F8","length":"1 byte","beginsAt":121336,"endsAt":121336,"type":"Mario physics","descriptio":"Change from 10 to 0A to fix a glitch that if the player is climbing a rope mechanism and gets pushed off by solid objects, allows the player to climb in midair."},{"address":"$01DB96","length":"4 bytes. Ends at $01DB99.","beginsAt":121750,"endsAt":121753,"type":"Sprite tilemap related","descriptio":"X displacement for the Grinder tiles (the one that doesn't follow line guides)."},{"address":"$01DB9A","length":"4 bytes. Ends at $01DB9D.","beginsAt":121754,"endsAt":121757,"type":"Sprite tilemap related","descriptio":"[00 00 10 10] Y offset for the Grinder tiles (the one that doesn't follow line guides)."},{"address":"$01DB9E","length":"4 bytes. Ends at $01DBA1.","beginsAt":121758,"endsAt":121761,"type":"Sprite tilemap related","descriptio":"[03 43 83 C3] OAM properties for the Grinder tiles (the one that doesn't follow line guides)."},{"address":"$01DBBF","length":"1 byte","beginsAt":121791,"endsAt":121791,"type":"Sprite tilemap related","descriptio":"Tile used by Grinder (the one that doesn't follow line guides). Note that the sixth bit (#$02) should be cleared or it won't animate; the sixth bit of the frame counter is ORA'd to it."},{"address":"$01DBF5","length":"1 byte","beginsAt":121845,"endsAt":121845,"type":"Sprite tilemap related","descriptio":"Line-guided Fuzzball tilemap (Sprite 68)"},{"address":"$01DC28","length":"1 byte","beginsAt":121896,"endsAt":121896,"type":"Sprite tilemap related","descriptio":"Line-guided Grinder Tilemap"},{"address":"$01DC47","length":"4 bytes. Ends at $01DC4A.","beginsAt":121927,"endsAt":121930,"type":"Sprite tilemap related","descriptio":"Line-guided Rope's Motor Tilemap"},{"address":"$01DC4C","length":"8 bytes. Ends at $01DC53.","beginsAt":121932,"endsAt":121939,"type":"Sprite tilemap related","descriptio":"Line-guided Rope's rope tilemap"},{"address":"$01DCAC","length":"1 byte","beginsAt":122028,"endsAt":122028,"type":"Sprite tilemap related","descriptio":"Line-Guided Rope Palette"},{"address":"$01DDBD","length":"1 byte","beginsAt":122301,"endsAt":122301,"type":"Sprite number","descriptio":"Sprite that the Bonus game is made from"},{"address":"$01DEE3","length":"36 bytes. Ends at $01DF06.","beginsAt":122595,"endsAt":122630,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Bonus Roulette"},{"address":"$01DF07","length":"9 bytes. Ends at $01DF0F.","beginsAt":122631,"endsAt":122639,"type":"Sprite tilemap related","descriptio":"Palette info for the items in the bonus game sprite (0x82). The first three bytes are the palette for the Star. The next three are for the Mushroom, and the last three are for the Fire Flower. They're all expressed as even numbers where 00 = Lunar Magic palette 8, 02 = LM palette 9, and so on."},{"address":"$01E092","length":"1 byte","beginsAt":123026,"endsAt":123026,"type":"Sprite physics","descriptio":"Max Y-speed of the fireballs that fall from the sky during the Bowser battle. Default is $20."},{"address":"$01E0DD","length":"2 bytes. Ends at $01E0DE.","beginsAt":123101,"endsAt":123102,"type":"Sprite Misc.","descriptio":"Change to [A9 XX 9D 40 15 80 04 EA EA EA EA] to make the Podoboo's timer consistent, with XX being the amount of time for it to reappear."},{"address":"$01E111","length":"4 bytes. Ends at $01E114.","beginsAt":123153,"endsAt":123156,"type":"Sprite tilemap related","descriptio":"Change to EA EA EA EA to prevent Podoboo from having lava trail."},{"address":"$01E14B","length":"1 byte","beginsAt":123211,"endsAt":123211,"type":"Timer","descriptio":"Amount of time Bowser's sky fireballs remain on the ground before vanishing. Should not be set below #$02. Default is $80."},{"address":"$01E190","length":"4 bytes. Ends at $01E193.","beginsAt":123280,"endsAt":123283,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Bowser Flame"},{"address":"$01E1D1","length":"1 byte","beginsAt":123345,"endsAt":123345,"type":"Sprite number","descriptio":"Sprite that can unlock keyholes in its stunned status (Default is 80: Key)"},{"address":"$01E1F9","length":"1 byte","beginsAt":123385,"endsAt":123385,"type":"ASM","descriptio":"[40] Change to [DE] to fix the problem where if there is more than one key on the screen, some of them won't activate the keyhole. Use with $01E20A and $01E20F. Mod note: Applying this hex edit makes the game crash if you eat a key with Yoshi."},{"address":"$01E20A","length":"1 byte","beginsAt":123402,"endsAt":123402,"type":"ASM","descriptio":"[2F] Change to [CD] to fix the problem where if there is more than one key on the screen, some of them won't activate the keyhole. Use with $01E1F8 and $01E20F. Mod note: Applying this hex edit makes the game crash if you eat a key with Yoshi."},{"address":"$01E20F","length":"1 byte","beginsAt":123407,"endsAt":123407,"type":"ASM","descriptio":"[2A] Change to [C8] to fix the problem where if there is more than one key on the screen, some of them won't activate the keyhole. Use with $01E1F8 and $01E20A. Mod note: Applying this hex edit makes the game crash if you eat a key with Yoshi."},{"address":"$01E211","length":"1 byte","beginsAt":123409,"endsAt":123409,"type":"Timer","descriptio":"Keyhole shrinking timer."},{"address":"$01E216","length":"1 byte","beginsAt":123414,"endsAt":123414,"type":"Music","descriptio":"Keyhole music"},{"address":"$01E251","length":"1 byte","beginsAt":123473,"endsAt":123473,"type":"Sprite tilemap related","descriptio":"Top tile of keyhole"},{"address":"$01E256","length":"1 byte","beginsAt":123478,"endsAt":123478,"type":"Sprite tilemap related","descriptio":"Bottom tile of keyhole"},{"address":"$01E25B","length":"1 byte","beginsAt":123483,"endsAt":123483,"type":"Sprite tilemap related","descriptio":"Keyhole palette/GFX page"},{"address":"$01E292","length":"1 byte","beginsAt":123538,"endsAt":123538,"type":"Coordinate","descriptio":"Y low position of 1UP from bonus game, to start out with."},{"address":"$01E297","length":"1 byte","beginsAt":123543,"endsAt":123543,"type":"Coordinate","descriptio":"Y high position of 1UP sprite from bonus game, to start out with."},{"address":"$01E29C","length":"1 byte","beginsAt":123548,"endsAt":123548,"type":"Coordinate","descriptio":"X low position of 1UP sprite from bonus game, to start out with."},{"address":"$01E2A1","length":"1 byte","beginsAt":123553,"endsAt":123553,"type":"Coordinate","descriptio":"X high position of 1UP sprite from bonus game, to start out with."},{"address":"$01E2A6","length":"1 byte","beginsAt":123558,"endsAt":123558,"type":"Sprite physics","descriptio":"Initial X speed of 1UP sprite from the bonus game."},{"address":"$01E2AB","length":"1 byte","beginsAt":123563,"endsAt":123563,"type":"Sprite physics","descriptio":"Initial Y speed of 1UP sprite from the bonus game."},{"address":"$01E2B0","length":"24 bytes. Ends at $01E2C7.","beginsAt":123568,"endsAt":123591,"type":"Empty","descriptio":"Unused data."},{"address":"$01E2FB","length":"1 byte","beginsAt":123643,"endsAt":123643,"type":"Timer","descriptio":"[68] How long time Monty Mole waits in the ground until jumping out (for the YI submap)"},{"address":"$01E2FD","length":"1 byte","beginsAt":123645,"endsAt":123645,"type":"Misc.","descriptio":"[01] At which submap Monty Mole has more delay until jumping out.\n00 is the main OW\n01 is Yoshi's Island\n02 is Vanilla Dome\n03 is Forest of Illusion\n04 is Valley of Bowser\n05 is Special World\n06 is Star World"},{"address":"$01E301","length":"1 byte","beginsAt":123649,"endsAt":123649,"type":"Timer","descriptio":"[20] How long time Monty Mole waits in the ground until jumping out (for other areas than YI)"},{"address":"$01E33C","length":"1 byte","beginsAt":123708,"endsAt":123708,"type":"Misc.","descriptio":"Tile spawned by ledge-dwelling Monty Mole"},{"address":"$01E36A","length":"1 byte","beginsAt":123754,"endsAt":123754,"type":"Sprite tilemap related","descriptio":"Attributes of Ledge-Dwelling Monty Mole"},{"address":"$01E38F","length":"4 bytes. Ends at $01E392.","beginsAt":123791,"endsAt":123794,"type":"Sprite physics","descriptio":"[$10 $F0 $18 $E8] Monty mole X speed.\nThe first two bytes control the speed for the hopping mole while next two control the maximum speed for the chasing one."},{"address":"$01E454","length":"1 byte","beginsAt":123988,"endsAt":123988,"type":"Sprite tilemap related","descriptio":"Dry Bones and Bony Beetle crumble animation, frame 1"},{"address":"$01E45E","length":"1 byte","beginsAt":123998,"endsAt":123998,"type":"Sprite tilemap related","descriptio":"Dry Bones and Bony Beetle crumble animation, frame 2"},{"address":"$01E522","length":"11 bytes. Ends at $01E52C.","beginsAt":124194,"endsAt":124204,"type":"ASM","descriptio":"Code that makes sprite 32, the Dry Bones that stays on ledges, throw bones when the overworld level is 10D.\n\nYou can change $01E522 to [80 1E] to make sprite 32 never throw bones, or you can change $01E526 to [80 07] to make the sprite throw bones in all overworld levels. $01E52A is the overworld level in question; it follows the format of RAM address $13BF."},{"address":"$01E5F3","length":"1 byte","beginsAt":124403,"endsAt":124403,"type":"Sound effect","descriptio":"Dry Bones Crumble Sound Effect."},{"address":"$01E5FF","length":"1 byte","beginsAt":124415,"endsAt":124415,"type":"Timer","descriptio":"Time it takes for Dry-Bones to come back to life."},{"address":"$01E691","length":"1 byte","beginsAt":124561,"endsAt":124561,"type":"Sprite physics","descriptio":"[10] Change to 80 to disable spin jumping from springboards"},{"address":"$01E69F","length":"1 byte","beginsAt":124575,"endsAt":124575,"type":"Mario tilemap","descriptio":"Mario's pose after jumping high from the portable Springboard. (0A looks the best, 0B by default.)"},{"address":"$01E6A3","length":"1 byte","beginsAt":124579,"endsAt":124579,"type":"Sprite physics","descriptio":"How high Mario jumps when jumping from the P. Springboard. (80 highest, 00-FF lowest."},{"address":"$01E6AA","length":"1 byte","beginsAt":124586,"endsAt":124586,"type":"Sound effect","descriptio":"Sound effect made by the portable springboard."},{"address":"$01E723","length":"1 byte","beginsAt":124707,"endsAt":124707,"type":"Sprite tilemap related","descriptio":"Tile used by flattened POW Switch"},{"address":"$01E729","length":"1 byte","beginsAt":124713,"endsAt":124713,"type":"Sprite tilemap related","descriptio":"Tile used by flattened Shelless Koopa"},{"address":"$01E733","length":"1 byte","beginsAt":124723,"endsAt":124723,"type":"Sprite tilemap related","descriptio":"Tile to use for stomped goomba"},{"address":"$01E976","length":"1 byte","beginsAt":125302,"endsAt":125302,"type":"Sprite tilemap related","descriptio":"Tile used by the face on Lakitu's Cloud"},{"address":"$01E97B","length":"1 byte","beginsAt":125307,"endsAt":125307,"type":"Sprite tilemap related","descriptio":"YXPPCCCT - Lakitu Cloud Properties (Priority/Palette/Flip/GFX Page)"},{"address":"$01E985","length":"4 bytes. Ends at $01E988.","beginsAt":125317,"endsAt":125320,"type":"Sprite tilemap related","descriptio":"Cloud Tilemap"},{"address":"$01E9DC","length":"1 byte","beginsAt":125404,"endsAt":125404,"type":"Sprite physics","descriptio":"Change to 74 to disable Lakitu vertical movement"},{"address":"$01EA19","length":"8 bytes. Ends at $01EA20.","beginsAt":125465,"endsAt":125472,"type":"Sprite subroutine (JSL)","descriptio":"Wrapper for the subroutine at $01EA21 (changes the data bank and JSRs to it)."},{"address":"$01EA21","length":"79 bytes. Ends at $01EA6F.","beginsAt":125473,"endsAt":125551,"type":"Sprite subroutine (JSR)","descriptio":"A subroutine for spawning a Spiny egg. This is used by both the normal and pipe-dwelling Lakitus, and it can be called via the wrapper at $01EA19.\n$01EA32 is the sprite Lakitu throws.\n$01EA36 is the sprite Lakitu throws when a silver P-switch is active.\n$01EA69 is the palette of the sprite Lakitu throws when a silver P-Switch is active."},{"address":"$01EAA8","length":"1 byte","beginsAt":125608,"endsAt":125608,"type":"Misc.","descriptio":"Yoshi's standing animation"},{"address":"$01EAE7","length":"1 byte","beginsAt":125671,"endsAt":125671,"type":"Misc.","descriptio":"Yoshi falling animation frame"},{"address":"$01EAED","length":"1 byte","beginsAt":125677,"endsAt":125677,"type":"Misc.","descriptio":"Yoshi jumping animation frame"},{"address":"$01EAF6","length":"1 byte","beginsAt":125686,"endsAt":125686,"type":"Misc.","descriptio":"Yoshi turning animation frame"},{"address":"$01EB01","length":"1 byte","beginsAt":125697,"endsAt":125697,"type":"Misc.","descriptio":"Yoshi eating animation frame"},{"address":"$01EB09","length":"1 byte","beginsAt":125705,"endsAt":125705,"type":"Misc.","descriptio":"Yoshi eating animation (while holding up)"},{"address":"$01EB16","length":"4 bytes. Ends at $01EB19.","beginsAt":125718,"endsAt":125721,"type":"ASM","descriptio":"Change this to [EA EA A5 73] to fix an issue with Yoshi if you disable ducking."},{"address":"$01EB1D","length":"1 byte","beginsAt":125725,"endsAt":125725,"type":"Misc.","descriptio":"Yoshi crouching animation frame"},{"address":"$01EB2D","length":"1 byte","beginsAt":125741,"endsAt":125741,"type":"Misc.","descriptio":"Yoshi waiting animation frame"},{"address":"$01EB79","length":"1 byte","beginsAt":125817,"endsAt":125817,"type":"Misc.","descriptio":"Change to 00 to make Mario walk even when riding Yoshi"},{"address":"$01EBBE","length":"2 bytes. Ends at $01EBBF.","beginsAt":125886,"endsAt":125887,"type":"Sprite physics","descriptio":"Speed Yoshi has when mario get's hit while riding him. (Format = Left, Right)\n\nLeft Value must be a value over 80, Right Value must be a value under 7F"},{"address":"$01EBC2","length":"8 bytes. Ends at $01EBC9.","beginsAt":125890,"endsAt":125897,"type":"Misc.","descriptio":"Growing animation sequence"},{"address":"$01EC04","length":"72 bytes. Ends at $01EC4B.","beginsAt":125956,"endsAt":126027,"type":"Sprite subroutine (JSR)","descriptio":"The routine that makes Yoshi hatch.\n$01EC2F - Change \"3A\" (DEC A) to \"EA\" (NOP) to make Yoshi's \"Thank you for saving me\" message appear on the main map, as opposed to the Yoshi's Island submap.\n$01EC36 - Change from \"D0\" (BNE) to \"80\" (BRA) to disable the Yoshi rescue message.\n$01EC3C is Yoshi's thank you message. See ram $1426 for possible values."},{"address":"$01ECFE","length":"1 byte","beginsAt":126206,"endsAt":126206,"type":"Misc.","descriptio":"Yoshi's hopping height in idle state"},{"address":"$01ED60","length":"1 byte","beginsAt":126304,"endsAt":126304,"type":"Sound effect","descriptio":"Mario jumping on Yoshi sound"},{"address":"$01ED6D","length":"3 bytes. Ends at $01ED6F.","beginsAt":126317,"endsAt":126319,"type":"ASM","descriptio":"Change to [80 01 EA] to fix the glitch where you can hop off Yoshi to increase consecutive enemies stomped."},{"address":"$01ED9C","length":"1 byte","beginsAt":126364,"endsAt":126364,"type":"Misc.","descriptio":"[10] Change to [80] to disable jumping of Yoshi."},{"address":"$01ED9E","length":"45 bytes. Ends at $01EDCA.","beginsAt":126366,"endsAt":126410,"type":"Subroutine (JSR)","descriptio":"The routine that makes player leave Yoshi (by pressing A while on him)."},{"address":"$01EDE4","length":"10 bytes. Ends at $01EDED.","beginsAt":126436,"endsAt":126445,"type":"Coordinate","descriptio":"Y-position of Mario on Yoshi (1 byte for each frame; 10 bytes)"},{"address":"$01EDEE","length":"3 bytes. Ends at $01EDF0.","beginsAt":126446,"endsAt":126448,"type":"Misc.","descriptio":"Riding Yoshi walking animation frames"},{"address":"$01EDF1","length":"2 bytes. Ends at $01EDF2.","beginsAt":126449,"endsAt":126450,"type":"Coordinate","descriptio":"Base X-position of Yoshi (1st byte facing right; 2nd facing left)"},{"address":"$01EDF8","length":"1 byte","beginsAt":126456,"endsAt":126456,"type":"Misc.","descriptio":"Yoshi animation speed while running"},{"address":"$01EDF9","length":"13 bytes. Ends at $01EE05.","beginsAt":126457,"endsAt":126469,"type":"Sprite tilemap related","descriptio":"Yoshi's head tiles (points to table at 9E47-9E57)"},{"address":"$01EE06","length":"13 bytes. Ends at $01EE12.","beginsAt":126470,"endsAt":126482,"type":"Sprite tilemap related","descriptio":"Yoshi's body tiles (points to table at 9E47-9E57)"},{"address":"$01EE13","length":"13 bytes. Ends at $01EE1F.","beginsAt":126483,"endsAt":126495,"type":"Coordinate","descriptio":"X-position of Yoshi's head (facing right)"},{"address":"$01EE20","length":"13 bytes. Ends at $01EE2C.","beginsAt":126496,"endsAt":126508,"type":"Coordinate","descriptio":"X-position of Yoshi's head (facing left)"},{"address":"$01EE47","length":"13 bytes. Ends at $01EE53.","beginsAt":126535,"endsAt":126547,"type":"Coordinate","descriptio":"Base Y-position of Yoshi"},{"address":"$01EE54","length":"13 bytes. Ends at $01EE60.","beginsAt":126548,"endsAt":126560,"type":"Coordinate","descriptio":"Y-position of Yoshi's head"},{"address":"$01F08B","length":"1 byte","beginsAt":127115,"endsAt":127115,"type":"Sprite tilemap related","descriptio":"Tile used in Yoshi's throat as he swallows"},{"address":"$01F097","length":"1 byte","beginsAt":127127,"endsAt":127127,"type":"Sprite tilemap related","descriptio":"Sprite tilemap properties of Yoshi's swallowing tile (YXPPCCCT) [01]. Change to [00] to make that tile use SP1 or SP2."},{"address":"$01F0BA","length":"3 bytes. Ends at $01F0BC.","beginsAt":127162,"endsAt":127164,"type":"ASM","descriptio":"Change from [AD AE 18] to [EA A5 9D] to fix the glitch where Yoshi will stick his tongue out twice if the screen is frozen (such as during a power up animation) while $7E14A3 is #$10."},{"address":"$01F0D4","length":"1 byte","beginsAt":127188,"endsAt":127188,"type":"Sound effect","descriptio":"Yoshi swallowing sound"},{"address":"$01F0EF","length":"1 byte","beginsAt":127215,"endsAt":127215,"type":"Misc.","descriptio":"How many berries Yoshi needs to eat before he lays an egg containing a mushroom. (Default: 0A)"},{"address":"$01F0F6","length":"1 byte","beginsAt":127222,"endsAt":127222,"type":"Sprite number","descriptio":"Which sprite is generated when 10 red berries are eaten (by default : 74 - mushroom)"},{"address":"$01F107","length":"1 byte","beginsAt":127239,"endsAt":127239,"type":"Timer","descriptio":"How many \"10 seconds\" the green berry adds to the timer when eaten by Yoshi. 00 wouldn't add anything, 01 adds 10, 02 adds 20 seconds and so on. Can glitch up the timer if set to anything higher than 0A."},{"address":"$01F11D","length":"1 byte","beginsAt":127261,"endsAt":127261,"type":"Misc.","descriptio":"How many pink berries should be eaten before a coin game cloud appears. (By default: 02)"},{"address":"$01F124","length":"1 byte","beginsAt":127268,"endsAt":127268,"type":"Sprite number","descriptio":"Which sprite is generated when two pink berries are eaten (By default: 6A)"},{"address":"$01F137","length":"16 bytes. Ends at $01F146.","beginsAt":127287,"endsAt":127302,"type":"Misc.","descriptio":"Which powers the different Yoshi color+shell color combinations gives. It's a 4x4 table, where the order is green, red, yellow, blue, the Koopa colors are on the horizontal axis and the Yoshi colors are on the vertical axis. Setting an #$01 bit enables ground pounding, #$02 enables flight. The other bits aren't used."},{"address":"$01F147","length":"4 bytes. Ends at $01F14A.","beginsAt":127303,"endsAt":127306,"type":"Sprite Misc.","descriptio":"Indices (divided by 4) to the Yoshi-shell ability table at $01F137 for each color of Yoshi (ordered yellow, blue, red, green)."},{"address":"$01F147","length":"6 bytes. Ends at $01F14C.","beginsAt":127303,"endsAt":127308,"type":"Misc.","descriptio":"What ability each shell colour Yoshi (This table points to the table at xF337)\n(In the order of: brown[unused], grey[unused], yellow, blue, red, green)"},{"address":"$01F1AB","length":"1 byte","beginsAt":127403,"endsAt":127403,"type":"Sprite Misc.","descriptio":"Change from F0 to 80 to make Yoshi never swallow sprites held in his mouth (shells, keys, P-switches, etc)."},{"address":"$01F26A","length":"9 bytes. Ends at $01F272.","beginsAt":127594,"endsAt":127602,"type":"ASM","descriptio":"Code that makes Yoshi spit out flames when he has the red shell in his mouth\n$01F270 - Which shell colour can give Yoshi fire breath."},{"address":"$01F273","length":"9 bytes. Ends at $01F27B.","beginsAt":127603,"endsAt":127611,"type":"ASM","descriptio":"Code that makes Red Yoshi spit out flames no matter what shell colour is in his mouth\n$01F279 - Which coloured Yoshi always gets fire breath"},{"address":"$01F290","length":"1 byte","beginsAt":127632,"endsAt":127632,"type":"Sound effect","descriptio":"Yoshi spit fire SFX"},{"address":"$01F299","length":"1 byte","beginsAt":127641,"endsAt":127641,"type":"Sprite number","descriptio":"The three objects Yoshi spits out after eating a red shell"},{"address":"$01F30A","length":"1 byte","beginsAt":127754,"endsAt":127754,"type":"Misc.","descriptio":"Change to 00 to keep Yoshi from sticking out his tongue"},{"address":"$01F30F","length":"1 byte","beginsAt":127759,"endsAt":127759,"type":"Sound effect","descriptio":"Yoshi tongue sound. Uses $1DFC for sound effect."},{"address":"$01F319","length":"1 byte","beginsAt":127769,"endsAt":127769,"type":"Sprite physics","descriptio":"Speed at which Yoshi's tongue comes out."},{"address":"$01F31E","length":"1 byte","beginsAt":127774,"endsAt":127774,"type":"Misc.","descriptio":"Length of Yoshi's tongue (about 2.5 blocks)"},{"address":"$01F329","length":"1 byte","beginsAt":127785,"endsAt":127785,"type":"Timer","descriptio":"Amount of time Yoshi's tongue stays at its maximum length"},{"address":"$01F33C","length":"1 byte","beginsAt":127804,"endsAt":127804,"type":"Sprite physics","descriptio":"Speed at which Yoshi's tongue retreats after being at maximum point."},{"address":"$01F360","length":"3 bytes. Ends at $01F362.","beginsAt":127840,"endsAt":127842,"type":"ASM","descriptio":"The routine triggered when Yoshi eats a sprite. Starts by loading the sprite number and comparing it to a Koopa."},{"address":"$01F448","length":"1 byte","beginsAt":128072,"endsAt":128072,"type":"Misc.","descriptio":"X-shift of Yoshi's tongue segments"},{"address":"$01F465","length":"1 byte","beginsAt":128101,"endsAt":128101,"type":"Misc.","descriptio":"How many tiles comprise Yoshi's tongue (doesn't change collision)"},{"address":"$01F469","length":"1 byte","beginsAt":128105,"endsAt":128105,"type":"Sprite Misc.","descriptio":"OAM index of Yoshi's tongue. This is in the $0200 block, and it uses the next 4 slots after this as well."},{"address":"$01F488","length":"1 byte","beginsAt":128136,"endsAt":128136,"type":"Sprite tilemap related","descriptio":"Tile used by the middle of Yoshi's Tongue"},{"address":"$01F48C","length":"1 byte","beginsAt":128140,"endsAt":128140,"type":"Sprite tilemap related","descriptio":"Tile used by the end of Yoshi's Tongue"},{"address":"$01F494","length":"1 byte","beginsAt":128148,"endsAt":128148,"type":"Sprite tilemap related","descriptio":"Palette/Flip/Gfx page of Yoshi's Tongue"},{"address":"$01F498","length":"1 byte","beginsAt":128152,"endsAt":128152,"type":"Sprite tilemap related","descriptio":"Value to add to Pal/flip/etc. of Yoshi's tongue when facing right"},{"address":"$01F4E8","length":"1 byte","beginsAt":128232,"endsAt":128232,"type":"Coordinate","descriptio":"Y position of sprite grabbed by Yoshi's tongue"},{"address":"$01F5A2","length":"1 byte","beginsAt":128418,"endsAt":128418,"type":"Sound effect","descriptio":"SFX played when Yoshi tries to eat an inedible sprite with his tongue"},{"address":"$01F5CD","length":"1 byte","beginsAt":128461,"endsAt":128461,"type":"Sprite number","descriptio":"Sprite that Pokey is made from when swallowed"},{"address":"$01F605","length":"1 byte","beginsAt":128517,"endsAt":128517,"type":"Timer","descriptio":"Amount of time Yoshi's tongue stays out before he swallows an enemy"},{"address":"$01F713","length":"57 bytes. Ends at $01F74B.","beginsAt":128787,"endsAt":128843,"type":"Sprite subroutine (JSR)","descriptio":"Subroutine that will damage Yoshi (register X should contain Yoshi's sprite slot number), knocking Mario off Yoshi, making Yoshi run, and triggering invincibility frames for Mario. In case you want it to check for star power first, call from $01F70E instead."},{"address":"$01F71E","length":"1 byte","beginsAt":128798,"endsAt":128798,"type":"Sound effect","descriptio":"Sound Effect when mario get's hit while riding yoshi."},{"address":"$01F720","length":"2 bytes. Ends at $01F721.","beginsAt":128800,"endsAt":128801,"type":"Sound effect","descriptio":"What bank $01:F71E loads its SFX from. (Default is $1DFC)"},{"address":"$01F72A","length":"1 byte","beginsAt":128810,"endsAt":128810,"type":"Mario physics","descriptio":"Y Speed Mario has when he gets hit while riding yoshi."},{"address":"$01F744","length":"1 byte","beginsAt":128836,"endsAt":128836,"type":"Timer","descriptio":"How long invincibility lasts after yoshi runs away. 80 - longest, 00/FF - Shortest."},{"address":"$01F757","length":"1 byte","beginsAt":128855,"endsAt":128855,"type":"Sound effect","descriptio":"Yoshi egg coming out of block sound"},{"address":"$01F75C","length":"4 bytes. Ends at $01F75F.","beginsAt":128860,"endsAt":128863,"type":"Sprite tilemap related","descriptio":"GFX page of the tiles used in the Yoshi egg hatching animation ($01F760)."},{"address":"$01F760","length":"4 bytes. Ends at $01F763.","beginsAt":128864,"endsAt":128867,"type":"Sprite tilemap related","descriptio":"Tile numbers for each frame in the Yoshi egg hatching animation. Read from right to left as (intact, breaking, breaking, puff of smoke).\n\nChange alongside $019C17 and $01F794 to completely remap the Yoshi egg tiles."},{"address":"$01F782","length":"1 byte","beginsAt":128898,"endsAt":128898,"type":"Sprite number","descriptio":"Sprite that hatches out of colored yoshi egg when Mario does not already have a yoshi."},{"address":"$01F789","length":"1 byte","beginsAt":128905,"endsAt":128905,"type":"Sprite number","descriptio":"Sprite that hatches from sprite 2C (red/blue/yellow Yoshi egg) when Mario already has a Yoshi. (Default: 78 (1up))"},{"address":"$01F794","length":"1 byte","beginsAt":128916,"endsAt":128916,"type":"Sprite tilemap related","descriptio":"Yoshi Egg Tilemap (only manifests if the Yoshi egg is in the normal status ($14C8 = #$08), i.e. free-standing Yoshi egg).\n\nChange alongside $019C17 and $01F760 - $01F763 to completely remap the Yoshi egg tiles."},{"address":"$01F88C","length":"2 bytes. Ends at $01F88D.","beginsAt":129164,"endsAt":129165,"type":"Sprite physics","descriptio":"Horizontal speed of Eeries"},{"address":"$01F88E","length":"2 bytes. Ends at $01F88F.","beginsAt":129166,"endsAt":129167,"type":"Misc.","descriptio":"Vertical speed of Eerie (sprite 39)"},{"address":"$01F910","length":"1 byte","beginsAt":129296,"endsAt":129296,"type":"Misc.","descriptio":"Change from D0 to 80 to disable Boo from stopping when Mario looks at it."},{"address":"$01F929","length":"1 byte","beginsAt":129321,"endsAt":129321,"type":"Timer","descriptio":"Time taken for Boo to turn around."},{"address":"$01FA2F","length":"3 bytes. Ends at $01FA31.","beginsAt":129583,"endsAt":129585,"type":"Palette","descriptio":"Change to 09 xx EA to make all three frames of the Boo Block use the same palette, xx being the palette bits.\n\nNote that changing this to 02 won't make any *noticeable* difference if you use the default palettes...the correct setting for palette F, used for the non-block frame, makes it use the EXACT same colors that are used in palette 9, for some reason."},{"address":"$01FA37","length":"3 bytes. Ends at $01FA39.","beginsAt":129591,"endsAt":129593,"type":"Sprite tilemap related","descriptio":"Boo Block Tilemap"},{"address":"$01FA3A","length":"3 bytes. Ends at $01FA3C.","beginsAt":129594,"endsAt":129596,"type":"Palette","descriptio":"Boo Block Palettes"},{"address":"$01FA4E","length":"4 bytes. Ends at $01FA51.","beginsAt":129614,"endsAt":129617,"type":"Sprite tilemap related","descriptio":"Iggy/Larry ball tilemap"},{"address":"$01FB2E","length":"1 byte","beginsAt":129838,"endsAt":129838,"type":"Music","descriptio":"Music played after Iggy/Larry is defeated"},{"address":"$01FB61","length":"1 byte","beginsAt":129889,"endsAt":129889,"type":"Sound effect","descriptio":"SFX that plays when you hit Iggy/Larry into the lava."},{"address":"$01FB95","length":"1 byte","beginsAt":129941,"endsAt":129941,"type":"Timer","descriptio":"FD95 - How long it takes for Iggy/Larry to turn around."},{"address":"$01FBC2","length":"1 byte","beginsAt":129986,"endsAt":129986,"type":"Misc.","descriptio":"Iggy/Larry's speed for walking towards center"},{"address":"$01FBC6","length":"1 byte","beginsAt":129990,"endsAt":129990,"type":"Misc.","descriptio":"Iggy/Larry's speed for walking towards center"},{"address":"$01FBD2","length":"1 byte","beginsAt":130002,"endsAt":130002,"type":"Misc.","descriptio":"Iggy/Larry's speed for walking towards center"},{"address":"$01FBD6","length":"1 byte","beginsAt":130006,"endsAt":130006,"type":"Misc.","descriptio":"Iggy/Larry's speed for walking towards center"},{"address":"$01FC70","length":"1 byte","beginsAt":130160,"endsAt":130160,"type":"ASM","descriptio":"The left bound of Iggy/Larry's movement. If Iggy/Larry crosses this left bound, he falls in the lava."},{"address":"$01FC74","length":"1 byte","beginsAt":130164,"endsAt":130164,"type":"ASM","descriptio":"The right bound of Iggy/Larry's movement. If Iggy/Larry crosses this right bound, he falls in the lava."},{"address":"$01FCC6","length":"1 byte","beginsAt":130246,"endsAt":130246,"type":"ASM","descriptio":"How long Iggy/Larry is invincible after getting hit. Increase this value (preferably to 30) if you want to prevent the player from scoring combos."},{"address":"$01FD00","length":"1 byte","beginsAt":130304,"endsAt":130304,"type":"Misc.","descriptio":"Iggy/Larry's speed when stomped"},{"address":"$01FD46","length":"1 byte","beginsAt":130374,"endsAt":130374,"type":"Timer","descriptio":"Amount of time until Iggy/Larry stops gliding after being hit by a fireball."},{"address":"$01FDBD","length":"1 byte","beginsAt":130493,"endsAt":130493,"type":"Sprite number","descriptio":"Sprite that Iggy/Larry throws"},{"address":"$01FE83","length":"51 bytes. Ends at $01FEB5.","beginsAt":130691,"endsAt":130741,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Larry/Iggy"},{"address":"$01FEBA","length":"1 byte","beginsAt":130746,"endsAt":130746,"type":"Sprite tilemap related","descriptio":"Iggy Koopa's Palette/GFX page/Priority/Flip"},{"address":"$01FEBB","length":"1 byte","beginsAt":130747,"endsAt":130747,"type":"Sprite tilemap related","descriptio":"Larry Koopa's Palette/GFX page/Priority/Flip"},{"address":"$01FF53","length":"4 bytes. Ends at $01FF56.","beginsAt":130899,"endsAt":130902,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Larry/Iggy shell"},{"address":"$01FFBF","length":"65 bytes. Ends at $01FFFF.","beginsAt":131007,"endsAt":131071,"type":"Empty","descriptio":"Unused data."},{"address":"$028008","length":"106 bytes. Ends at $028071.","beginsAt":163848,"endsAt":163953,"type":"Subroutine (JSL)","descriptio":"\"Drop Item From Box\" Subroutine. JSL to it to make the current item fall from the box.\nChange $028008 from DA to 6B to disable the item box drop routine.\n$028013 is Item dropping from itembox sound effect, written to $7E1DFC. Default value is [0C].\n$028042 is Sprite State to drop items from the item box as.\n$028052 is the fixed X position of dropped item from item box.\n$028060 is the fixed Y position of dropped item from item box."},{"address":"$028072","length":"10 bytes. Ends at $02807B.","beginsAt":163954,"endsAt":163963,"type":"Misc.","descriptio":"Bob-omb explosion x spacing"},{"address":"$02807C","length":"10 bytes. Ends at $028085.","beginsAt":163964,"endsAt":163973,"type":"Misc.","descriptio":"Bob-omb explosion y spacing"},{"address":"$028086","length":"242 bytes. Ends at $028177.","beginsAt":163974,"endsAt":164215,"type":"Sprite subroutine (JSL)","descriptio":"Explode Bomb Subroutine. JSL to it each frame to make your sprite explode, but remember to load $1540,x with the explosion timer and setting the data bank to 02 (or 82) first.\n$02808E is Bob-omb explosion area\n$028114 is Bob-omb's explosion GFX tile\nIf you change $02811E from 38 to 18 (i.e. change SEC to CLC), the Bob-omb explosion will use the first graphics page."},{"address":"$028226","length":"57 bytes. Ends at $02825E.","beginsAt":164390,"endsAt":164446,"type":"Sprite tilemap related","descriptio":"Ludwig BG Tiles"},{"address":"$02825F","length":"30 bytes. Ends at $02827C.","beginsAt":164447,"endsAt":164476,"type":"Sprite tilemap related","descriptio":"Morton/Roy BG Tiles"},{"address":"$0283FB","length":"5 bytes. Ends at $0283FF.","beginsAt":164859,"endsAt":164863,"type":"Sprite physics","descriptio":"Change all 4A bytes (LSR) to EA (NOP), to increase the speed of the walls in Morton/Roy's room when they're crashing down. The more EA bytes, the faster (twice as fast per EA) the walls will come down."},{"address":"$0284BC","length":"84 bytes. Ends at $02850F.","beginsAt":165052,"endsAt":165135,"type":"Sprite subroutine (JSL)","descriptio":"Water Splash Subroutine"},{"address":"$028528","length":"103 bytes. Ends at $02858E.","beginsAt":165160,"endsAt":165262,"type":"ASM","descriptio":"Lava Splash Subroutine\n$028540 is the objects to use for lava splash."},{"address":"$02858F","length":"80 bytes. Ends at $0285DE.","beginsAt":165263,"endsAt":165342,"type":"Subroutine (JSL)","descriptio":"Star Sparkle GFX Subroutine (Doesn't make Mario invincible, but shows sparkles.)\n$0285BA is where the Sprite/Block Star Sparkle GFX Subroutine starts (which is also used for Mario)."},{"address":"$02862F","length":"52 bytes. Ends at $028662.","beginsAt":165423,"endsAt":165474,"type":"Sprite subroutine (JSL)","descriptio":"Throw block creation subroutine.\n$028648 - Change from B5 to A5 to change a bug with the throwblock where it may spawn a water splash upon spawn in a buoyancy-enabled level.\n$02864E - Sprite number: Sprite that the Throw Block is made from.\n$028656 - Throw Block timer. Change it to 00 and it stays forever."},{"address":"$028663","length":"92 bytes. Ends at $0286BE.","beginsAt":165475,"endsAt":165566,"type":"Subroutine (JSL)","descriptio":"Block shatter subroutine. This creates 4 block pieces and plays the shatter sound effect, but it does not actually destroy the block (use $00BEB0 for that). If A is 00 when calling this, the block pieces will be brown, while if A is a nonzero number, they will flash palettes. It uses $98-$9B to set the XY position. Note that this should be called with the data bank set to 02."},{"address":"$028680","length":"1 byte","beginsAt":165504,"endsAt":165504,"type":"Sound effect","descriptio":"Breaking Turn Blocks Sound Effect."},{"address":"$028686","length":"3 bytes. Ends at $028688.","beginsAt":165510,"endsAt":165512,"type":"Misc.","descriptio":"Change to EA EA EA to disable the Turn Block shattering animation (turn blocks disappear when spin jumped). Also affects sprite 4C."},{"address":"$0286BF","length":"46 bytes. Ends at $0286EC.","beginsAt":165567,"endsAt":165612,"type":"Sprite subroutine (JSL)","descriptio":"Yellow Yoshi earthquake subroutine."},{"address":"$0286D7","length":"1 byte","beginsAt":165591,"endsAt":165591,"type":"Sprite Misc.","descriptio":"Change from 0xDD to 0xD5 to fix a glitch with Yoshi's ground pound hitbox where it can warp to the wrong side of the screen if the low byte of Mario's X position is #$F8-#$FF."},{"address":"$02873A","length":"4 bytes. Ends at $02873D.","beginsAt":165690,"endsAt":165693,"type":"Sprite physics","descriptio":"Bounce sprite Y speed table, based on direction (or the value in $06 during the routine at $028752)."},{"address":"$02873E","length":"4 bytes. Ends at $028741.","beginsAt":165694,"endsAt":165697,"type":"Sprite physics","descriptio":"Bounce sprite X speed table, based on direction (or the value in $06 during the routine at $028752)."},{"address":"$028752","length":"299 bytes. Ends at $02887C.","beginsAt":165714,"endsAt":166012,"type":"Subroutine (JSL)","descriptio":"A subroutine for spawning bounce sprites from blocks. It continues into the routine at $02887D.\nInput:\n$04 - bounce sprite number - 1\n$05 - value to use in $02887D\n$06 - speed index (see $02873A and $02873E)\n$07 - value of $9C that the block will turn into\n\nAt 0x10989/$028789:\nBlock bounce sprite YXPPCCCT table, in the following order:\n- Turn Block with item / ! Block\n- Note Block\n- ?-Block\n- Unused Side Bounce Turn Block\n- Glass Block\n- ON/OFF Block\n- Turn Block"},{"address":"$028765","length":"1 byte","beginsAt":165733,"endsAt":165733,"type":"Misc.","descriptio":"[05] Number of points awarded for breaking a turn block, divided by 10."},{"address":"$02887D","length":"36 bytes. Ends at $0288A0.","beginsAt":166013,"endsAt":166048,"type":"Subroutine (JSL)","descriptio":"Seems to be a subroutine for spawning stuff from blocks. What is spawned depends on the value of $05:\n\n00 - nothing\n01 - mushroom\n02 - flower\n03 - star\n04 - cape\n05 - 1-Up\n06 - coin\n07 - coin (sets multiple-coin-block timer)\n08 - growing vine\n09 - nothing?\n0A - P-switch (blue/gray depending on block X position)\n0B - key/wings/balloon/shell (depending on block X position)\n0C - green Yoshi egg\n0D - green Koopa shell (with stun timer set)\n0E - changing item\n0F - directional coins\n10 - key (but a random blue shell-less Koopa also pops out)\n11-FF - completely glitchy; best not to use\n\nThis subroutine can be used properly in a block, but the data bank must be 02 and the lower nybbles of $98 and $9A must be cleared. All values except 06 and 07 JSR to the main \"spawn sprite from block\" routine at $0288DC; values 06 and 07 JSR to the coin-spawning routine at $028A66."},{"address":"$0288A1","length":"1 byte","beginsAt":166049,"endsAt":166049,"type":"Sprite number","descriptio":"Sprite that comes out of egg in block 126 (Yoshi)"},{"address":"$0288A2","length":"1 byte","beginsAt":166050,"endsAt":166050,"type":"Sprite number","descriptio":"Sprite that comes out of egg in block 126 if Yoshi is already present (1up)"},{"address":"$0288A4","length":"1 byte","beginsAt":166052,"endsAt":166052,"type":"Sprite number","descriptio":"Sprite that, when Yoshi is not present, comes out of blocks 117, 118, 11F, and 120 when small, and 16B regardless of status. (Mushroom)"},{"address":"$0288A5","length":"1 byte","beginsAt":166053,"endsAt":166053,"type":"Sprite number","descriptio":"Sprite that comes out of blocks 117 and 11F when big (Flower)"},{"address":"$0288A6","length":"1 byte","beginsAt":166054,"endsAt":166054,"type":"Sprite number","descriptio":"Sprite that comes out of blocks 119 and 121; also comes out of block 11A (certain X-positions only) and 122 (all X-positions) when invincible (Star)"},{"address":"$0288A7","length":"1 byte","beginsAt":166055,"endsAt":166055,"type":"Sprite number","descriptio":"Sprite that comes out of blocks 118 and 120 when big, and 16A regardless of status (Feather)"},{"address":"$0288A8","length":"1 byte","beginsAt":166056,"endsAt":166056,"type":"Sprite number","descriptio":"Sprite that comes out of block 11A (1up)"},{"address":"$0288A8","length":"1 byte","beginsAt":166056,"endsAt":166056,"type":"Sprite number","descriptio":"Sprite that comes out of block 11A, and block 12D if at least 30 coins have been collected. (1up)"},{"address":"$0288AB","length":"1 byte","beginsAt":166059,"endsAt":166059,"type":"Sprite number","descriptio":"Sprite that comes out of block 11A(?) (Vine)"},{"address":"$0288AD","length":"1 byte","beginsAt":166061,"endsAt":166061,"type":"Sprite number","descriptio":"Sprite that comes out of block 11D (POW)"},{"address":"$0288AE","length":"1 byte","beginsAt":166062,"endsAt":166062,"type":"Sprite number","descriptio":"Sprite that comes out of block 125 (Balloon - if changed, it will produce the same sprite regardless of X position)"},{"address":"$0288AF","length":"1 byte","beginsAt":166063,"endsAt":166063,"type":"Sprite number","descriptio":"Sprite that comes out of block 126 (Yoshi egg)"},{"address":"$0288B0","length":"1 byte","beginsAt":166064,"endsAt":166064,"type":"Sprite number","descriptio":"Sprite that comes out of blocks 127 and 128 (Green shell)"},{"address":"$0288B1","length":"1 byte","beginsAt":166065,"endsAt":166065,"type":"Sprite number","descriptio":"Sprite that comes out of block 12C (Changing Item)"},{"address":"$0288B2","length":"1 byte","beginsAt":166066,"endsAt":166066,"type":"Sprite number","descriptio":"Sprite that comes out of block 114 (Directional coins)"},{"address":"$0288B5","length":"1 byte","beginsAt":166069,"endsAt":166069,"type":"Sprite number","descriptio":"Sprite that, when Yoshi is present, comes out of blocks 117, 118, 11F, and 120 when small, and 16B regardless of status. (Mushroom)"},{"address":"$0288B6","length":"1 byte","beginsAt":166070,"endsAt":166070,"type":"Sprite number","descriptio":"Sprite that comes out of block 117 when big (Flower), when Yoshi is present."},{"address":"$0288B7","length":"1 byte","beginsAt":166071,"endsAt":166071,"type":"Sprite number","descriptio":"Sprite that comes out of block 119 (Star), when Yoshi is present."},{"address":"$0288B8","length":"1 byte","beginsAt":166072,"endsAt":166072,"type":"Sprite number","descriptio":"Sprite that comes out of block 118 when big (Feather), when Yoshi is present."},{"address":"$0288B9","length":"1 byte","beginsAt":166073,"endsAt":166073,"type":"Sprite number","descriptio":"Sprite that comes out of block 11A, and block 12D if at least 30 coins have been collected, when Yoshi is present. (1up)"},{"address":"$0288B9","length":"1 byte","beginsAt":166073,"endsAt":166073,"type":"Sprite number","descriptio":"Sprite that comes out of block 11A (1up), when Yoshi is present."},{"address":"$0288BC","length":"1 byte","beginsAt":166076,"endsAt":166076,"type":"Sprite number","descriptio":"Sprite that comes out of block 11A(?) (Vine), when Yoshi is present."},{"address":"$0288BE","length":"1 byte","beginsAt":166078,"endsAt":166078,"type":"Sprite number","descriptio":"Sprite that comes out of block 11D (POW), when Yoshi is present."},{"address":"$0288BF","length":"1 byte","beginsAt":166079,"endsAt":166079,"type":"Sprite number","descriptio":"Sprite that comes out of block 125 (Balloon - if changed, it will produce the same sprite regardless of X position), if Yoshi is present."},{"address":"$0288C0","length":"1 byte","beginsAt":166080,"endsAt":166080,"type":"Sprite number","descriptio":"Sprite that comes out of block 126 (Yoshi egg), if Yoshi is present."},{"address":"$0288C1","length":"1 byte","beginsAt":166081,"endsAt":166081,"type":"Sprite number","descriptio":"Sprite that comes out of blocks 127 and 128 if Yoshi is present (Green shell)"},{"address":"$0288C2","length":"1 byte","beginsAt":166082,"endsAt":166082,"type":"Sprite number","descriptio":"Sprite that comes out of block 12C (Changing Item), if Yoshi is present."},{"address":"$0288C3","length":"1 byte","beginsAt":166083,"endsAt":166083,"type":"Sprite number","descriptio":"Sprite that comes out of block 114 (Directional coins), if Yoshi is present."},{"address":"$0288C6","length":"11 bytes. Ends at $0288D0.","beginsAt":166086,"endsAt":166096,"type":"Misc.","descriptio":"Sprite in block status ($7E14C8 - $7E14D3) table."},{"address":"$0288D6","length":"3 bytes. Ends at $0288D8.","beginsAt":166102,"endsAt":166104,"type":"Sprite number","descriptio":"Sprites spawned by key/wings/balloon/shell block, indexed by its X position. Note that this table is only 3 bytes long, not 4 bytes; the shell actually comes from the key's sprite status."},{"address":"$0288D9","length":"3 bytes. Ends at $0288DB.","beginsAt":166105,"endsAt":166107,"type":"Sprite Misc.","descriptio":"Sprite status of sprite spawned by the key/wings/balloon/shell block, indexed by its X position. Note that this table is only 3 bytes long, not 4 bytes; the shell is given an invalid sprite status."},{"address":"$028905","length":"98 bytes. Ends at $028966.","beginsAt":166149,"endsAt":166246,"type":"Subroutine (JSL)","descriptio":"The subroutine that generates a sprite from a block (tile 120 or 125, for example).\n$02895F - Change from F0 to 80 to allow Directional Coins to reappear if you activate the block, then leave the area and come back."},{"address":"$028968","length":"1 byte","beginsAt":166248,"endsAt":166248,"type":"Music","descriptio":"Directional coins music."},{"address":"$028A03","length":"4 bytes. Ends at $028A06.","beginsAt":166403,"endsAt":166406,"type":"ASM","descriptio":"If you change [F6 C2 F6 C2] to [EA EA EA EA], then tile 125 will spawn a flying red coin instead of Yoshi wings on X-coordinate (X&3 = $01)."},{"address":"$028A08","length":"2 bytes. Ends at $028A09.","beginsAt":166408,"endsAt":166409,"type":"ASM","descriptio":"[A9 FF] Change to [80 03] or [A9 00] to prevent the stun timer of the shell spawned from blocks 127 and 128 from ever being set. It will just spawn as a plain shell rather than a shell that will \"wake up\". (Or you can change the second byte to a different value to make the stun timer shorter.)"},{"address":"$028A42","length":"2 bytes. Ends at $028A43.","beginsAt":166466,"endsAt":166467,"type":"Sprite tilemap related","descriptio":"Colours of P-Switches (Blue, Silver) when spawned by tile 11D"},{"address":"$028A44","length":"34 bytes. Ends at $028A65.","beginsAt":166468,"endsAt":166501,"type":"Subroutine (JSL)","descriptio":"Subroutine for generating smoke when hitting a block.\n\nYou can use this in a custom block, but be sure to set up $98 and $9A accordingly."},{"address":"$028A66","length":"67 bytes. Ends at $028AA8.","beginsAt":166502,"endsAt":166568,"type":"Subroutine (JSR)","descriptio":"Subroutine for spawning the coin that comes out of a ? block (for example tile 124).\n\nIt can be used in a custom block, but the low nybbles of $98 and $9A must be cleared first. This subroutine ends with RTS, but it may be accessed with a JSL to $02889D."},{"address":"$028AB1","length":"182 bytes. Ends at $028B66.","beginsAt":166577,"endsAt":166758,"type":"Subroutine (JSL)","descriptio":"1up handler routine.\n\n$02:8AC9 is the number of frames to wait before awarding each extra life after the first, when a 2up or higher is obtained. (Note that reducing this may skip some of the 1up sound effects.)\n$02:8ACE is the sound effect."},{"address":"$028B78","length":"12 bytes. Ends at $028B83.","beginsAt":166776,"endsAt":166787,"type":"Sprite Misc.","descriptio":"OAM indexes for minor extended sprites."},{"address":"$028B84","length":"8 bytes. Ends at $028B8B.","beginsAt":166788,"endsAt":166795,"type":"Sprite tilemap related","descriptio":"Sprite mappings for Broken Bricks, Broken Turn blocks, and Broken Throw Blocks"},{"address":"$028B8C","length":"8 bytes. Ends at $028B93.","beginsAt":166796,"endsAt":166803,"type":"Sprite tilemap related","descriptio":"Broken Brick tile properties, YXPPCCCT format."},{"address":"$028B98","length":"24 bytes. Ends at $028BAF.","beginsAt":166808,"endsAt":166831,"type":"Pointer","descriptio":"Minor extended sprite pointer table, 2 bytes per sprite."},{"address":"$028BB4","length":"1 byte","beginsAt":166836,"endsAt":166836,"type":"Misc.","descriptio":"Set to B9 to enable unused \"Getting on Yoshi\" dust animation"},{"address":"$028C6A","length":"4 bytes. Ends at $028C6D.","beginsAt":167018,"endsAt":167021,"type":"Sprite tilemap related","descriptio":"Table of 4x4 tiles used for the unused \"getting on Yoshi\" smoke minor extended sprite."},{"address":"$028CAA","length":"1 byte","beginsAt":167082,"endsAt":167082,"type":"Sprite tilemap related","descriptio":"Properties of the unused \"getting on Yoshi\" smoke minor extended sprite."},{"address":"$028CB8","length":"12 bytes. Ends at $028CC3.","beginsAt":167096,"endsAt":167107,"type":"Sprite tilemap related","descriptio":"Reflecting Stream of Boo Buddies tilemap (Boos that follow the leader)"},{"address":"$028CC4","length":"126 bytes. Ends at $028D41.","beginsAt":167108,"endsAt":167233,"type":"Sprite Misc.","descriptio":"The code for the minor extended sprites that make up the Boo stream.\n$028D34 is palette and GFX page of the following Boos in the Boo stream. (If you use the default palettes, changing this to 03 won't have any effect, since the proper palette setting for the sprite (palette F) uses the same colors as palette 9.)"},{"address":"$028D42","length":"13 bytes. Ends at $028D4E.","beginsAt":167234,"endsAt":167246,"type":"Sprite tilemap related","descriptio":"Water Splash Tilemap"},{"address":"$028DD7","length":"4 bytes. Ends at $028DDA.","beginsAt":167383,"endsAt":167386,"type":"Sprite tilemap related","descriptio":"Tiles used by Rip Van Fish's Z's"},{"address":"$028E44","length":"1 byte","beginsAt":167492,"endsAt":167492,"type":"Sprite tilemap related","descriptio":"Properties of Rip Van Fish's Z's. Set to 02 to make it use the first graphics page."},{"address":"$028EB2","length":"1 byte","beginsAt":167602,"endsAt":167602,"type":"Sprite tilemap related","descriptio":"Tile of broken Yoshi egg piece"},{"address":"$028EBC","length":"1 byte","beginsAt":167612,"endsAt":167612,"type":"Sprite tilemap related","descriptio":"Palette/GFX page of broken Yoshi egg piece"},{"address":"$028ECC","length":"6 bytes. Ends at $028ED1.","beginsAt":167628,"endsAt":167633,"type":"Sprite tilemap related","descriptio":"Star Mario's Sparkle Tiles"},{"address":"$028F0B","length":"1 byte","beginsAt":167691,"endsAt":167691,"type":"Misc.","descriptio":"Change to 00 to give Invincible Mario coin sparkles"},{"address":"$028F1A","length":"1 byte","beginsAt":167706,"endsAt":167706,"type":"Sprite tilemap related","descriptio":"Palette of star sparkles"},{"address":"$028F2B","length":"4 bytes. Ends at $028F2E.","beginsAt":167723,"endsAt":167726,"type":"Sprite tilemap related","descriptio":"Lava splash tiles (1)"},{"address":"$028F76","length":"1 byte","beginsAt":167798,"endsAt":167798,"type":"Sprite tilemap related","descriptio":"Lava splash palette/GFX page (1)"},{"address":"$0290C0","length":"3 bytes. Ends at $0290C2.","beginsAt":168128,"endsAt":168130,"type":"ASM","descriptio":"Decrements the timers used by spinning turn blocks to determine how long they should spin. Change to [EA EA EA] to make the last four turn blocks Mario has hit spin forever."},{"address":"$02917E","length":"1 byte","beginsAt":168318,"endsAt":168318,"type":"Sound effect","descriptio":"Sound Effect from bouncing on a Note Block"},{"address":"$0291B5","length":"1 byte","beginsAt":168373,"endsAt":168373,"type":"Misc.","descriptio":"Value for $9C to change what Map16 tile is created when a multiple-coin-block is hit after its timer has run out."},{"address":"$0291B9","length":"1 byte","beginsAt":168377,"endsAt":168377,"type":"Misc.","descriptio":"Tile spawned behind bouncing block sprite"},{"address":"$0291ED","length":"4 bytes. Ends at $0291F0.","beginsAt":168429,"endsAt":168432,"type":"Sprite Misc.","descriptio":"OAM indexes for block bounce sprites (in the $0200 block)."},{"address":"$0291F1","length":"7 bytes. Ends at $0291F7.","beginsAt":168433,"endsAt":168439,"type":"Sprite tilemap related","descriptio":"Block bounce sprite tiles\n\n40 - Turn Block\n6B - Note Block\n2A - ?-Block\n42 - Unused Side Bounce Turn Block (40)\nEA - Glass Block\n8A - ON/OFF Block"},{"address":"$029265","length":"301 bytes. Ends at $029391.","beginsAt":168549,"endsAt":168849,"type":"Subroutine (JSR)","descriptio":"Subroutine run on bounce sprite INIT (for all bounce sprites except turnblocks), which is responsible for the bug where a coin on top of hittable block and hitting said block will cause the coin to turn into an invisible solid block.\n\nChange $0290ED from [20] to [AD] to prevent the coin from being collected."},{"address":"$029347","length":"3 bytes. Ends at $029349.","beginsAt":168775,"endsAt":168777,"type":"ASM","descriptio":"Change to [20 1E D5], and change $02D51E from FF FF FF FF FF to A9 02 4C BA 91, to fix the glitch where placing a coin above a ? block or turn block will cause the coin to leave behind an invisible solid block if the block below is hit."},{"address":"$029356","length":"60 bytes. Ends at $029391.","beginsAt":168790,"endsAt":168849,"type":"Subroutine (JSR)","descriptio":"Code that creates a spinning coin sprite from a bounce sprite spawned by tile 2B. However, this never happens (tile 2B doesn't spawn a bounce sprite), so this subroutine seems to be unused. It is called at $02934A."},{"address":"$029444","length":"1 byte","beginsAt":169028,"endsAt":169028,"type":"Misc.","descriptio":"If you change this from FF to 00 then you won't see the eyes blinking or the shell shake. However, do keep in mind that it will affect the Bob-ombs too. If you hit them with a cape or a block from underneath it won't explode."},{"address":"$029456","length":"1 byte","beginsAt":169046,"endsAt":169046,"type":"Misc.","descriptio":"Score added for hitting an enemy from below or smacking an enemy with the cape\n\n00 = Nothing at all\n01 - 07 = Scores 200-8000.\n08 = 1UP.\n09 = 2UP.\n0A = 3UP.\n0B = 5UP (glitched).\n0C-FB = Best not to use.\nFC-FF = Scores 10-80"},{"address":"$0294C1","length":"52 bytes. Ends at $0294F4.","beginsAt":169153,"endsAt":169204,"type":"Subroutine (JSL)","descriptio":"Cape Mario smashes ground subroutine."},{"address":"$0294F5","length":"22 bytes. Ends at $02950A.","beginsAt":169205,"endsAt":169226,"type":"Subroutine (JSR)","descriptio":"Routine that processes capespin interaction with sprites, extended sprites, and blocks."},{"address":"$029663","length":"51 bytes. Ends at $029695.","beginsAt":169571,"endsAt":169621,"type":"Sprite subroutine (JSR)","descriptio":"Routine that gets sprite clipping value for quake sprites (i.e. bounce sprites and Yoshi's stomp). Takes the place of \"sprite clipping B\" from the standard routines."},{"address":"$0296B8","length":"4 bytes. Ends at $0296BB.","beginsAt":169656,"endsAt":169659,"type":"Sprite Misc.","descriptio":"OAM indexes for the smoke images (in the $0200 block)."},{"address":"$0296CB","length":"12 bytes. Ends at $0296D6.","beginsAt":169675,"endsAt":169686,"type":"Pointer","descriptio":"Pointer to the smoke images. ($7E:17F0 - $7E:17FB)"},{"address":"$029922","length":"5 bytes. Ends at $029926.","beginsAt":170274,"endsAt":170278,"type":"Sprite tilemap related","descriptio":"Mario/Luigi's trail of smoke tilemap. It uses palette 8."},{"address":"$0299E9","length":"4 bytes. Ends at $0299EC.","beginsAt":170473,"endsAt":170476,"type":"Sprite Misc.","descriptio":"OAM indexes for the spinning coins that come out of ? blocks. The next index after each of these is also used (the GFX routine will store to $0200,y and sometimes to $0204,y as well)."},{"address":"$0299F1","length":"183 bytes. Ends at $029AA7.","beginsAt":170481,"endsAt":170663,"type":"Sprite subroutine (JSR)","descriptio":"Main handling routine for the spinning coins that come out of ? blocks.\n$029A4F is a fourth of the rolling coin tilemap. This tile is 16x16.\n$029A54 is the properties of the rolling coin flying from question blocks.\n$029A6E is three fourths of the tilemap of the rolling coin. These tiles are 8x8, but they're duplicated and placed above each other, making it 8x16."},{"address":"$0299FD","length":"1 byte","beginsAt":170493,"endsAt":170493,"type":"Sprite physics","descriptio":"Downwards Y acceleration for the coin sprites spawned from coin blocks. Decrease this value to make them fly higher."},{"address":"$029AAD","length":"1 byte","beginsAt":170669,"endsAt":170669,"type":"Misc.","descriptio":"How many points you receive for getting a coin out of a block."},{"address":"$029AE6","length":"1 byte","beginsAt":170726,"endsAt":170726,"type":"Misc.","descriptio":"Smoke sprite to spawn from coins spawned by coin blocks.\n"},{"address":"$029B2B","length":"38 bytes. Ends at $029B50.","beginsAt":170795,"endsAt":170832,"type":"Pointer","descriptio":"Extended sprite routines (hammer, fireball, etc.)"},{"address":"$029B85","length":"1 byte","beginsAt":170885,"endsAt":170885,"type":"Sprite tilemap related","descriptio":"palette/GFX page of volcano lotus' fireball"},{"address":"$029B94","length":"1 byte","beginsAt":170900,"endsAt":170900,"type":"Sprite tilemap related","descriptio":"first tile of volcano lotus' fireball"},{"address":"$029B98","length":"1 byte","beginsAt":170904,"endsAt":170904,"type":"Sprite tilemap related","descriptio":"second tile of volcano lotus' fireball"},{"address":"$029C8F","length":"1 byte","beginsAt":171151,"endsAt":171151,"type":"Sprite tilemap related","descriptio":"Spin jump star palette"},{"address":"$029C94","length":"1 byte","beginsAt":171156,"endsAt":171156,"type":"Sprite tilemap related","descriptio":"Spin jump star tile"},{"address":"$029D30","length":"1 byte","beginsAt":171312,"endsAt":171312,"type":"Sprite tilemap related","descriptio":"Tile used by Wiggler's Flower once it falls off his head"},{"address":"$029D35","length":"1 byte","beginsAt":171317,"endsAt":171317,"type":"Sprite tilemap related","descriptio":"The YXPPCCCT properties for the tile used by Wiggler's Flower once it falls off his head."},{"address":"$029D4B","length":"1 byte","beginsAt":171339,"endsAt":171339,"type":"Sprite tilemap related","descriptio":"The sprite graphics tile used for the Smiley Coin that is dropped by the Coin Cloud Game."},{"address":"$029D50","length":"1 byte","beginsAt":171344,"endsAt":171344,"type":"Sprite tilemap related","descriptio":"The YXPPCCCT properties for the tile used for the Smiley Coin in the Coin Cloud Game."},{"address":"$029D55","length":"1 byte","beginsAt":171349,"endsAt":171349,"type":"Sprite tilemap related","descriptio":"Size of smiley face coin tiles (00=8x8; 02=16x16)"},{"address":"$029E66","length":"1 byte","beginsAt":171622,"endsAt":171622,"type":"Sprite tilemap related","descriptio":"Tile used by the arm that lowers Torpedo Ted (hand closed)"},{"address":"$029E6A","length":"1 byte","beginsAt":171626,"endsAt":171626,"type":"Sprite tilemap related","descriptio":"Tile used by the arm that lowers Torpedo Ted (hand open)"},{"address":"$029E82","length":"4 bytes. Ends at $029E85.","beginsAt":171650,"endsAt":171653,"type":"Sprite tilemap related","descriptio":"Lava splash tiles (2)"},{"address":"$029ED5","length":"1 byte","beginsAt":171733,"endsAt":171733,"type":"Sprite tilemap related","descriptio":"Lava splash palette/GFX page (2)"},{"address":"$029F5C","length":"1 byte","beginsAt":171868,"endsAt":171868,"type":"Sprite tilemap related","descriptio":"Tile number for the small bubble that Mario spawns when he is underwater."},{"address":"$029F7A","length":"1 byte","beginsAt":171898,"endsAt":171898,"type":"Sprite tilemap related","descriptio":"Yoshi's Fireball Frame 1 Tilemap"},{"address":"$029F7E","length":"1 byte","beginsAt":171902,"endsAt":171902,"type":"Sprite tilemap related","descriptio":"Yoshi's Fireball Frame 2 Tilemap"},{"address":"$029F8B","length":"1 byte","beginsAt":171915,"endsAt":171915,"type":"Sprite tilemap related","descriptio":"Yoshi fireball palette/GFX page"},{"address":"$029F99","length":"8 bytes. Ends at $029FA0.","beginsAt":171929,"endsAt":171936,"type":"Sprite physics","descriptio":"Table for Mario fireball bounce speed. Change to all zeros to make straight fireballs not fly off of slopes at an angle. Use in conjunction with the fireball hit timer at $029FE4."},{"address":"$029FAB","length":"2 bytes. Ends at $029FAC.","beginsAt":171947,"endsAt":171948,"type":"Sprite Misc.","descriptio":"OAM indexes for the player's fireballs."},{"address":"$029FD4","length":"1 byte","beginsAt":171988,"endsAt":171988,"type":"Sprite physics","descriptio":"Initial Fireball Y Speed #2"},{"address":"$029FDB","length":"1 byte","beginsAt":171995,"endsAt":171995,"type":"ASM","descriptio":"Change to 80 to make the player's fireballs go through objects."},{"address":"$029FE4","length":"1 byte","beginsAt":172004,"endsAt":172004,"type":"Timer","descriptio":"Fireball hit timer. This increases each time a fireball hits an object or a sprite. Changing it to #$01 will fix the bug with straight fireballs where the second fireball will go through objects if the first one is hitting an object. Use in conjunction with the bounce speed table at $029F99."},{"address":"$02A046","length":"1 byte","beginsAt":172102,"endsAt":172102,"type":"Sound effect","descriptio":"Sound effect played when the players fireball touches an object. It is #$01 by default, and the sound effect is in bank $1DF9."},{"address":"$02A0B9","length":"1 byte","beginsAt":172217,"endsAt":172217,"type":"Sprite Misc.","descriptio":"Change from #$09 to #$0B (or #$15 in a SA-1 ROM) to fix a glitch with both the player's and Yoshi's fireballs where they don't interact with sprite slots above 9."},{"address":"$02A0FB","length":"1 byte","beginsAt":172283,"endsAt":172283,"type":"Misc.","descriptio":"Change to 0A to make other enemies die like Chargin' Chuck when hit by fireballs"},{"address":"$02A0FC","length":"1 byte","beginsAt":172284,"endsAt":172284,"type":"Misc.","descriptio":"Set to BD for unlimited Chargin Chuck fire hp"},{"address":"$02A103","length":"1 byte","beginsAt":172291,"endsAt":172291,"type":"Misc.","descriptio":"Chargin Chuck fire hp"},{"address":"$02A107","length":"1 byte","beginsAt":172295,"endsAt":172295,"type":"Sound effect","descriptio":"Sound effect to play when Chuck is killed by fireballs"},{"address":"$02A11D","length":"1 byte","beginsAt":172317,"endsAt":172317,"type":"Misc.","descriptio":"Determines the number of points received for defeating a Chuck with fireballs (this also applies to any tweaked or custom sprites that have the \"Takes 5 fireballs to kill\" flag set). See $02ACE5 for a list of possible values."},{"address":"$02A124","length":"31 bytes. Ends at $02A142.","beginsAt":172324,"endsAt":172354,"type":"ASM","descriptio":"Code that turns a sprite into a coin after getting hit by a fireball\n$02A125 is the sound effect to play when other enemies are killed by fireballs\n$02A12A is the sprite fireballed enemies spawn"},{"address":"$02A153","length":"8 bytes. Ends at $02A15A.","beginsAt":172371,"endsAt":172378,"type":"Sprite Misc.","descriptio":"OAM indexes for extended sprites."},{"address":"$02A15B","length":"4 bytes. Ends at $02A15E.","beginsAt":172379,"endsAt":172382,"type":"Sprite tilemap related","descriptio":"Fireball tile table"},{"address":"$02A15F","length":"4 bytes. Ends at $02A162.","beginsAt":172383,"endsAt":172386,"type":"Mario tilemap","descriptio":"Fireball tiles' palette/gfx page/priority/flip (May also affect the small flame left by Hopping Flame.)"},{"address":"$02A163","length":"4 bytes. Ends at $02A166.","beginsAt":172387,"endsAt":172390,"type":"Sprite tilemap related","descriptio":"Reznor Fireball Tilemap"},{"address":"$02A17B","length":"2 bytes. Ends at $02A17C.","beginsAt":172411,"endsAt":172412,"type":"Sprite tilemap related","descriptio":"Change to [EA EA] (org $02A17B : NOP #2) to make Reznor's and Jumpin' Piranha Plant's fireballs always large, or to [80 27] (org $02A17B : BRA $27) to make them always small."},{"address":"$02A1A4","length":"115 bytes. Ends at $02A216.","beginsAt":172452,"endsAt":172566,"type":"Sprite subroutine (JSR)","descriptio":"8x8 fireball GFX subroutine. Is it also used as a base for various other extended sprites' graphics (they JSR to it and then change the tile numbers and properties)."},{"address":"$02A217","length":"2 bytes. Ends at $02A218.","beginsAt":172567,"endsAt":172568,"type":"Sprite tilemap related","descriptio":"Small flame left by Hopping Flame Tilemap"},{"address":"$02A24C","length":"1 byte","beginsAt":172620,"endsAt":172620,"type":"Misc.","descriptio":"Small flame's palette. It is added to the fireball's palette."},{"address":"$02A2A4","length":"1 byte","beginsAt":172708,"endsAt":172708,"type":"Sprite tilemap related","descriptio":"Tile used by Pitchin' Chuck's baseball once thrown"},{"address":"$02A2B1","length":"1 byte","beginsAt":172721,"endsAt":172721,"type":"Sprite tilemap related","descriptio":"Palette/GFX Page of Baseball once thrown"},{"address":"$02A2CC","length":"1 byte","beginsAt":172748,"endsAt":172748,"type":"Sprite tilemap related","descriptio":"Dry Bones: frame 1 of thrown bone"},{"address":"$02A2D0","length":"1 byte","beginsAt":172752,"endsAt":172752,"type":"Sprite tilemap related","descriptio":"Dry Bones: frame 2 of thrown bone"},{"address":"$02A2DA","length":"1 byte","beginsAt":172762,"endsAt":172762,"type":"Sprite tilemap related","descriptio":"Dry Bones: palette/gfx page of thrown bone"},{"address":"$02A2DF","length":"8 bytes. Ends at $02A2E6.","beginsAt":172767,"endsAt":172774,"type":"Sprite tilemap related","descriptio":"Hammer Tilemap (Also, the flip of Dry Bones' bone)"},{"address":"$02A2E7","length":"8 bytes. Ends at $02A2EE.","beginsAt":172775,"endsAt":172782,"type":"Sprite tilemap related","descriptio":"Palette/GFX Page of Hammer"},{"address":"$02A347","length":"4 bytes. Ends at $02A34A.","beginsAt":172871,"endsAt":172874,"type":"Sprite tilemap related","descriptio":"Dust Cloud Tilemap"},{"address":"$02A3F6","length":"242 bytes. Ends at $02A4E7.","beginsAt":173046,"endsAt":173287,"type":"Sprite subroutine (JSR)","descriptio":"Extended sprite/player contact check and interaction subroutine.\n\n$02A412 is the extended sprite interaction for the bonus game cloud.\n\n$02A469 is the default extended sprite interaction to hurt Mario.\n\n$02A4B3 is the speed Yoshi runs away when Mario gets hurt by an extended sprite and while he is riding yoshi (index: right, left).\nChange $02A4B3 from [10 F0] to [18 E8] to fix an inconsistency where Yoshi runs slower when hurt from an extended sprite than hurt from a regular sprite."},{"address":"$02A4E9","length":"12 bytes. Ends at $02A4F4.","beginsAt":173289,"endsAt":173300,"type":"Coordinate","descriptio":"X-offsets for extended sprites $02-$0D's clipping. 12 bytes and they're in that order."},{"address":"$02A4F5","length":"12 bytes. Ends at $02A500.","beginsAt":173301,"endsAt":173312,"type":"Coordinate","descriptio":"Y-offsets for extended sprites $02-$0D's clipping. 12 bytes and they're in that order."},{"address":"$02A501","length":"12 bytes. Ends at $02A50C.","beginsAt":173313,"endsAt":173324,"type":"Coordinate","descriptio":"Width for extended sprites $02-$0D's clipping. 12 bytes and they're in that order. Value may not exceed $7F. The clipping 'stretches' from the sprite's origin to the right."},{"address":"$02A50D","length":"12 bytes. Ends at $02A518.","beginsAt":173325,"endsAt":173336,"type":"Coordinate","descriptio":"Height for extended sprites $02-$0D's clipping. 12 bytes and they're in that order. Value may not exceed $7F. The clipping 'stretches' from the sprite's origin to below."},{"address":"$02A547","length":"39 bytes. Ends at $02A56D.","beginsAt":173383,"endsAt":173421,"type":"Sprite subroutine (JSR)","descriptio":"\"Get Fireball clipping\" subroutine. Valid for Yoshi's and Mario's fireballs, Stores the clipping X displacement low byte to $00, the clipping X displacement high byte to $08, the clipping width (#0C) to $02, the clipping Y displacement low byte to $01, the clipping Y displacement high byte to $09, and the clipping height (#$13) to $03."},{"address":"$02A56E","length":"483 bytes. Ends at $02A750.","beginsAt":173422,"endsAt":173904,"type":"Sprite subroutine (JSR)","descriptio":"Object contact subroutine for the player's fireballs."},{"address":"$02A7D2","length":"37 bytes. Ends at $02A7F6.","beginsAt":174034,"endsAt":174070,"type":"Misc.","descriptio":"Two sprites that are treated as \"special\" within the sprite header. The first list of sprites come first before the second."},{"address":"$02A7FC","length":"482 bytes. Ends at $02A9DD.","beginsAt":174076,"endsAt":174557,"type":"Subroutine (JSR)","descriptio":"The routine that loads sprites from the level data. Called every frame; $02A802 is also called a few times during level load."},{"address":"$02A988","length":"1 byte","beginsAt":174472,"endsAt":174472,"type":"ASM","descriptio":"Change from 10 to 80 to disable the green and red koopa shells from becoming yellow and blue after the special world is passed"},{"address":"$02A98B","length":"1 byte","beginsAt":174475,"endsAt":174475,"type":"Sprite number","descriptio":"1st sprite to change after beating Special Zone (Green Koopa)"},{"address":"$02A98F","length":"1 byte","beginsAt":174479,"endsAt":174479,"type":"Sprite number","descriptio":"What sprite Green Koopa becomes after beating Special World (Yellow Koopa)"},{"address":"$02A991","length":"1 byte","beginsAt":174481,"endsAt":174481,"type":"Sprite number","descriptio":"2nd sprite to change after beating Special Zone (Red Koopa)"},{"address":"$02A995","length":"1 byte","beginsAt":174485,"endsAt":174485,"type":"Sprite number","descriptio":"What Red Koopa becomes after beating Special World (Blue Koopa)"},{"address":"$02A9A1","length":"1 byte","beginsAt":174497,"endsAt":174497,"type":"Misc.","descriptio":"Change to 80 to prevent off screen sprites from turning into silver coins when the silver POW is active (USE WITH $01AB28)"},{"address":"$02A9B1","length":"1 byte","beginsAt":174513,"endsAt":174513,"type":"Sprite number","descriptio":"Sprite that all sprites change into when a silver POW is active. (Only works on offscreen sprites) Take note that the sprite will use the same palette as the silver coin that is normally spawned"},{"address":"$02A9C3","length":"1 byte","beginsAt":174531,"endsAt":174531,"type":"Palette","descriptio":"Palette to use for sprites changed by Silver P-Switch (offscreen sprites only)"},{"address":"$02A9E4","length":"39 bytes. Ends at $02AA0A.","beginsAt":174564,"endsAt":174602,"type":"Subroutine (JSL)","descriptio":"Routine to search for free spite slot within the standard sprite slot region (as defined by the sprite memory setting).\nJumping to $02A9E6 will alternatively start searching from the highest available slot minus whatever value is in $0E (e.g. if the standard range is 1-9 and $0E = 0x03, then it will search only slots 1-6). For a value of 0x02, jump to $02A9DE instead."},{"address":"$02AA0B","length":"20 bytes. Ends at $02AA1E.","beginsAt":174603,"endsAt":174622,"type":"Coordinate","descriptio":"Position of all Boos in the reappearing ghosts generator, frame 1. Format: $xy."},{"address":"$02AA1F","length":"20 bytes. Ends at $02AA32.","beginsAt":174623,"endsAt":174642,"type":"Coordinate","descriptio":"Position of all Boos in the reappearing ghosts generator, frame 2. Format: $xy."},{"address":"$02ABF3","length":"1 byte","beginsAt":175091,"endsAt":175091,"type":"Misc.","descriptio":"Change from 3F to 7F to fix a bug where the sprite load (or permanently killed) status index 64 to 127 gets carried over to the next level."},{"address":"$02AC18","length":"1 byte","beginsAt":175128,"endsAt":175128,"type":"Misc.","descriptio":"Change to 80 to fix the glitch where going through a pipe with a silver P-switch makes it act like a blue one."},{"address":"$02ACE5","length":"10 bytes. Ends at $02ACEE.","beginsAt":175333,"endsAt":175342,"type":"Subroutine (JSL)","descriptio":"The \"give points\" routine. It ends in RTL, but it JSLs to the main one. To use this properly, A should contain one of the following values:\n\n00 = 100\n01 = 200\n02 = 400\n03 = 800\n04 = 1000\n05 = 2000\n06 = 4000\n07 = 8000\n08 = 1up\n09 = 2up\n0A = 3up\n0B = 5up (may glitch)"},{"address":"$02ACEF","length":"69 bytes. Ends at $02AD33.","beginsAt":175343,"endsAt":175411,"type":"Subroutine (JSL)","descriptio":"The main score sprite subroutine. Load a value into A and JSL to it to give the player points.\n\n00 = ?\n01 = 10\n02 = 20\n03 = 40\n04 = 80\n05 = 100\n06 = 200\n07 = 400\n08 = 800\n09 = 1000\n0A = 2000\n0B = 4000\n0C = 8000\n0D = 1up\n0E = 2up\n0F = 3up\n10 = 5up (may glitch)"},{"address":"$02AD4D","length":"21 bytes. Ends at $02AD61.","beginsAt":175437,"endsAt":175457,"type":"Sprite tilemap related","descriptio":"Tiles used by Floating Point Notations, 1UPs, 2UPs, etc. 1st half."},{"address":"$02AD63","length":"21 bytes. Ends at $02AD77.","beginsAt":175459,"endsAt":175479,"type":"Sprite tilemap related","descriptio":"Tiles used by Floating Point Notations, 1UPs, 2UPs, etc. 2nd half"},{"address":"$02AD78","length":"16 bytes. Ends at $02AD87.","beginsAt":175480,"endsAt":175495,"type":"Misc.","descriptio":"Score added from score sprites, divided by 10 (low byte)"},{"address":"$02AD89","length":"16 bytes. Ends at $02AD98.","beginsAt":175497,"endsAt":175512,"type":"Misc.","descriptio":"Score added from score sprites, divided by 10 (high byte)"},{"address":"$02AD9A","length":"1 byte","beginsAt":175514,"endsAt":175514,"type":"Misc.","descriptio":"point rise speed"},{"address":"$02AD9E","length":"6 bytes. Ends at $02ADA3.","beginsAt":175518,"endsAt":175523,"type":"Sprite Misc.","descriptio":"OAM indexes for score sprites."},{"address":"$02ADA4","length":"389 bytes. Ends at $02AF28.","beginsAt":175524,"endsAt":175912,"type":"Sprite Misc.","descriptio":"The main routine for all score sprites. This handles graphics, giving lives/points/1-ups/coins, position updating, etc.\n$02ADD9 is how many lives 1up Mushrooms give you.\n$02ADDA is how many lives 2up gives you.\n$02ADDB is how many lives 3up Moons give you.\n$02ADDC is how many lives 5up gives you.\n$02ADDD is how many coins you get from the (unused) x5, x10, x15, x20, and x25 coin sprites.\n$02ADE2 is the attributes of 2up & 3up score sprites. The unused 5up sprites and coin sprites read past this table.\nYou can change $02AE03 to A9 xx EA to make 1up Mushrooms and 3up Moons give you xx lives."},{"address":"$02AED9","length":"1 byte","beginsAt":175833,"endsAt":175833,"type":"Sprite Misc.","descriptio":"Score sprite and 1-UP text sprite YXPPCCCT. It is recommend you to change only priority and palette."},{"address":"$02AF52","length":"1 byte","beginsAt":175954,"endsAt":175954,"type":"Sprite number","descriptio":"The sprite that the 3 platforms is made from"},{"address":"$02AFBC","length":"1 byte","beginsAt":176060,"endsAt":176060,"type":"Sprite number","descriptio":"Sprite that the 'group of 5 eerie' is made of"},{"address":"$02B044","length":"1 byte","beginsAt":176196,"endsAt":176196,"type":"Sound effect","descriptio":"SFX played by bowser fireball generator. Change to 00 to disable."},{"address":"$02B04E","length":"1 byte","beginsAt":176206,"endsAt":176206,"type":"Sprite number","descriptio":"Sprite spawned by bowser fireball generator"},{"address":"$02B07F","length":"1 byte","beginsAt":176255,"endsAt":176255,"type":"Misc.","descriptio":"How often the Bullet Bill generator fires (sprite D5)"},{"address":"$02B089","length":"1 byte","beginsAt":176265,"endsAt":176265,"type":"Sound effect","descriptio":"SFX played by bullet bill generator. Change to 00 to disable."},{"address":"$02B094","length":"1 byte","beginsAt":176276,"endsAt":176276,"type":"Sprite number","descriptio":"Sprite spawned by bullet bill generator"},{"address":"$02B0CB","length":"1 byte","beginsAt":176331,"endsAt":176331,"type":"Sprite Misc.","descriptio":"Number of bullets to spawn from the surrounded Bullet Bill generator, minus one. (Don't set this higher than 04, or the tables at $02B0FA-$02B114 will underflow.)"},{"address":"$02B0CC","length":"1 byte","beginsAt":176332,"endsAt":176332,"type":"Sprite Misc.","descriptio":"Number of bullets to spawn from the diagonal Bullet Bill generator, minus one. (Setting this to 04-08 will make the diagonal generator also spawn the surrounded generator's bullets. Don't set this higher than 08.)"},{"address":"$02B0D9","length":"1 byte","beginsAt":176345,"endsAt":176345,"type":"Timer","descriptio":"Determines how often the surrounded/diagonal Bullet Bill generators fire. Multiply this by 2 to get the delay in frames."},{"address":"$02B0E0","length":"1 byte","beginsAt":176352,"endsAt":176352,"type":"Sound effect","descriptio":"SFX played by surrounded/diagonal Bullet Bill generators. Change to 00 to disable."},{"address":"$02B0E0","length":"1 byte","beginsAt":176352,"endsAt":176352,"type":"Sound effect","descriptio":"SFX played by Diagonal Bullet Bill generator. Change to 00 to disable."},{"address":"$02B0FA","length":"5 bytes. Ends at $02B0FE.","beginsAt":176378,"endsAt":176382,"type":"Sprite Misc.","descriptio":"Initial X position, within screen, of bullets spawned by surrounded Bullet Bill generator."},{"address":"$02B0FF","length":"4 bytes. Ends at $02B102.","beginsAt":176383,"endsAt":176386,"type":"Sprite Misc.","descriptio":"Initial X position, within screen, of bullets spawned by diagonal Bullet Bill generator."},{"address":"$02B103","length":"5 bytes. Ends at $02B107.","beginsAt":176387,"endsAt":176391,"type":"Sprite Misc.","descriptio":"Initial Y position, within screen, of bullets spawned by surrounded Bullet Bill generator."},{"address":"$02B108","length":"4 bytes. Ends at $02B10B.","beginsAt":176392,"endsAt":176395,"type":"Sprite Misc.","descriptio":"Initial Y position, within screen, of bullets spawned by diagonal Bullet Bill generator."},{"address":"$02B10C","length":"5 bytes. Ends at $02B110.","beginsAt":176396,"endsAt":176400,"type":"Sprite Misc.","descriptio":"Direction of bullets spawned by surrounded Bullet Bill generator.\n\n00 = right\n01 = left\n02 = up\n03 = down\n04 = up-right\n05 = down-right\n06 = down-left\n07 = up-left"},{"address":"$02B111","length":"4 bytes. Ends at $02B114.","beginsAt":176401,"endsAt":176404,"type":"Sprite Misc.","descriptio":"Direction of bullets spawned by diagonal Bullet Bill generator.\n\n00 = right\n01 = left\n02 = up\n03 = down\n04 = up-right\n05 = down-right\n06 = down-left\n07 = up-left"},{"address":"$02B11C","length":"1 byte","beginsAt":176412,"endsAt":176412,"type":"Sprite number","descriptio":"Sprite spawned by the surrounded/diagonal Bullet Bill generators."},{"address":"$02B15E","length":"1 byte","beginsAt":176478,"endsAt":176478,"type":"Misc.","descriptio":"Frequency of fish jumping up with the flying fish generator (set more bits to decrease the frequency, e.g. $5F, $FF)"},{"address":"$02B16E","length":"1 byte","beginsAt":176494,"endsAt":176494,"type":"Sprite number","descriptio":"Sprite spawned by Jumping Fish generator"},{"address":"$02B1CF","length":"1 byte","beginsAt":176591,"endsAt":176591,"type":"Sprite number","descriptio":"Sprite spawned by Super koopa generator"},{"address":"$02B21A","length":"1 byte","beginsAt":176666,"endsAt":176666,"type":"Sprite number","descriptio":"Sprite spawned by bubble generator"},{"address":"$02B28E","length":"1 byte","beginsAt":176782,"endsAt":176782,"type":"Sprite number","descriptio":"Sprite spawned by Dolphin generator"},{"address":"$02B2E9","length":"1 byte","beginsAt":176873,"endsAt":176873,"type":"Sprite number","descriptio":"Sprite spawned by eerie generator"},{"address":"$02B3F1","length":"1 byte","beginsAt":177137,"endsAt":177137,"type":"Sprite number","descriptio":"Sprite spawned by Torpedo Ted generator"},{"address":"$02B42E","length":"1 byte","beginsAt":177198,"endsAt":177198,"type":"Sprite number","descriptio":"Object that appears before Torpedo Ted is spawned"},{"address":"$02B46C","length":"1 byte","beginsAt":177260,"endsAt":177260,"type":"Timer","descriptio":"How often Bullet Bill shooters fire"},{"address":"$02B495","length":"2 bytes. Ends at $02B496.","beginsAt":177301,"endsAt":177302,"type":"ASM","descriptio":"Replace with 80 0A to make the Bullet Bill Shooter keep shooting even if Mario is standing next to the generator."},{"address":"$02B4A8","length":"1 byte","beginsAt":177320,"endsAt":177320,"type":"Sound effect","descriptio":"SFX played by Bullet Bill Shooter"},{"address":"$02B4B2","length":"1 byte","beginsAt":177330,"endsAt":177330,"type":"Sprite number","descriptio":"Sprite Spawned by bullet bill shooter"},{"address":"$02B51A","length":"12 bytes. Ends at $02B525.","beginsAt":177434,"endsAt":177445,"type":"Sprite subroutine (JSR)","descriptio":"Updates a bounce sprite's Y position without gravity (actually just changes the sprite index and JSRs to $02B526)."},{"address":"$02B526","length":"46 bytes. Ends at $02B553.","beginsAt":177446,"endsAt":177491,"type":"Sprite subroutine (JSR)","descriptio":"Updates a bounce sprite's X position without gravity."},{"address":"$02B554","length":"12 bytes. Ends at $02B55F.","beginsAt":177492,"endsAt":177503,"type":"Sprite subroutine (JSR)","descriptio":"The subroutine that updates an extended sprite's X position (without gravity)."},{"address":"$02B560","length":"46 bytes. Ends at $02B58D.","beginsAt":177504,"endsAt":177549,"type":"Sprite subroutine (JSR)","descriptio":"The subroutine that updates an extended sprite's Y position (without gravity)."},{"address":"$02B58E","length":"46 bytes. Ends at $02B5BB.","beginsAt":177550,"endsAt":177595,"type":"Sprite subroutine (JSR)","descriptio":"The subroutine that updates the Y position of the spinning coin coming from a ? block."},{"address":"$02B5BC","length":"12 bytes. Ends at $02B5C7.","beginsAt":177596,"endsAt":177607,"type":"Sprite subroutine (JSR)","descriptio":"The X speed subroutine for minor extended sprites. Actually just adds 12 to the sprite index and JSRs to the Y speed subroutine, just like the equivalent subroutine for normal sprites."},{"address":"$02B5C8","length":"36 bytes. Ends at $02B5EB.","beginsAt":177608,"endsAt":177643,"type":"Sprite subroutine (JSR)","descriptio":"The Y speed subroutine for minor extended sprites."},{"address":"$02B5EC","length":"68 bytes. Ends at $02B62F.","beginsAt":177644,"endsAt":177711,"type":"Empty","descriptio":"Unused data."},{"address":"$02B65F","length":"4 bytes. Ends at $02B662.","beginsAt":177759,"endsAt":177762,"type":"Misc.","descriptio":"X coordinates of Pokey animation"},{"address":"$02B663","length":"2 bytes. Ends at $02B664.","beginsAt":177763,"endsAt":177764,"type":"Misc.","descriptio":"Pokey's X speed (right, left)"},{"address":"$02B68D","length":"1 byte","beginsAt":177805,"endsAt":177805,"type":"Sprite tilemap related","descriptio":"Pokey's head after being eaten"},{"address":"$02B691","length":"1 byte","beginsAt":177809,"endsAt":177809,"type":"Sprite tilemap related","descriptio":"Pokey's Body after being eaten"},{"address":"$02B78C","length":"1 byte","beginsAt":178060,"endsAt":178060,"type":"Sprite tilemap related","descriptio":"Pokey's Body Tilemap"},{"address":"$02B78D","length":"1 byte","beginsAt":178061,"endsAt":178061,"type":"ASM","descriptio":"Change to 90 and Pokey's head will be his body, and the other way round"},{"address":"$02B790","length":"1 byte","beginsAt":178064,"endsAt":178064,"type":"Sprite tilemap related","descriptio":"Pokey's Head Tilemap"},{"address":"$02B795","length":"1 byte","beginsAt":178069,"endsAt":178069,"type":"Sprite tilemap related","descriptio":"pokey's palette/gfx page"},{"address":"$02B8B8","length":"2 bytes. Ends at $02B8B9.","beginsAt":178360,"endsAt":178361,"type":"Sprite Misc.","descriptio":"Max Speed Torpedo Ted can go. (Format = Right, Left)\n\nThe Left value must be over $7F while the Right value must be below $80."},{"address":"$02B8BA","length":"2 bytes. Ends at $02B8BB.","beginsAt":178362,"endsAt":178363,"type":"Sprite Misc.","descriptio":"How fast Torpedo Ted gains speed/accelerates until he reaches max speed. (Format = Right, Left)\n\nThe Left value must be over $7F while the Right value must be below $80."},{"address":"$02B8BF","length":"1 byte","beginsAt":178367,"endsAt":178367,"type":"Sprite Misc.","descriptio":"How many frames torpedo ted waits until he gains more speed.\n\n(This value is AND'd with the frame counter)"},{"address":"$02B92D","length":"1 byte","beginsAt":178477,"endsAt":178477,"type":"Sprite tilemap related","descriptio":"Tilemap: Torpedo Ted's face"},{"address":"$02B937","length":"1 byte","beginsAt":178487,"endsAt":178487,"type":"Sprite tilemap related","descriptio":"Tilemap: Torpedo Ted's Propeller Frame 1"},{"address":"$02B93F","length":"1 byte","beginsAt":178495,"endsAt":178495,"type":"Sprite tilemap related","descriptio":"Tilemap: Torpedo Ted's Propeller Frame 2"},{"address":"$02B943","length":"1 byte","beginsAt":178499,"endsAt":178499,"type":"Sprite tilemap related","descriptio":"Tilemap: Torpedo Ted's Propeller Frame 3"},{"address":"$02B9A4","length":"25 bytes. Ends at $02B9BC.","beginsAt":178596,"endsAt":178620,"type":"Sprite subroutine (JSL)","descriptio":"This generates a Map16 tile at the position of the sprite currently being processed. It can be accessed with a JSL, and A should be set to the value of $9C you wish to use."},{"address":"$02B9DA","length":"1 byte","beginsAt":178650,"endsAt":178650,"type":"Sprite number","descriptio":"Sprite to use for those changed by Silver P-Switch (the ones that change while on the screen)"},{"address":"$02B9EF","length":"1 byte","beginsAt":178671,"endsAt":178671,"type":"Palette","descriptio":"Palette to use for sprites changed by Silver P-Switch (on screen sprites only)"},{"address":"$02BAA8","length":"1 byte","beginsAt":178856,"endsAt":178856,"type":"Misc.","descriptio":"Lowest tile # that acts as a berry with sticking out the tongue"},{"address":"$02BAAC","length":"1 byte","beginsAt":178860,"endsAt":178860,"type":"Misc.","descriptio":"Highest tile # that acts as a berry plus one with sticking out the tongue"},{"address":"$02BAC6","length":"1 byte","beginsAt":178886,"endsAt":178886,"type":"Sprite number","descriptio":"Sprite that the berries are made from when swallowed"},{"address":"$02BB03","length":"1 byte","beginsAt":178947,"endsAt":178947,"type":"Misc.","descriptio":"Tile spawned from eating a berry (using tongue). Corresponds to a value in $7E:009C."},{"address":"$02BB17","length":"4 bytes. Ends at $02BB1A.","beginsAt":178967,"endsAt":178970,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Yoshi Wings"},{"address":"$02BB1B","length":"4 bytes. Ends at $02BB1E.","beginsAt":178971,"endsAt":178974,"type":"Sprite tilemap related","descriptio":"Palette/Gfx page/Priority/Flip of Yoshi Wing tiles"},{"address":"$02BB1F","length":"4 bytes. Ends at $02BB22.","beginsAt":178975,"endsAt":178978,"type":"Sprite tilemap related","descriptio":"Size of Yoshi Wing tiles"},{"address":"$02BC0E","length":"6 bytes. Ends at $02BC13.","beginsAt":179214,"endsAt":179219,"type":"Sprite tilemap related","descriptio":"Horizontal Dolphin Tilemap"},{"address":"$02BDA7","length":"12 bytes. Ends at $02BDB2.","beginsAt":179623,"endsAt":179634,"type":"Sprite Misc.","descriptio":"Code that handles erasing Spike Tops that go offscreen vertically. Set to [80 0A] (BRA $0A) to disable this behavior, however keep in mind that this means the sprites will be able to walk around the underside of your level."},{"address":"$02BE5E","length":"4 bytes. Ends at $02BE61.","beginsAt":179806,"endsAt":179809,"type":"Sprite tilemap related","descriptio":"Change from \"C9 02 D0 17\" to \"C9 01 F0 17\" to make Fuzzies/Sparkies to only use the latter's tilemap in the castle (01) sprite tileset, as opposed to using the sparky's tilemap in every sprite tileset apart from the mushroom (02)."},{"address":"$02BE6B","length":"1 byte","beginsAt":179819,"endsAt":179819,"type":"Sprite tilemap related","descriptio":"Ground-guided Fuzzball Tilemap"},{"address":"$02BE7A","length":"1 byte","beginsAt":179834,"endsAt":179834,"type":"Sprite tilemap related","descriptio":"Sparky Tilemap"},{"address":"$02BE95","length":"8 bytes. Ends at $02BE9C.","beginsAt":179861,"endsAt":179868,"type":"Sprite tilemap related","descriptio":"Hothead Tilemap"},{"address":"$02BF0B","length":"1 byte","beginsAt":179979,"endsAt":179979,"type":"Sprite tilemap related","descriptio":"Hothead's eyes frame 1"},{"address":"$02BF12","length":"1 byte","beginsAt":179986,"endsAt":179986,"type":"Sprite tilemap related","descriptio":"Hothead's eyes frame 2"},{"address":"$02BF53","length":"5 bytes. Ends at $02BF57.","beginsAt":180051,"endsAt":180055,"type":"Sprite tilemap related","descriptio":"Urchin YXPPCCCT properties, eyes and body. Order: Eyes, upper left body part, upper right, lower left, lower right."},{"address":"$02BF58","length":"4 bytes. Ends at $02BF5B.","beginsAt":180056,"endsAt":180059,"type":"Sprite tilemap related","descriptio":"Urchin's Body Tilemap"},{"address":"$02BFA3","length":"1 byte","beginsAt":180131,"endsAt":180131,"type":"Sprite tilemap related","descriptio":"Urchin's eyes frame 1"},{"address":"$02BFA9","length":"1 byte","beginsAt":180137,"endsAt":180137,"type":"Sprite tilemap related","descriptio":"Urchin's eyes frame 2"},{"address":"$02C0CF","length":"87 bytes. Ends at $02C125.","beginsAt":180431,"endsAt":180517,"type":"Subroutine (JSL)","descriptio":"(Unused) Z tile generation (Rip Van Fish Z tiles)."},{"address":"$02C0D9","length":"77 bytes. Ends at $02C125.","beginsAt":180441,"endsAt":180517,"type":"Sprite subroutine (JSL)","descriptio":"Rip Van Fish Z tiles generation routine"},{"address":"$02C1A6","length":"1 byte","beginsAt":180646,"endsAt":180646,"type":"Sprite number","descriptio":"Sprite Diggin' Chuck unearths"},{"address":"$02C29F","length":"1 byte","beginsAt":180895,"endsAt":180895,"type":"Misc.","descriptio":"1st type of block Chargin' Chuck can smash through, -0x100 (Throw Block)"},{"address":"$02C2A3","length":"1 byte","beginsAt":180899,"endsAt":180899,"type":"Misc.","descriptio":"2nd type of block Chuck can smash through, -0x100 (Turn Block)"},{"address":"$02C2BE","length":"1 byte","beginsAt":180926,"endsAt":180926,"type":"Misc.","descriptio":"What top row of blocks become when Chuck smashes through them"},{"address":"$02C2DB","length":"1 byte","beginsAt":180955,"endsAt":180955,"type":"Misc.","descriptio":"What bottom row of blocks become when Chuck smashes through them"},{"address":"$02C382","length":"1 byte","beginsAt":181122,"endsAt":181122,"type":"Sound effect","descriptio":"Whistling Chuck Sound Effect."},{"address":"$02C3B3","length":"4 bytes. Ends at $02C3B6.","beginsAt":181171,"endsAt":181174,"type":"Sprite Misc.","descriptio":"Timers for Pitchin' Chuck's throwing. This table is indexed by the initial sprite X position. The timers themselves are formatted thus: t = $3F + $20n, where t is the timer value and n is the number of baseballs thrown in a row. So the sprite will throw 2, 4, 6, or 5 baseballs depending on its X position. However, this applies only when it is on the ground; if it is in the air, then the timing is different."},{"address":"$02C460","length":"2 bytes. Ends at $02C461.","beginsAt":181344,"endsAt":181345,"type":"Misc.","descriptio":"Starting X-coordinate of baseball when thrown by Chuck (facing right, facing left)"},{"address":"$02C464","length":"2 bytes. Ends at $02C465.","beginsAt":181348,"endsAt":181349,"type":"Misc.","descriptio":"X speed of baseball when thrown by Chuck (right, left)"},{"address":"$02C47A","length":"1 byte","beginsAt":181370,"endsAt":181370,"type":"Sprite number","descriptio":"Object that Pitchin' Chuck pitches"},{"address":"$02C5AF","length":"1 byte","beginsAt":181679,"endsAt":181679,"type":"Sound effect","descriptio":"SFX played by Splitin' Chuck"},{"address":"$02C5C8","length":"1 byte","beginsAt":181704,"endsAt":181704,"type":"Sprite number","descriptio":"Sprite spawned by Splittin' Chuck"},{"address":"$02C708","length":"1 byte","beginsAt":182024,"endsAt":182024,"type":"Sound effect","descriptio":"Running Chuck sound"},{"address":"$02C7BE","length":"1 byte","beginsAt":182206,"endsAt":182206,"type":"Misc.","descriptio":"Determines the number of points received for defeating a Chuck by stomping or with a star. See $02ACE5 for a list of possible values.\n\n[Note: That list at $02ACE5 needs to have FB = Nothing, FC = 10, FD = 20, FE = 40, and FF = 80 added to it.]"},{"address":"$02C7E2","length":"6 bytes. Ends at $02C7E7.","beginsAt":182242,"endsAt":182247,"type":"ASM","descriptio":"change from [B5 C2 C9 03 F0 27] to [EA EA EA EA EA EA] to remove the stomp immunity chucks get briefly when taking a stomp."},{"address":"$02C7E8","length":"1 byte","beginsAt":182248,"endsAt":182248,"type":"Misc.","descriptio":"Set to BD for unlimited Chargin Chuck stomping hp"},{"address":"$02C7EF","length":"1 byte","beginsAt":182255,"endsAt":182255,"type":"Misc.","descriptio":"Chargin Chuck stomping hp"},{"address":"$02C7F7","length":"1 byte","beginsAt":182263,"endsAt":182263,"type":"Sound effect","descriptio":"Hitting Chuck sound"},{"address":"$02C87E","length":"7 bytes. Ends at $02C884.","beginsAt":182398,"endsAt":182404,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Chuck Head(All)"},{"address":"$02C98B","length":"51 bytes. Ends at $02C9BD.","beginsAt":182667,"endsAt":182717,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Chuck Body(All)"},{"address":"$02CA97","length":"2 bytes. Ends at $02CA98.","beginsAt":182935,"endsAt":182936,"type":"Sprite tilemap related","descriptio":"Clappin' Chuck's hand tiles (raised, clapping)"},{"address":"$02CAFA","length":"2 bytes. Ends at $02CAFB.","beginsAt":183034,"endsAt":183035,"type":"Palette","descriptio":"[47 07] Change to 40 00 to be able to change the palette of Chargin' Chucks arm with Tweaker/etc. (USE WITH $02CB2E)"},{"address":"$02CB17","length":"1 byte","beginsAt":183063,"endsAt":183063,"type":"Sprite tilemap related","descriptio":"Tile used by Chargin' Chuck's arm"},{"address":"$02CB2E","length":"1 byte","beginsAt":183086,"endsAt":183086,"type":"Palette","descriptio":"[64] Change to 08 to be able to change the palette of Chargin' Chucks arm with Tweaker/etc.\n(USE WITH $02CAFA)"},{"address":"$02CB7C","length":"1 byte","beginsAt":183164,"endsAt":183164,"type":"Sprite tilemap related","descriptio":"Tile to use for the baseball when it's in Pitchin' Chuck's hand"},{"address":"$02CB81","length":"1 byte","beginsAt":183169,"endsAt":183169,"type":"Palette","descriptio":"Palette/GFX page for baseball when it's in Pitchin' Chuck's hand"},{"address":"$02CB91","length":"1 byte","beginsAt":183185,"endsAt":183185,"type":"Sprite tilemap related","descriptio":"Change from [04] to [0C] to fix a tilemap error in part of the Diggin' Chuck's dig animation that gives him a dislocated shoulder while facing left."},{"address":"$02CB9B","length":"3 bytes. Ends at $02CB9D.","beginsAt":183195,"endsAt":183197,"type":"Sprite tilemap related","descriptio":"Diggin' Chuck's Shoulder and Shovel Tiles"},{"address":"$02CCB1","length":"4 bytes. Ends at $02CCB4.","beginsAt":183473,"endsAt":183476,"type":"Misc.","descriptio":"Unused cage wings: X offsets"},{"address":"$02CCB5","length":"4 bytes. Ends at $02CCB8.","beginsAt":183477,"endsAt":183480,"type":"Misc.","descriptio":"Unused cage wings: Y offsets"},{"address":"$02CCFC","length":"1 byte","beginsAt":183548,"endsAt":183548,"type":"Sprite tilemap related","descriptio":"Unused cage wings: Extended wing, top tile"},{"address":"$02CD00","length":"1 byte","beginsAt":183552,"endsAt":183552,"type":"Sprite tilemap related","descriptio":"Unused cage wings: Closed wing, top tile"},{"address":"$02CD05","length":"1 byte","beginsAt":183557,"endsAt":183557,"type":"Sprite tilemap related","descriptio":"Unused cage wings: Extended wing, bottom tile"},{"address":"$02CD09","length":"1 byte","beginsAt":183561,"endsAt":183561,"type":"Sprite tilemap related","descriptio":"Unused cage wings: Closed wing, bottom tile"},{"address":"$02CD0E","length":"1 byte","beginsAt":183566,"endsAt":183566,"type":"Sprite tilemap related","descriptio":"Unused cage wings: Attribute byte #1 (X flip, Y flip, priority, palette, MSB of tile num.)"},{"address":"$02CD1A","length":"1 byte","beginsAt":183578,"endsAt":183578,"type":"Sprite tilemap related","descriptio":"Unused cage wings: Attribute byte #2 (size, MSB of X pos.)"},{"address":"$02CD55","length":"4 bytes. Ends at $02CD58.","beginsAt":183637,"endsAt":183640,"type":"Palette","descriptio":"YXPPCCCT data for the (flattened) switch palaces (level), indexed by type. Order is green, yellow, blue, red."},{"address":"$02CD61","length":"1 byte","beginsAt":183649,"endsAt":183649,"type":"Misc.","descriptio":"Tile spawned from stepping on big ! switch"},{"address":"$02CEE4","length":"1 byte","beginsAt":184036,"endsAt":184036,"type":"Misc.","descriptio":"How many pieces make up the pea bouncer"},{"address":"$02CF2C","length":"1 byte","beginsAt":184108,"endsAt":184108,"type":"Sprite tilemap related","descriptio":"Tile of pea bouncer"},{"address":"$02CF33","length":"1 byte","beginsAt":184115,"endsAt":184115,"type":"Sprite tilemap related","descriptio":"Attributes of pea bouncer tile"},{"address":"$02CFFE","length":"5 bytes. Ends at $02D002.","beginsAt":184318,"endsAt":184322,"type":"Sprite physics","descriptio":"Bounciness of each part of pea bouncer"},{"address":"$02D1C3","length":"1 byte","beginsAt":184771,"endsAt":184771,"type":"Misc.","descriptio":"Lowest tile # that acts as a berry without sticking out the tongue"},{"address":"$02D1C7","length":"1 byte","beginsAt":184775,"endsAt":184775,"type":"Misc.","descriptio":"Highest tile # that acts as a berry plus one without sticking out the tongue"},{"address":"$02D208","length":"1 byte","beginsAt":184840,"endsAt":184840,"type":"Misc.","descriptio":"Tile spawned from eating a berry (w/o using tongue). Corresponds to a value in $7E:009C."},{"address":"$02D212","length":"1 byte","beginsAt":184850,"endsAt":184850,"type":"Sprite physics","descriptio":"[10] {+16} Horizontal speed limit when pressing Right from the Control Pad, when Mario uses the P-balloon or rides the Lakitu cloud.\n\nThe speed is a signed integer. Positive speeds (00..7F) go right. High speeds might cause glitches, like allowing Mario to fly inside solid blocks."},{"address":"$02D213","length":"1 byte","beginsAt":184851,"endsAt":184851,"type":"Sprite physics","descriptio":"[F0] {-16} Horizontal speed limit when pressing Left from the Control Pad, when Mario uses the P-balloon or rides the Lakitu cloud.\n\nThe speed is a signed integer. Negative values (80..FF) go left."},{"address":"$02D248","length":"1 byte","beginsAt":184904,"endsAt":184904,"type":"Sprite physics","descriptio":"[00] {0} Vertical speed when releasing Up and Down from the Control Pad, while Mario rides the Lakitu cloud.\n\nThis is a signed integer. Positive speeds (01..7F) go down. Negative speeds (80..FF) go up.\n\nAfter using $02:D248, $02:D256 or $02:D25C, the game adds a slight, varying downward speed to the Lakitu cloud. So if you leave [00] in $02:D248, then the cloud will sink slightly while Mario rides the cloud."},{"address":"$02D256","length":"1 byte","beginsAt":184918,"endsAt":184918,"type":"Sprite physics","descriptio":"[10] {+16} Vertical speed limit when pressing Down from the Control Pad, while Mario rides the Lakitu cloud."},{"address":"$02D25C","length":"1 byte","beginsAt":184924,"endsAt":184924,"type":"Sprite physics","descriptio":"[F0] {-16} Vertical speed limit when pressing Up from the Control Pad, while Mario rides the Lakitu cloud."},{"address":"$02D260","length":"1 byte","beginsAt":184928,"endsAt":184928,"type":"Sprite physics","descriptio":"[F8] {-8} Vertical speed when releasing Up and Down from the Control Pad, while Mario uses the P-balloon. Change to [00] {0}, to prevent that Mario floats up gradually, so that Mario can float in place."},{"address":"$02D268","length":"1 byte","beginsAt":184936,"endsAt":184936,"type":"Sprite physics","descriptio":"[F0] {-16} Vertical speed limit when pressing Up from the Control Pad, while Mario uses the P-balloon."},{"address":"$02D26E","length":"1 byte","beginsAt":184942,"endsAt":184942,"type":"Sprite physics","descriptio":"[08] {+8} Vertical speed limit when pressing Down from the Control Pad, while Mario uses the P-balloon."},{"address":"$02D421","length":"1 byte","beginsAt":185377,"endsAt":185377,"type":"ASM","descriptio":"Change from 60 to 6B to fix the glitch where trying to disable the layer 3 smasher with generator D2 will cause the game to crash."},{"address":"$02D51E","length":"97 bytes. Ends at $02D57E.","beginsAt":185630,"endsAt":185726,"type":"Empty","descriptio":"Unused data."},{"address":"$02D599","length":"1 byte","beginsAt":185753,"endsAt":185753,"type":"Misc.","descriptio":"Horizontal speed of Banzai Bill"},{"address":"$02D5A4","length":"16 bytes. Ends at $02D5B3.","beginsAt":185764,"endsAt":185779,"type":"Sprite tilemap related","descriptio":"X offsets of Banzai Bill's tiles."},{"address":"$02D5B4","length":"16 bytes. Ends at $02D5C3.","beginsAt":185780,"endsAt":185795,"type":"Sprite tilemap related","descriptio":"Y offsets of Banzai Bill's tiles."},{"address":"$02D5C4","length":"16 bytes. Ends at $02D5D3.","beginsAt":185796,"endsAt":185811,"type":"Sprite tilemap related","descriptio":"TTTTTTTT of Banzai Bill's tiles."},{"address":"$02D5D4","length":"16 bytes. Ends at $02D5E3.","beginsAt":185812,"endsAt":185827,"type":"Sprite tilemap related","descriptio":"YXPPCCCT of Banzai Bill's tiles."},{"address":"$02D7A4","length":"1 byte","beginsAt":186276,"endsAt":186276,"type":"Sprite tilemap related","descriptio":"Tilemap: Ball 'n' Chain's chainlink"},{"address":"$02D7AA","length":"1 byte","beginsAt":186282,"endsAt":186282,"type":"Sprite tilemap related","descriptio":"Tilemap: Chain used by platform (Sprites A3 and E0)"},{"address":"$02D7BF","length":"1 byte","beginsAt":186303,"endsAt":186303,"type":"Sprite tilemap related","descriptio":"Palette of chain (Ball 'n' Chain & rotating grey platform)"},{"address":"$02D800","length":"4 bytes. Ends at $02D803.","beginsAt":186368,"endsAt":186371,"type":"Sprite tilemap related","descriptio":"Tilemap: Ball 'n' Chain's Spiked Ball (Changing this will freeze the game!)\nIt's actually a routine which is used to waste time (6 NOPs + RTS) for the math registers, but Nintendo uses it for the tilemap, too. A typical example of executable tables."},{"address":"$02D82C","length":"2 bytes. Ends at $02D82D.","beginsAt":186412,"endsAt":186413,"type":"Pointer","descriptio":"Change from 00 D8 to E7 FF in order to move the location of Ball 'n' Chain's tilemap to address $02FFE7."},{"address":"$02D844","length":"4 bytes. Ends at $02D847.","beginsAt":186436,"endsAt":186439,"type":"Sprite tilemap related","descriptio":"Wooden Platform on Chain Tilemap (Sprites A3 and E0)"},{"address":"$02D863","length":"1 byte","beginsAt":186467,"endsAt":186467,"type":"Sprite tilemap related","descriptio":"Palette of rotating grey platform"},{"address":"$02D8A1","length":"8 bytes. Ends at $02D8A8.","beginsAt":186529,"endsAt":186536,"type":"Sprite tilemap related","descriptio":"Bubble Sprites Tile Table (2 animation frames with 2 bytes in them. Order: Goomba, Bob-Omb, Cheep-Cheep, Mushroom)"},{"address":"$02D8A9","length":"16 bytes. Ends at $02D8B8.","beginsAt":186537,"endsAt":186552,"type":"Sprite tilemap related","descriptio":"Palette/GFX Page Table of Sprites in bubbles (Order: Goomba, Bob-Omb, Cheep-Cheep, Mushroom)"},{"address":"$02D919","length":"1 byte","beginsAt":186649,"endsAt":186649,"type":"Sound effect","descriptio":"Bubble pop sound"},{"address":"$02D9A1","length":"4 bytes. Ends at $02D9A4.","beginsAt":186785,"endsAt":186788,"type":"Sprite number","descriptio":"Sprites spawned from Bubbles (Goomba, Bob-omb, Cheep-Cheep, Mushroom)"},{"address":"$02D9A5","length":"15 bytes. Ends at $02D9B3.","beginsAt":186789,"endsAt":186803,"type":"Sprite tilemap related","descriptio":"X Placement of Bubble Tiles, 3 animation frames, each 5 bytes"},{"address":"$02D9B4","length":"15 bytes. Ends at $02D9C2.","beginsAt":186804,"endsAt":186818,"type":"Sprite tilemap related","descriptio":"Y Placement of Bubble Tiles, 3 animation frames, each 5 bytes"},{"address":"$02D9C3","length":"5 bytes. Ends at $02D9C7.","beginsAt":186819,"endsAt":186823,"type":"Sprite tilemap related","descriptio":"Bubble Tile Table"},{"address":"$02D9C8","length":"5 bytes. Ends at $02D9CC.","beginsAt":186824,"endsAt":186828,"type":"Sprite tilemap related","descriptio":"Palette/GFX Page of Bubble Tiles"},{"address":"$02D9CD","length":"5 bytes. Ends at $02D9D1.","beginsAt":186829,"endsAt":186833,"type":"Sprite tilemap related","descriptio":"Bubble Tile Size Table"},{"address":"$02DA60","length":"4 bytes. Ends at $02DA63.","beginsAt":186976,"endsAt":186979,"type":"Sprite Misc.","descriptio":"[C9 02 D0 0A] (CMP #$02 BNE $0A) Change to [C9 08 B0 0A] (CMP #$08 BCS $0A) to fix the bug where hammer brothers will throw hammers if tossed into lava."},{"address":"$02DA67","length":"7 bytes. Ends at $02DA6D.","beginsAt":186983,"endsAt":186989,"type":"Misc.","descriptio":"How often Amazing Flyin' Hammer Brother throws hammers on each submap."},{"address":"$02DA8E","length":"1 byte","beginsAt":187022,"endsAt":187022,"type":"Sprite Misc.","descriptio":"Submap in which the Hammer Bro. throws hammers half as fast. By default: 00 (main map)."},{"address":"$02DA94","length":"3 bytes. Ends at $02DA96.","beginsAt":187028,"endsAt":187030,"type":"ASM","descriptio":"Set to EA EA EA to make Amazing Flyin' Hammer Brothers stop turning around."},{"address":"$02DAC4","length":"1 byte","beginsAt":187076,"endsAt":187076,"type":"Sprite number","descriptio":"Extended Sprite thrown by Amazing Flyin' Hammer Brother"},{"address":"$02DAF1","length":"8 bytes. Ends at $02DAF8.","beginsAt":187121,"endsAt":187128,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Amazing Flyin' Hammer Brother"},{"address":"$02DB1F","length":"1 byte","beginsAt":187167,"endsAt":187167,"type":"Palette","descriptio":"Amazing Flyin' Hammer Brothers palette (37 by default, change the sprite's palette by changing the second digit - \"7\" - to a number 0-F)"},{"address":"$02DBD7","length":"3 bytes. Ends at $02DBD9.","beginsAt":187351,"endsAt":187353,"type":"ASM","descriptio":"Set to EA EA EA to disable Amazing Flyin' Hammer Brothers platform vertical movement"},{"address":"$02DBDA","length":"3 bytes. Ends at $02DBDC.","beginsAt":187354,"endsAt":187356,"type":"ASM","descriptio":"Set to EA EA EA to disable Amazing Flyin' Hammer Brothers platform horizontal movement"},{"address":"$02DC1F","length":"8 bytes. Ends at $02DC26.","beginsAt":187423,"endsAt":187430,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Amazing Flyin' Hammer Brother Platform"},{"address":"$02DC27","length":"8 bytes. Ends at $02DC2E.","beginsAt":187431,"endsAt":187438,"type":"Sprite tilemap related","descriptio":"Palette/GFX Page of Amazing Flyin' Hammer Brother Platform"},{"address":"$02DD65","length":"1 byte","beginsAt":187749,"endsAt":187749,"type":"Sound effect","descriptio":"SFX played by Sumo Brother"},{"address":"$02DD96","length":"1 byte","beginsAt":187798,"endsAt":187798,"type":"Sprite number","descriptio":"Sprite spawned by Sumo Brother"},{"address":"$02DE0E","length":"8 bytes. Ends at $02DE15.","beginsAt":187918,"endsAt":187925,"type":"Sprite tilemap related","descriptio":"Sumo Bros Tilemap (Head, Body Arms Up, Head, Body Arms Down)"},{"address":"$02DE1A","length":"4 bytes. Ends at $02DE1D.","beginsAt":187930,"endsAt":187933,"type":"Sprite tilemap related","descriptio":"Sumo Bros Tilemap (Head, Head, Body Stomp)"},{"address":"$02DE1E","length":"8 bytes. Ends at $02DE25.","beginsAt":187934,"endsAt":187941,"type":"Sprite tilemap related","descriptio":"Sumo Bros Tilemap (Head, Head, Body Lift Leg, Head Head, Body Lift Leg)"},{"address":"$02DE85","length":"1 byte","beginsAt":188037,"endsAt":188037,"type":"Sprite tilemap related","descriptio":"Sumo Bros' palette/GFX page"},{"address":"$02DEB6","length":"1 byte","beginsAt":188086,"endsAt":188086,"type":"Misc.","descriptio":"Y speed of Sumo Bros' lightning bolt"},{"address":"$02E008","length":"3 bytes. Ends at $02E00A.","beginsAt":188424,"endsAt":188426,"type":"Sprite tilemap related","descriptio":"Volcano Lotus: Top Tiles"},{"address":"$02E012","length":"1 byte","beginsAt":188434,"endsAt":188434,"type":"Sprite tilemap related","descriptio":"Volcano Lotus: Bottom"},{"address":"$02E056","length":"1 byte","beginsAt":188502,"endsAt":188502,"type":"Sprite tilemap related","descriptio":"Palette/gfx page of Frame 3 of Volcano Lotus's top"},{"address":"$02E05A","length":"1 byte","beginsAt":188506,"endsAt":188506,"type":"Sprite tilemap related","descriptio":"Palette/gfx page of Frames 1 and 2 of Volcano Lotus's top"},{"address":"$02E091","length":"1 byte","beginsAt":188561,"endsAt":188561,"type":"Sprite number","descriptio":"Extended Sprite used by Volcano Lotus"},{"address":"$02E10E","length":"1 byte","beginsAt":188686,"endsAt":188686,"type":"Palette","descriptio":"Palette of Jumping Piranha Plant leaves"},{"address":"$02E1CE","length":"1 byte","beginsAt":188878,"endsAt":188878,"type":"Sprite number","descriptio":"The 2 objects that the fire-shooting Piranha Plant spits"},{"address":"$02E2D6","length":"1 byte","beginsAt":189142,"endsAt":189142,"type":"Misc.","descriptio":"Tile spawned by Directional Coin sprite"},{"address":"$02E372","length":"16 bytes. Ends at $02E381.","beginsAt":189298,"endsAt":189313,"type":"Sprite tilemap related","descriptio":"Large Green Bubble Tilemap"},{"address":"$02E520","length":"4 bytes. Ends at $02E523.","beginsAt":189728,"endsAt":189731,"type":"Misc.","descriptio":"Tiles left behind by mushroom scale platforms (in order of left platform sinking; rising, right platform rising; sinking)"},{"address":"$02E599","length":"1 byte","beginsAt":189849,"endsAt":189849,"type":"Sprite tilemap related","descriptio":"Mushroom Scale Platform Tile (mirrored for right side)"},{"address":"$02E5C7","length":"1 byte","beginsAt":189895,"endsAt":189895,"type":"Sprite physics","descriptio":"Rightward speed of the moving Ghost House hole."},{"address":"$02E5D0","length":"1 byte","beginsAt":189904,"endsAt":189904,"type":"Sprite physics","descriptio":"Leftward speed of the moving Ghost House hole."},{"address":"$02E66A","length":"4 bytes. Ends at $02E66D.","beginsAt":190058,"endsAt":190061,"type":"Sprite tilemap related","descriptio":"Ghost House Moving Hole Tilemap"},{"address":"$02E6A8","length":"1 byte","beginsAt":190120,"endsAt":190120,"type":"Sprite tilemap related","descriptio":"Fishin' Lakitu's rod"},{"address":"$02E6AD","length":"1 byte","beginsAt":190125,"endsAt":190125,"type":"Sprite tilemap related","descriptio":"Tile used by Fishin' Lakitu's 1up bait"},{"address":"$02E6B2","length":"1 byte","beginsAt":190130,"endsAt":190130,"type":"Sprite tilemap related","descriptio":"Fishing Pole's palette"},{"address":"$02E6B7","length":"1 byte","beginsAt":190135,"endsAt":190135,"type":"Sprite tilemap related","descriptio":"1up Bait Palette"},{"address":"$02E707","length":"1 byte","beginsAt":190215,"endsAt":190215,"type":"Sprite tilemap related","descriptio":"Tile used by line on Fishin' Lakitu's rod"},{"address":"$02E70C","length":"1 byte","beginsAt":190220,"endsAt":190220,"type":"Sprite tilemap related","descriptio":"Fishing Line Palette"},{"address":"$02E83D","length":"8 bytes. Ends at $02E844.","beginsAt":190525,"endsAt":190532,"type":"Misc.","descriptio":"Tiles left behind by the left (first 4 bytes) and the right (next 4 bytes) side of the Growing/Shrinking Pipe, in the format of $7E009C. The order of the bytes corresponds to the pipe waiting at the bottom, growing, waiting at the top, and shrinking."},{"address":"$02E91A","length":"1 byte","beginsAt":190746,"endsAt":190746,"type":"Sprite tilemap related","descriptio":"Left tile from the Growing/shrinking pipe end"},{"address":"$02E91F","length":"1 byte","beginsAt":190751,"endsAt":190751,"type":"Sprite tilemap related","descriptio":"Right tile from the Growing/shrinking pipe end"},{"address":"$02E99B","length":"1 byte","beginsAt":190875,"endsAt":190875,"type":"Sprite physics","descriptio":"Rising speed of Pipe Lakitu"},{"address":"$02E9E3","length":"1 byte","beginsAt":190947,"endsAt":190947,"type":"Sprite physics","descriptio":"Sinking speed of Pipe Lakitu"},{"address":"$02E9E6","length":"6 bytes. Ends at $02E9EB.","beginsAt":190950,"endsAt":190955,"type":"Sprite tilemap related","descriptio":"Pipe-Dwelling Lakitu Tilemap"},{"address":"$02EA1B","length":"1 byte","beginsAt":191003,"endsAt":191003,"type":"Sprite tilemap related","descriptio":"YXPPCCCT properties (Palette/GFX page/Properties) of Pipe Lakitu."},{"address":"$02EAF2","length":"4 bytes. Ends at $02EAF5.","beginsAt":191218,"endsAt":191221,"type":"ASM","descriptio":"Change to EA EA EA EA to stop Super Koopas from spawning feathers. (In conjunction with $02EB19)"},{"address":"$02EAFE","length":"1 byte","beginsAt":191230,"endsAt":191230,"type":"Sprite number","descriptio":"Sprite spawned by Super Koopa when stomped (feather)"},{"address":"$02EB19","length":"4 bytes. Ends at $02EB1C.","beginsAt":191257,"endsAt":191260,"type":"ASM","descriptio":"Change to EA EA EA EA to prevent Super Koopas from spawning feathers (In conjuction with $02EAF2)"},{"address":"$02EC72","length":"28 bytes. Ends at $02EC8D.","beginsAt":191602,"endsAt":191629,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Super koopa"},{"address":"$02EC96","length":"36 bytes. Ends at $02ECB9.","beginsAt":191638,"endsAt":191673,"type":"Sprite tilemap related","descriptio":"Partial data for the YXPPCCCT of Super Koopa. Bit 1 is used to determine whether the tile is part of the Koopa (0) or cape (1). If it is a cape tile, then the CCC bits should not be used; edit $02ED39 and $02ED40 instead.\n\nEdit both $02ECA9 and $02ECAD from 00 to 01 to fix garbage tiles when a stomped left-flying Super Koopa is falling down."},{"address":"$02ED39","length":"2 bytes. Ends at $02ED3A.","beginsAt":191801,"endsAt":191802,"type":"Palette","descriptio":"Partial data for the YXPPCCCT of the flashing Super Koopa's cape. Specifically, these are the CCC bits (palette)."},{"address":"$02ED40","length":"1 byte","beginsAt":191808,"endsAt":191808,"type":"Palette","descriptio":"Partial data of the YXPPCCCT for the red/yellow Super Koopa's cape. Specificially, these are the CCC bits (palette) of the yellow cape; the red cape comes from this times 2."},{"address":"$02ED9F","length":"1 byte","beginsAt":191903,"endsAt":191903,"type":"Sprite number","descriptio":"Sprite that the 'group of floating skulls' is made from"},{"address":"$02EE04","length":"1 byte","beginsAt":192004,"endsAt":192004,"type":"Sprite tilemap related","descriptio":"Floating Skull tile (frame 1)"},{"address":"$02EE08","length":"1 byte","beginsAt":192008,"endsAt":192008,"type":"Sprite tilemap related","descriptio":"Floating Skull tile (frame 2)"},{"address":"$02EE62","length":"1 byte","beginsAt":192098,"endsAt":192098,"type":"Sprite physics","descriptio":"[0C] Speed of the floating skulls."},{"address":"$02EF16","length":"1 byte","beginsAt":192278,"endsAt":192278,"type":"Sprite physics","descriptio":"X-speed of the coin game cloud (When Yoshi eats two pink berries)"},{"address":"$02EF2E","length":"1 byte","beginsAt":192302,"endsAt":192302,"type":"Sprite tilemap related","descriptio":"What tile the coin game cloud uses"},{"address":"$02EF49","length":"1 byte","beginsAt":192329,"endsAt":192329,"type":"Sprite tilemap related","descriptio":"X-position of the face on the coin game cloud"},{"address":"$02EF51","length":"1 byte","beginsAt":192337,"endsAt":192337,"type":"Sprite tilemap related","descriptio":"Y-position of the coin game cloud face"},{"address":"$02EF56","length":"1 byte","beginsAt":192342,"endsAt":192342,"type":"Sprite tilemap related","descriptio":"Tile to use for the face of the cloud game."},{"address":"$02EF5B","length":"1 byte","beginsAt":192347,"endsAt":192347,"type":"Sprite tilemap related","descriptio":"Cloud's face palette"},{"address":"$02EF81","length":"1 byte","beginsAt":192385,"endsAt":192385,"type":"Sprite number","descriptio":"Sprite that is generated when all of the Coin Game Cloud coins are collected"},{"address":"$02EFBD","length":"1 byte","beginsAt":192445,"endsAt":192445,"type":"Sprite number","descriptio":"Object that the Coin Game Cloud drops"},{"address":"$02F031","length":"4 bytes. Ends at $02F034.","beginsAt":192561,"endsAt":192564,"type":"Sprite physics","descriptio":"Wiggler speed. First 2 bytes: normal speed. Next 2: mad speed"},{"address":"$02F04D","length":"1 byte","beginsAt":192589,"endsAt":192589,"type":"Palette","descriptio":"The palette used by Wiggler when he is angry. (Default: 08.) YXPPCCCT."},{"address":"$02F051","length":"1 byte","beginsAt":192593,"endsAt":192593,"type":"Misc.","descriptio":"Wiggler's Palette cycling sequence\n00=Palette 00\n02=Palettes 00,02\n04=Palettes 00,04\n06=Palettes 00,02,04,06\n08=Palettes 00,08\n0A=Palettes 00,02,08,0A\n0C=Palettes 00,04,08,0C\n0E=All palettes"},{"address":"$02F058","length":"1 byte","beginsAt":192600,"endsAt":192600,"type":"Misc.","descriptio":"Result of Wiggler's Palette change?"},{"address":"$02F10C","length":"4 bytes. Ends at $02F10F.","beginsAt":192780,"endsAt":192783,"type":"Sprite tilemap related","descriptio":"Wiggler's Body Tilemap"},{"address":"$02F16E","length":"1 byte","beginsAt":192878,"endsAt":192878,"type":"Sprite tilemap related","descriptio":"Wiggler's Head"},{"address":"$02F19A","length":"1 byte","beginsAt":192922,"endsAt":192922,"type":"Misc.","descriptio":"How many segments Wiggler has"},{"address":"$02F1B1","length":"2 bytes. Ends at $02F1B2.","beginsAt":192945,"endsAt":192946,"type":"Pointer","descriptio":"Pointer to use for X placement of Wiggler's angry eyes tile"},{"address":"$02F1BE","length":"1 byte","beginsAt":192958,"endsAt":192958,"type":"Sprite tilemap related","descriptio":"Wiggler's angry eyes tile"},{"address":"$02F1DF","length":"1 byte","beginsAt":192991,"endsAt":192991,"type":"Misc.","descriptio":"X-coord of Wiggler's flower"},{"address":"$02F1E4","length":"1 byte","beginsAt":192996,"endsAt":192996,"type":"Sprite tilemap related","descriptio":"Tile used by Wiggler's Flower (when on its head)"},{"address":"$02F1EE","length":"1 byte","beginsAt":193006,"endsAt":193006,"type":"Palette","descriptio":"Palette of Wiggler's flower"},{"address":"$02F1F7","length":"1 byte","beginsAt":193015,"endsAt":193015,"type":"Misc.","descriptio":"Size of Wiggler's flower/angry eyes tile"},{"address":"$02F26C","length":"1 byte","beginsAt":193132,"endsAt":193132,"type":"Sound effect","descriptio":"SFX that comes up when Mario stomps a Wiggler"},{"address":"$02F2D3","length":"2 bytes. Ends at $02F2D4.","beginsAt":193235,"endsAt":193236,"type":"Misc.","descriptio":"X placement of flower tile on Wiggler's head (1 byte facing right, 1 byte facing left)"},{"address":"$02F2D5","length":"2 bytes. Ends at $02F2D6.","beginsAt":193237,"endsAt":193238,"type":"Misc.","descriptio":"X placement of Wiggler's angry eyes tile (1 byte facing right, 1 byte facing left)"},{"address":"$02F2E3","length":"1 byte","beginsAt":193251,"endsAt":193251,"type":"Sprite number","descriptio":"Object that falls off of Wiggler when stomped"},{"address":"$02F354","length":"1 byte","beginsAt":193364,"endsAt":193364,"type":"Sprite physics","descriptio":"Y position that Yoshi's House birds (sprite 8A) fall to after hopping. This should be set to 8 pixels above the height of the platform the birds \"stand\" on."},{"address":"$02F3DB","length":"5 bytes. Ends at $02F3DF.","beginsAt":193499,"endsAt":193503,"type":"Sprite tilemap related","descriptio":"Yoshi's House Birds Tilemap"},{"address":"$02F3E0","length":"2 bytes. Ends at $02F3E1.","beginsAt":193504,"endsAt":193505,"type":"Sprite tilemap related","descriptio":"Flip of birds' tiles (right, left)"},{"address":"$02F3E2","length":"4 bytes. Ends at $02F3E5.","beginsAt":193506,"endsAt":193509,"type":"Palette","descriptio":"Palettes of hopping birds"},{"address":"$02F4AF","length":"1 byte","beginsAt":193711,"endsAt":193711,"type":"Sprite tilemap related","descriptio":"Tile used by Smoke from Yoshi's House fireplace"},{"address":"$02F4E7","length":"4 bytes. Ends at $02F4EA.","beginsAt":193767,"endsAt":193770,"type":"Sprite tilemap related","descriptio":"Tilemap of flame in Yoshi's House fireplace"},{"address":"$02F4F3","length":"1 byte","beginsAt":193779,"endsAt":193779,"type":"Misc.","descriptio":"X-coords of flame tiles"},{"address":"$02F4FB","length":"1 byte","beginsAt":193787,"endsAt":193787,"type":"Misc.","descriptio":"Y-coord of flame top"},{"address":"$02F500","length":"1 byte","beginsAt":193792,"endsAt":193792,"type":"Misc.","descriptio":"Y-coord of flame bottom"},{"address":"$02F529","length":"1 byte","beginsAt":193833,"endsAt":193833,"type":"Sprite tilemap related","descriptio":"Fireplace flame palette"},{"address":"$02F554","length":"1 byte","beginsAt":193876,"endsAt":193876,"type":"Sprite number","descriptio":"Sprite spawned from the fireplace that the Side Exit Enable sprite uses"},{"address":"$02F5BC","length":"10 bytes. Ends at $02F5C5.","beginsAt":193980,"endsAt":193989,"type":"Sprite tilemap related","descriptio":"Ghost House Exit Door tilemap"},{"address":"$02F629","length":"8 bytes. Ends at $02F630.","beginsAt":194089,"endsAt":194096,"type":"Sprite tilemap related","descriptio":"No Yoshi Signpost Tilemap"},{"address":"$02F721","length":"32 bytes. Ends at $02F740.","beginsAt":194337,"endsAt":194368,"type":"Sprite tilemap related","descriptio":"Ghost House Doors Tilemap"},{"address":"$02F825","length":"18 bytes. Ends at $02F836.","beginsAt":194597,"endsAt":194614,"type":"Pointer","descriptio":"16-bit pointer to cluster sprites."},{"address":"$02F904","length":"8 bytes. Ends at $02F90B.","beginsAt":194820,"endsAt":194827,"type":"Sprite tilemap related","descriptio":"Sumo Bros' Flame Tilemap"},{"address":"$02F98F","length":"1 byte","beginsAt":194959,"endsAt":194959,"type":"Sprite tilemap related","descriptio":"Sumo Bros' Flame palette/gfx page"},{"address":"$02FA0E","length":"4 bytes. Ends at $02FA11.","beginsAt":195086,"endsAt":195089,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Castle BG Flame"},{"address":"$02FA12","length":"4 bytes. Ends at $02FA15.","beginsAt":195090,"endsAt":195093,"type":"Sprite tilemap related","descriptio":"YXPPCCCT properties for the Castle BG Flame"},{"address":"$02FA84","length":"20 bytes. Ends at $02FA97.","beginsAt":195204,"endsAt":195223,"type":"Coordinate","descriptio":"Ten 16bit values, telling where on the circle the Boo Ring ghosts are. #$0200 is 360°."},{"address":"$02FA98","length":"291 bytes. Ends at $02FBBA.","beginsAt":195224,"endsAt":195514,"type":"Sprite Misc.","descriptio":"The code for cluster sprite 04, the Boo from a Boo ring.\n$02FB39 is radius of Boo rings along the X-axis.\n$02FB5C is radius of Boo rings along the Y-axis."},{"address":"$02FBBF","length":"8 bytes. Ends at $02FBC6.","beginsAt":195519,"endsAt":195526,"type":"Sprite tilemap related","descriptio":"Boo Ring Tilemap (used by Sprites E2, E3, and generators E1 and E5)"},{"address":"$02FDB8","length":"4 bytes. Ends at $02FDBB.","beginsAt":196024,"endsAt":196027,"type":"Sprite tilemap related","descriptio":"Swooper Death Bat tilemap (change 4th byte to E8 to correct graphics)"},{"address":"$02FE5E","length":"1 byte","beginsAt":196190,"endsAt":196190,"type":"Sprite tilemap related","descriptio":"Tile to use for bonus game 1-ups."},{"address":"$02FE63","length":"1 byte","beginsAt":196195,"endsAt":196195,"type":"Sprite tilemap related","descriptio":"Tile properties of bonus game 1-ups."},{"address":"$02FE71","length":"84 bytes. Ends at $02FEC4.","beginsAt":196209,"endsAt":196292,"type":"Sprite subroutine (JSR)","descriptio":"Cluster sprite/player interaction routine. This routine assumes that the cluster sprite is approximately 16x16."},{"address":"$02FF50","length":"20 bytes. Ends at $02FF63.","beginsAt":196432,"endsAt":196451,"type":"Sprite tilemap related","descriptio":"OAM indexes of cluster sprites. Apparently can overwrite the coin sprites from blocks, sparkles, item box, and fireballs."},{"address":"$02FF64","length":"8 bytes. Ends at $02FF6B.","beginsAt":196452,"endsAt":196459,"type":"Sprite tilemap related","descriptio":"OAM indexes of the 1-Ups from the bonus game."},{"address":"$02FF98","length":"11 bytes. Ends at $02FFA2.","beginsAt":196504,"endsAt":196514,"type":"Sprite subroutine (JSR)","descriptio":"\"Update cluster sprite X position without gravity\" subroutine."},{"address":"$02FFA3","length":"46 bytes. Ends at $02FFD0.","beginsAt":196515,"endsAt":196560,"type":"Sprite subroutine (JSR)","descriptio":"\"Update cluster sprite Y position without gravity\" subroutine."},{"address":"$02FFE2","length":"30 bytes. Ends at $02FFFF.","beginsAt":196578,"endsAt":196607,"type":"Empty","descriptio":"Empty on default. Can be used for various purposes."},{"address":"$038098","length":"1 byte","beginsAt":229528,"endsAt":229528,"type":"Timer","descriptio":"How long the fadeout is on the screen before it disappears. (Big Boo Boss)"},{"address":"$03809D","length":"1 byte","beginsAt":229533,"endsAt":229533,"type":"Music","descriptio":"Music played after Big Boo Boss is defeated."},{"address":"$0380CE","length":"1 byte","beginsAt":229582,"endsAt":229582,"type":"Timer","descriptio":"How long it takes for Big Boo Boss to appear. (Stalling)"},{"address":"$0380DB","length":"1 byte","beginsAt":229595,"endsAt":229595,"type":"Timer","descriptio":"How long it takes for Big Boo Boss to appear. (appearing stage)"},{"address":"$0380EA","length":"1 byte","beginsAt":229610,"endsAt":229610,"type":"Sound effect","descriptio":"Big Boo Boss appear sound effect."},{"address":"$0381A2","length":"1 byte","beginsAt":229794,"endsAt":229794,"type":"Misc.","descriptio":"Big Boo Boss HP"},{"address":"$0381DF","length":"1 byte","beginsAt":229855,"endsAt":229855,"type":"Sound effect","descriptio":"Big Boo boss falling sound effect. (Big Boo beaten)"},{"address":"$0381F5","length":"68 bytes. Ends at $038238.","beginsAt":229877,"endsAt":229944,"type":"Subroutine (JSR)","descriptio":"Big Boo's \"Hit with sprite\" subroutine. JSR every frame to it to have your boss have functionality with thrown items.\n$038234 is the sound made by Big Boo Boss when it is hit."},{"address":"$038280","length":"1 byte","beginsAt":230016,"endsAt":230016,"type":"Sprite tilemap related","descriptio":"X position of big boo's eyes in the normal frame"},{"address":"$038281","length":"1 byte","beginsAt":230017,"endsAt":230017,"type":"Sprite tilemap related","descriptio":"X position of big boo's mouth in the normal frame"},{"address":"$038282","length":"2 bytes. Ends at $038283.","beginsAt":230018,"endsAt":230019,"type":"Sprite tilemap related","descriptio":"X position of big boo's arms in normal frame"},{"address":"$038284","length":"16 bytes. Ends at $038293.","beginsAt":230020,"endsAt":230035,"type":"Sprite tilemap related","descriptio":"X Position of the 16 tiles of big boo's body in the normal frame"},{"address":"$038294","length":"1 byte","beginsAt":230036,"endsAt":230036,"type":"Sprite tilemap related","descriptio":"X position of big boo's eyes in turning frame 1"},{"address":"$038295","length":"1 byte","beginsAt":230037,"endsAt":230037,"type":"Sprite tilemap related","descriptio":"X position of big boo's mouth in turning frame 1"},{"address":"$038296","length":"2 bytes. Ends at $038297.","beginsAt":230038,"endsAt":230039,"type":"Sprite tilemap related","descriptio":"X position of big boo's arms in turning frame 1"},{"address":"$038298","length":"16 bytes. Ends at $0382A7.","beginsAt":230040,"endsAt":230055,"type":"Sprite tilemap related","descriptio":"X Position of the 16 tiles of big boo's body in turning frame 1"},{"address":"$0382A8","length":"1 byte","beginsAt":230056,"endsAt":230056,"type":"Sprite tilemap related","descriptio":"X position of big boo's eyes in turning frame 2"},{"address":"$0382A9","length":"1 byte","beginsAt":230057,"endsAt":230057,"type":"Sprite tilemap related","descriptio":"X position of big boo's mouth in turning frame 2"},{"address":"$0382AA","length":"2 bytes. Ends at $0382AB.","beginsAt":230058,"endsAt":230059,"type":"Sprite tilemap related","descriptio":"X position of big boo's arms in turning frame 2"},{"address":"$0382AC","length":"16 bytes. Ends at $0382BB.","beginsAt":230060,"endsAt":230075,"type":"Sprite tilemap related","descriptio":"X Position of the 16 tiles of big boo's body in turning frame 2"},{"address":"$0382BC","length":"2 bytes. Ends at $0382BD.","beginsAt":230076,"endsAt":230077,"type":"Sprite tilemap related","descriptio":"X position of big boo's arms in the hiding frame"},{"address":"$0382BE","length":"1 byte","beginsAt":230078,"endsAt":230078,"type":"Sprite tilemap related","descriptio":"X position of Big boo's eyes in the hiding frame"},{"address":"$0382BF","length":"1 byte","beginsAt":230079,"endsAt":230079,"type":"Sprite tilemap related","descriptio":"X position of Big boo's mouth in the hiding frame"},{"address":"$0382C0","length":"16 bytes. Ends at $0382CF.","beginsAt":230080,"endsAt":230095,"type":"Sprite tilemap related","descriptio":"X position of the 16 body tiles of Big boo in the hiding frame"},{"address":"$0382D0","length":"1 byte","beginsAt":230096,"endsAt":230096,"type":"Sprite tilemap related","descriptio":"Y position of Big boo's eyes in normal, turning 1 and turning 2 frames"},{"address":"$0382D1","length":"1 byte","beginsAt":230097,"endsAt":230097,"type":"Sprite tilemap related","descriptio":"Y position of Big boo's mouth in normal, turning 1 and turning 2 frames"},{"address":"$0382D2","length":"2 bytes. Ends at $0382D3.","beginsAt":230098,"endsAt":230099,"type":"Sprite tilemap related","descriptio":"Y position of Big boo's arms in normal, turning 1 and turning 2 frames"},{"address":"$0382D4","length":"16 bytes. Ends at $0382E3.","beginsAt":230100,"endsAt":230115,"type":"Sprite tilemap related","descriptio":"Y position of the 16 tiles of Big boo's body in normal, turning 1 and turning 2 frames"},{"address":"$0382E4","length":"2 bytes. Ends at $0382E5.","beginsAt":230116,"endsAt":230117,"type":"Sprite tilemap related","descriptio":"Y position of big boo's arms in hiding frame"},{"address":"$0382E6","length":"1 byte","beginsAt":230118,"endsAt":230118,"type":"Sprite tilemap related","descriptio":"Y position of big boo's eyes in hiding frame"},{"address":"$0382E7","length":"1 byte","beginsAt":230119,"endsAt":230119,"type":"Sprite tilemap related","descriptio":"Y position of Big boo's mouth in hiding frame"},{"address":"$0382E8","length":"16 bytes. Ends at $0382F7.","beginsAt":230120,"endsAt":230135,"type":"Sprite tilemap related","descriptio":"Y position of the 16 tiles of big boo's body in hiding frame"},{"address":"$0382F8","length":"80 bytes. Ends at $038347.","beginsAt":230136,"endsAt":230215,"type":"Sprite tilemap related","descriptio":"Sprite Tilemap: Big Boo"},{"address":"$038348","length":"80 bytes. Ends at $038397.","beginsAt":230216,"endsAt":230295,"type":"Sprite tilemap related","descriptio":"The flip of each tile in the tilemap of Big Boo (00 is no flip, 40 is horizontal flip, 80 is vertical flip, C0 is horizontal + vertical flip)"},{"address":"$03846A","length":"1 byte","beginsAt":230506,"endsAt":230506,"type":"Sprite physics","descriptio":"Max falling Y speed for the grey falling platform."},{"address":"$03846F","length":"1 byte","beginsAt":230511,"endsAt":230511,"type":"Sprite physics","descriptio":"How much the grey falling platform accelerates each frame."},{"address":"$03848E","length":"4 bytes. Ends at $038491.","beginsAt":230542,"endsAt":230545,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Falling Grey Platform"},{"address":"$0384AD","length":"1 byte","beginsAt":230573,"endsAt":230573,"type":"Sprite tilemap related","descriptio":"Falling Grey Platform's Palette"},{"address":"$0384DD","length":"1 byte","beginsAt":230621,"endsAt":230621,"type":"Sprite tilemap related","descriptio":"Tilemap: Blurp Frame 1"},{"address":"$0384E1","length":"1 byte","beginsAt":230625,"endsAt":230625,"type":"Sprite tilemap related","descriptio":"Tilemap: Blurp Frame 2"},{"address":"$03852D","length":"2 bytes. Ends at $03852E.","beginsAt":230701,"endsAt":230702,"type":"Sprite physics","descriptio":"Horizontal speed of the Porcu-Puffer fish"},{"address":"$038580","length":"1 byte","beginsAt":230784,"endsAt":230784,"type":"ASM","descriptio":"Change 94 to 60 to make the Porcu-Puffer fish go in a straight line and also float on air."},{"address":"$038593","length":"8 bytes. Ends at $03859A.","beginsAt":230803,"endsAt":230810,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Porcu-Puffer"},{"address":"$03866F","length":"1 byte","beginsAt":231023,"endsAt":231023,"type":"ASM","descriptio":"Change C8 to 60 to fix a bug where sprite C1 (Flying Grey Turnblocks) corrupts $1602 if sprite slot 0 is occupied and only one sprite C1 is present."},{"address":"$03868A","length":"10 bytes. Ends at $038693.","beginsAt":231050,"endsAt":231059,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Forest Secret Area Platform"},{"address":"$038734","length":"3 bytes. Ends at $038736.","beginsAt":231220,"endsAt":231222,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Sinking Lava Platform"},{"address":"$03876E","length":"1 byte","beginsAt":231278,"endsAt":231278,"type":"Sprite physics","descriptio":"Mega Mole X speed (right)"},{"address":"$03876F","length":"1 byte","beginsAt":231279,"endsAt":231279,"type":"Sprite physics","descriptio":"Mega Mole X speed (left)"},{"address":"$038826","length":"4 bytes. Ends at $038829.","beginsAt":231462,"endsAt":231465,"type":"Misc.","descriptio":"[22 B7 F5 00] Change to [EA EA EA EA] to make Mega Mole not hurt Mario."},{"address":"$038837","length":"8 bytes. Ends at $03883E.","beginsAt":231479,"endsAt":231486,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Mega Mole"},{"address":"$038849","length":"3 bytes. Ends at $03884B.","beginsAt":231497,"endsAt":231499,"type":"Sprite tilemap related","descriptio":"Animation speed of Mega Mole. Change a 4A to EA to speed it up, and a EA to 4A to slow it down."},{"address":"$038882","length":"1 byte","beginsAt":231554,"endsAt":231554,"type":"Sprite tilemap related","descriptio":"Palette to use for Mega Mole"},{"address":"$0388A0","length":"3 bytes. Ends at $0388A2.","beginsAt":231584,"endsAt":231586,"type":"Sprite tilemap related","descriptio":"Swooper Bat Tilemap"},{"address":"$0388FC","length":"1 byte","beginsAt":231676,"endsAt":231676,"type":"Sprite physics","descriptio":"Initial vertical speed of Swooper bat. This affects how far down it goes from its starting position."},{"address":"$038900","length":"1 byte","beginsAt":231680,"endsAt":231680,"type":"Sound effect","descriptio":"Swooper Sound Effect."},{"address":"$038932","length":"3 bytes. Ends at $038934.","beginsAt":231730,"endsAt":231732,"type":"ASM","descriptio":"Change to EA EA EA to disable Mega Mole animation"},{"address":"$038977","length":"1 byte","beginsAt":231799,"endsAt":231799,"type":"Sprite number","descriptio":"Sprite that the sliding koopa turns into after touching the ground"},{"address":"$038984","length":"1 byte","beginsAt":231812,"endsAt":231812,"type":"Sprite tilemap related","descriptio":"Tilemap of blue shellless koopa sliding down a hill"},{"address":"$038988","length":"1 byte","beginsAt":231816,"endsAt":231816,"type":"Sprite tilemap related","descriptio":"Tilemap of blue shellless koopa after sliding"},{"address":"$038ADB","length":"1 byte","beginsAt":232155,"endsAt":232155,"type":"Sound effect","descriptio":"SFX played by Bowser Statue"},{"address":"$038AE5","length":"1 byte","beginsAt":232165,"endsAt":232165,"type":"Sprite number","descriptio":"Sprite spawned by Bowser statue"},{"address":"$038B2E","length":"6 bytes. Ends at $038B33.","beginsAt":232238,"endsAt":232243,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Bowser Statue(Both)"},{"address":"$038B37","length":"6 bytes. Ends at $038B3C.","beginsAt":232247,"endsAt":232252,"type":"Palette","descriptio":"Bowser Statue Properties. This will get or'd with the sprite's palette, which means it has the most effect on the jumping Bowser statue."},{"address":"$038D0C","length":"6 bytes. Ends at $038D11.","beginsAt":232716,"endsAt":232721,"type":"Sprite tilemap related","descriptio":"Relative X position of the diagonal platform tiles (Carrot Top Lift). First half is used for sprite B7, second half is used for sprite B8."},{"address":"$038D12","length":"6 bytes. Ends at $038D17.","beginsAt":232722,"endsAt":232727,"type":"Sprite tilemap related","descriptio":"Relative Y position of the diagonal platform tiles (Carrot Top Lift). First half is used for sprite B7, second half is used for sprite B8."},{"address":"$038D18","length":"6 bytes. Ends at $038D1D.","beginsAt":232728,"endsAt":232733,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Diagonal Platform (Carrot Top Lift). First half is used for sprite B7, second half is used for sprite B8."},{"address":"$038D1E","length":"6 bytes. Ends at $038D23.","beginsAt":232734,"endsAt":232739,"type":"Sprite tilemap related","descriptio":"YXPPCCCT properties for the diagonal platform (Carrot Top Lift). First half is used for sprite B7, second half is used for sprite B8."},{"address":"$038D7E","length":"1 byte","beginsAt":232830,"endsAt":232830,"type":"Sound effect","descriptio":"SFX that comes up when the Message comes out of the Message Block"},{"address":"$038DB0","length":"1 byte","beginsAt":232880,"endsAt":232880,"type":"Sprite tilemap related","descriptio":"Message Box Tilemap"},{"address":"$038DDB","length":"1 byte","beginsAt":232923,"endsAt":232923,"type":"Misc.","descriptio":"Change to 00 and the timed lift will never fall after it has hit 0."},{"address":"$038DEA","length":"1 byte","beginsAt":232938,"endsAt":232938,"type":"Sprite physics","descriptio":"Horizontal speed of the Timed Lift"},{"address":"$038E05","length":"2 bytes. Ends at $038E06.","beginsAt":232965,"endsAt":232966,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Timed Platform"},{"address":"$038E08","length":"3 bytes. Ends at $038E0A.","beginsAt":232968,"endsAt":232970,"type":"Sprite tilemap related","descriptio":"[0B 4B 0B] Properties (Palette, gfx page, etc..) of the Timed Lift."},{"address":"$038E0E","length":"4 bytes. Ends at $038E11.","beginsAt":232974,"endsAt":232977,"type":"Sprite tilemap related","descriptio":"Tiles used by numbers in Timed Platform (1,2,3,4)"},{"address":"$038E71","length":"4 bytes. Ends at $038E74.","beginsAt":233073,"endsAt":233076,"type":"Sprite physics","descriptio":"Horizontal speed of the Grey Moving Castle Block."},{"address":"$038E75","length":"4 bytes. Ends at $038E78.","beginsAt":233077,"endsAt":233080,"type":"Timer","descriptio":"Time in position of the Grey Moving Castle Block."},{"address":"$038EB0","length":"4 bytes. Ends at $038EB3.","beginsAt":233136,"endsAt":233139,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Moving Grey Castle Brick"},{"address":"$038ED3","length":"1 byte","beginsAt":233171,"endsAt":233171,"type":"Sprite tilemap related","descriptio":"YXPPCCCT properties for the moving gray castle block."},{"address":"$038EEA","length":"2 bytes. Ends at $038EEB.","beginsAt":233194,"endsAt":233195,"type":"Sprite physics","descriptio":"X speeds for the Bowser Statue fireball. Ordered right, left."},{"address":"$038F0B","length":"8 bytes. Ends at $038F12.","beginsAt":233227,"endsAt":233234,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Bowser Statue Fireball"},{"address":"$038F13","length":"8 bytes. Ends at $038F1A.","beginsAt":233235,"endsAt":233242,"type":"Sprite tilemap related","descriptio":"The YXPPCCCT properties of the Bowser Statue Fireball."},{"address":"$038F6D","length":"8 bytes. Ends at $038F74.","beginsAt":233325,"endsAt":233332,"type":"Sprite tilemap related","descriptio":"Reflecting Stream of Boo Buddies tilemap (leader only)"},{"address":"$038FFB","length":"1 byte","beginsAt":233467,"endsAt":233467,"type":"Sprite Misc.","descriptio":"Controls the two palettes that the diagonal Podoboo flashes with. Take the first palette you pick, subtract 8, and multiply by 2 to get a valid value for this. The second palette will then be that value times 2.\n\nFor instance, the original value here is 4 (palette A), which times two is 8, and converting that back into a palette (divide by 2, add 8) gives you palette C. So the Podoboo flashes between palette A and C."},{"address":"$039011","length":"1 byte","beginsAt":233489,"endsAt":233489,"type":"Sprite tilemap related","descriptio":"Reflecting Fireball Tilemap"},{"address":"$039160","length":"10 bytes. Ends at $039169.","beginsAt":233824,"endsAt":233833,"type":"Sprite tilemap related","descriptio":"Fishin' Boo Tilemap (cloud, face, rod, cloud, line)"},{"address":"$039174","length":"4 bytes. Ends at $039177.","beginsAt":233844,"endsAt":233847,"type":"Sprite tilemap related","descriptio":"Fishin' Boo's Flame Tilemap"},{"address":"$03921C","length":"1 byte","beginsAt":234012,"endsAt":234012,"type":"Sprite tilemap related","descriptio":"Falling Spike Tilemap"},{"address":"$03925D","length":"1 byte","beginsAt":234077,"endsAt":234077,"type":"Timer","descriptio":"Number of frames before a Falling Spike drops."},{"address":"$03926F","length":"5 bytes. Ends at $039273.","beginsAt":234095,"endsAt":234099,"type":"Misc.","descriptio":"X speed of the Creating/Eating block"},{"address":"$039274","length":"5 bytes. Ends at $039278.","beginsAt":234100,"endsAt":234104,"type":"Misc.","descriptio":"Y speed of the Creating/Eating block"},{"address":"$039293","length":"1 byte","beginsAt":234131,"endsAt":234131,"type":"Sprite tilemap related","descriptio":"Tile used by the Creating/Eating block"},{"address":"$0392B9","length":"1 byte","beginsAt":234169,"endsAt":234169,"type":"Sound effect","descriptio":"SFX played by the Creating/Eating block"},{"address":"$039320","length":"1 byte","beginsAt":234272,"endsAt":234272,"type":"Objects","descriptio":"Which tile gets created by the brown creating block sprite. Does not affect the tile that the eating block sprite eats, or the tile that activates these two sprites when you stand on it. See this for a list of possible values."},{"address":"$03932D","length":"1 byte","beginsAt":234285,"endsAt":234285,"type":"Objects","descriptio":"Which tile is created by the brown eating block sprite. Defaults to air; see this for a list of possible values.\n\nNote that there is no RAM address that affects which tile this block will eat - it will go after ANY solid block that is next to it."},{"address":"$03938B","length":"25 bytes. Ends at $0393A3.","beginsAt":234379,"endsAt":234403,"type":"Sprite subroutine (JSR)","descriptio":"This generates a Map16 tile at the position of the sprite currently being processed. It is identical to the routine at $02B9A4, except that this one ends with RTS."},{"address":"$0393A4","length":"75 bytes. Ends at $0393EE.","beginsAt":234404,"endsAt":234478,"type":"Misc.","descriptio":"Path for creating brown blocks (sprite B1) in overworld submaps.\nFormat: One byte per command, XY, where X=number of times to go in direction Y. Y = 0,1,2,3 (Right, left, down, up). FF terminates the sprite."},{"address":"$0393EF","length":"52 bytes. Ends at $039422.","beginsAt":234479,"endsAt":234530,"type":"Misc.","descriptio":"Path for creating brown blocks (sprite B1) on the main overworld. Same format as $03:93A4."},{"address":"$0394BB","length":"10 bytes. Ends at $0394C4.","beginsAt":234683,"endsAt":234692,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Wooden Castle Spike"},{"address":"$0394C5","length":"10 bytes. Ends at $0394CE.","beginsAt":234693,"endsAt":234702,"type":"Sprite tilemap related","descriptio":"Properties (palette, gfx page etc.) of the wooden spike.\nThe first 5 bytes for sprite AC the next 5 bytes for sprite AD. YXPPCCCT format."},{"address":"$039513","length":"2 bytes. Ends at $039514.","beginsAt":234771,"endsAt":234772,"type":"Sprite physics","descriptio":"Normal rex walking speed"},{"address":"$039515","length":"2 bytes. Ends at $039516.","beginsAt":234773,"endsAt":234774,"type":"Sprite physics","descriptio":"Smushed rex walking speed"},{"address":"$039542","length":"1 byte","beginsAt":234818,"endsAt":234818,"type":"Misc.","descriptio":"Change to 00 to make all Rexes start small."},{"address":"$0395B8","length":"1 byte","beginsAt":234936,"endsAt":234936,"type":"Misc.","descriptio":"Rex's HP"},{"address":"$03963B","length":"1 byte","beginsAt":235067,"endsAt":235067,"type":"Sound effect","descriptio":"SFX that comes up when Mario hits a Rex"},{"address":"$03964C","length":"12 bytes. Ends at $039657.","beginsAt":235084,"endsAt":235095,"type":"Sprite tilemap related","descriptio":"Rex tile horizontal displacement table left (0C entries)"},{"address":"$039658","length":"12 bytes. Ends at $039663.","beginsAt":235096,"endsAt":235107,"type":"Sprite tilemap related","descriptio":"Rex tile horizontal displacement table right (0C entries)"},{"address":"$039664","length":"12 bytes. Ends at $03966F.","beginsAt":235108,"endsAt":235119,"type":"Sprite tilemap related","descriptio":"Rex tile vertical displacement table (0C entries)"},{"address":"$039670","length":"10 bytes. Ends at $039679.","beginsAt":235120,"endsAt":235129,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Rex"},{"address":"$03967C","length":"1 byte","beginsAt":235132,"endsAt":235132,"type":"Sprite tilemap related","descriptio":"Rex tile settings left"},{"address":"$03967D","length":"1 byte","beginsAt":235133,"endsAt":235133,"type":"Sprite tilemap related","descriptio":"Rex tile settings right"},{"address":"$039784","length":"4 bytes. Ends at $039787.","beginsAt":235396,"endsAt":235399,"type":"Sprite tilemap related","descriptio":"Fishbone tail properties, YXPPCCCT. First two bytes are for the tail when the fishbone is heading into the right direction, the other two when heading into the left direction."},{"address":"$039788","length":"4 bytes. Ends at $03978B.","beginsAt":235400,"endsAt":235403,"type":"Sprite tilemap related","descriptio":"Tiles used by Fishbone's Tail"},{"address":"$039799","length":"1 byte","beginsAt":235417,"endsAt":235417,"type":"Sprite tilemap related","descriptio":"Fishbone Tilemap, frame 1"},{"address":"$03979D","length":"1 byte","beginsAt":235421,"endsAt":235421,"type":"Sprite tilemap related","descriptio":"Fishbone Tilemap, frame 2"},{"address":"$039886","length":"4 bytes. Ends at $039889.","beginsAt":235654,"endsAt":235657,"type":"Coordinate","descriptio":"reznor starting position low byte (4 byte table)"},{"address":"$03988A","length":"4 bytes. Ends at $03988D.","beginsAt":235658,"endsAt":235661,"type":"Coordinate","descriptio":"reznor starting position high byte (4 byte table)"},{"address":"$03989F","length":"4 bytes. Ends at $0398A2.","beginsAt":235679,"endsAt":235682,"type":"ASM","descriptio":"[22 0C D7 03] Change to [EA EA EA EA] to stop the bridge in the Reznor battle from breaking."},{"address":"$0398A4","length":"1 byte","beginsAt":235684,"endsAt":235684,"type":"Coordinate","descriptio":"X position of the Reznor's circle written to $2A and loaded at $0399B3. (Y position is left at whatever $2C is, and it is loaded at $0399D8)"},{"address":"$0398C7","length":"2 bytes. Ends at $0398C8.","beginsAt":235719,"endsAt":235720,"type":"ASM","descriptio":"Change to [38 E9] to change rotation direction of the Reznor platform."},{"address":"$0398C9","length":"2 bytes. Ends at $0398CA.","beginsAt":235721,"endsAt":235722,"type":"Sprite physics","descriptio":"Speed of Reznor rotation"},{"address":"$0398CC","length":"2 bytes. Ends at $0398CD.","beginsAt":235724,"endsAt":235725,"type":"Timer","descriptio":"Frames until Reznors spin cycle loops."},{"address":"$0398E7","length":"1 byte","beginsAt":235751,"endsAt":235751,"type":"Music","descriptio":"Music played after the Reznors are defeated"},{"address":"$039964","length":"1 byte","beginsAt":235876,"endsAt":235876,"type":"Sprite Misc.","descriptio":"X-radius of Reznor's circle"},{"address":"$039987","length":"1 byte","beginsAt":235911,"endsAt":235911,"type":"Sprite Misc.","descriptio":"Y-radius of Reznor's circle"},{"address":"$0399EE","length":"1 byte","beginsAt":236014,"endsAt":236014,"type":"ASM","descriptio":"Change from 22 to AF to make the Reznor platforms non-standable (fall-through) after Mario hits a Reznor from below."},{"address":"$039A04","length":"7 bytes. Ends at $039A0A.","beginsAt":236036,"endsAt":236042,"type":"Sprite Misc.","descriptio":"Change to [D0 0A A9 xx 9D] to alter the rate at which Reznor shoots fireballs. (xx is the speed: $00 is the original value, and $DF seems to be the fastest value that will work correctly.)"},{"address":"$039AD2","length":"1 byte","beginsAt":236242,"endsAt":236242,"type":"Sprite number","descriptio":"Sprite that Reznor will turn into after being hit"},{"address":"$039B04","length":"1 byte","beginsAt":236292,"endsAt":236292,"type":"Sound effect","descriptio":"Sound effect made when Reznor spits a fireball."},{"address":"$039B09","length":"1 byte","beginsAt":236297,"endsAt":236297,"type":"Sprite number","descriptio":"Object that Reznor spits"},{"address":"$039B5D","length":"12 bytes. Ends at $039B68.","beginsAt":236381,"endsAt":236392,"type":"Sprite tilemap related","descriptio":"Reznor tilemap (4 bytes regular reznor, 4 bytes shooting fireball, 4 bytes turning)"},{"address":"$039B69","length":"12 bytes. Ends at $039B74.","beginsAt":236393,"endsAt":236404,"type":"Sprite tilemap related","descriptio":"Reznor palette map (4 bytes regular reznor, 4 bytes shooting fireball, 4 bytes turning)"},{"address":"$039C1A","length":"1 byte","beginsAt":236570,"endsAt":236570,"type":"Sprite tilemap related","descriptio":"tile for reznor platforms"},{"address":"$039C22","length":"1 byte","beginsAt":236578,"endsAt":236578,"type":"Sprite tilemap related","descriptio":"palette of reznor platforms"},{"address":"$039CA4","length":"2 bytes. Ends at $039CA5.","beginsAt":236708,"endsAt":236709,"type":"Sprite physics","descriptio":"Dino Rhino X-Speed."},{"address":"$039CA6","length":"2 bytes. Ends at $039CA7.","beginsAt":236710,"endsAt":236711,"type":"Sprite physics","descriptio":"Dino Torch X-Speed."},{"address":"$039D56","length":"1 byte","beginsAt":236886,"endsAt":236886,"type":"Sound effect","descriptio":"Dino Torch Fire Sound Effect."},{"address":"$039D61","length":"1 byte","beginsAt":236897,"endsAt":236897,"type":"ASM","descriptio":"Change to 80 to make Dino-Torches only breathe fire horizontally"},{"address":"$039D97","length":"1 byte","beginsAt":236951,"endsAt":236951,"type":"ASM","descriptio":"Change to 80 and Dino-Torch's flame will have no effect on Mario."},{"address":"$039DFE","length":"5 bytes. Ends at $039E02.","beginsAt":237054,"endsAt":237058,"type":"Sprite tilemap related","descriptio":"Dino-Torch flame tile horiz. displacement table (horizontal flame)"},{"address":"$039E03","length":"5 bytes. Ends at $039E07.","beginsAt":237059,"endsAt":237063,"type":"Sprite tilemap related","descriptio":"Dino-Torch flame tile horiz. displacement table (vertical flame)"},{"address":"$039E08","length":"5 bytes. Ends at $039E0C.","beginsAt":237064,"endsAt":237068,"type":"Sprite tilemap related","descriptio":"Dino-Torch flame tile vert. displacement table (horizontal flame)"},{"address":"$039E0D","length":"5 bytes. Ends at $039E11.","beginsAt":237069,"endsAt":237073,"type":"Sprite tilemap related","descriptio":"Dino-Torch flame tile vert. displacement table (vertical flame)"},{"address":"$039E12","length":"10 bytes. Ends at $039E1B.","beginsAt":237074,"endsAt":237083,"type":"Sprite tilemap related","descriptio":"Dino-Torch flame tile table (2 animation frames, each 4 bytes w/an unused byte)"},{"address":"$039E1C","length":"5 bytes. Ends at $039E20.","beginsAt":237084,"endsAt":237088,"type":"Sprite tilemap related","descriptio":"Dino-Torch YXPPCCCT bytes."},{"address":"$039E21","length":"4 bytes. Ends at $039E24.","beginsAt":237089,"endsAt":237092,"type":"Sprite tilemap related","descriptio":"Dino-Torch tile table (4 animation frames, each 1 byte)"},{"address":"$039E25","length":"8 bytes. Ends at $039E2C.","beginsAt":237093,"endsAt":237100,"type":"Sprite tilemap related","descriptio":"Dino-Rhino tile horizontal displacement table"},{"address":"$039E2D","length":"4 bytes. Ends at $039E30.","beginsAt":237101,"endsAt":237104,"type":"Sprite tilemap related","descriptio":"Dino-Rhino tiles' palette/gfx page/priority/flip left"},{"address":"$039E31","length":"4 bytes. Ends at $039E34.","beginsAt":237105,"endsAt":237108,"type":"Sprite tilemap related","descriptio":"Dino-Rhino tiles' palette/gfx page/priority/flip right"},{"address":"$039E35","length":"4 bytes. Ends at $039E38.","beginsAt":237109,"endsAt":237112,"type":"Sprite tilemap related","descriptio":"Dino-Rhino tile vertical displacement table"},{"address":"$039E39","length":"16 bytes. Ends at $039E48.","beginsAt":237113,"endsAt":237128,"type":"Sprite tilemap related","descriptio":"Dino-Rhino tile table (4 animation frames, each 4 bytes)"},{"address":"$039EF3","length":"1 byte","beginsAt":237299,"endsAt":237299,"type":"Misc.","descriptio":"Which segment of Dino-Torch's flame is its body"},{"address":"$039F0E","length":"1 byte","beginsAt":237326,"endsAt":237326,"type":"Misc.","descriptio":"Which segment of Dino Torch's flame doesn't flip"},{"address":"$039FFB","length":"1 byte","beginsAt":237563,"endsAt":237563,"type":"Sound effect","descriptio":"Blargg Growl Sound Effect."},{"address":"$03A034","length":"1 byte","beginsAt":237620,"endsAt":237620,"type":"Timer","descriptio":"Time it takes for Blargg to resurface. (eyes)"},{"address":"$03A075","length":"1 byte","beginsAt":237685,"endsAt":237685,"type":"Sprite tilemap related","descriptio":"Tile used by Blargg's Eyes Peeking out of Lava"},{"address":"$03A091","length":"10 bytes. Ends at $03A09A.","beginsAt":237713,"endsAt":237722,"type":"Sprite tilemap related","descriptio":"Blargg Tilemap"},{"address":"$03A09B","length":"1 byte","beginsAt":237723,"endsAt":237723,"type":"Sprite tilemap related","descriptio":"Blargg palette/gfx page, right"},{"address":"$03A09C","length":"1 byte","beginsAt":237724,"endsAt":237724,"type":"Sprite tilemap related","descriptio":"Blargg palette/gfx page, left"},{"address":"$03A0F9","length":"1 byte","beginsAt":237817,"endsAt":237817,"type":"Coordinate","descriptio":"Bowser's initial Y Pos"},{"address":"$03A0FD","length":"1 byte","beginsAt":237821,"endsAt":237821,"type":"Coordinate","descriptio":"Bowser's initial Y Pos high byte"},{"address":"$03A102","length":"1 byte","beginsAt":237826,"endsAt":237826,"type":"Coordinate","descriptio":"Bowser's initial X Pos"},{"address":"$03A106","length":"1 byte","beginsAt":237830,"endsAt":237830,"type":"Coordinate","descriptio":"Bowser's initial X Pos high byte"},{"address":"$03A10B","length":"1 byte","beginsAt":237835,"endsAt":237835,"type":"Misc.","descriptio":"Bowser hit count for first phase"},{"address":"$03A3D9","length":"9 bytes. Ends at $03A3E1.","beginsAt":238553,"endsAt":238561,"type":"Sprite tilemap related","descriptio":"Tilemap: Clouds from Bowser's Clown Car"},{"address":"$03A451","length":"1 byte","beginsAt":238673,"endsAt":238673,"type":"Sprite physics","descriptio":"Speed of Bowser's descent before battle."},{"address":"$03A48B","length":"1 byte","beginsAt":238731,"endsAt":238731,"type":"Timer","descriptio":"Delay before Bowser first throws Mechakoopas at the start of the battle. Default is $78."},{"address":"$03A492","length":"2 bytes. Ends at $03A493.","beginsAt":238738,"endsAt":238739,"type":"Sprite physics","descriptio":"X speed of Bowser's swoop in first part."},{"address":"$03A496","length":"2 bytes. Ends at $03A497.","beginsAt":238742,"endsAt":238743,"type":"Sprite physics","descriptio":"Y speed of Bowser's swoop in first part."},{"address":"$03A506","length":"1 byte","beginsAt":238854,"endsAt":238854,"type":"Sprite Misc.","descriptio":"Phase where Bowser drops steel balls. 07 = phase 1, 08 = phase 2, 09 = phase 3. Default is $08.\n\nChange to [07 90 11] (org $03A505 : CMP #$07 : BCC $11) to make Bowser drop steel balls in all 3 phases."},{"address":"$03A510","length":"1 byte","beginsAt":238864,"endsAt":238864,"type":"Sprite Misc.","descriptio":"Number of steel balls Bowser drops, plus one. Use with $03A614. Default is $03."},{"address":"$03A5B8","length":"1 byte","beginsAt":239032,"endsAt":239032,"type":"Timer","descriptio":"Amount of time between Bowser dropping Mechakoopas"},{"address":"$03A600","length":"1 byte","beginsAt":239104,"endsAt":239104,"type":"Timer","descriptio":"Timing of steel ball dropping"},{"address":"$03A604","length":"1 byte","beginsAt":239108,"endsAt":239108,"type":"Sound effect","descriptio":"Bowser dropping Ball sound"},{"address":"$03A60F","length":"1 byte","beginsAt":239119,"endsAt":239119,"type":"Timer","descriptio":"Amount of time before Bowser drops Mechakoopas (after dropping the 2nd steel ball)"},{"address":"$03A614","length":"1 byte","beginsAt":239124,"endsAt":239124,"type":"Sprite Misc.","descriptio":"Number of steel balls Bowser drops. Use with $03A510. Default is $02."},{"address":"$03A618","length":"1 byte","beginsAt":239128,"endsAt":239128,"type":"Timer","descriptio":"Amount of time before Bowser drops 2nd steel ball"},{"address":"$03A623","length":"1 byte","beginsAt":239139,"endsAt":239139,"type":"Sprite number","descriptio":"Sprite Bowser Throws (Bowling Ball)"},{"address":"$03A672","length":"1 byte","beginsAt":239218,"endsAt":239218,"type":"Timer","descriptio":"Delay after Bowser's hit with a Mechakoopa, before his next attack. Default is $50."},{"address":"$03A683","length":"1 byte","beginsAt":239235,"endsAt":239235,"type":"Misc.","descriptio":"Bowser hit count for final 2 phases"},{"address":"$03A702","length":"1 byte","beginsAt":239362,"endsAt":239362,"type":"Music","descriptio":"Music played when Bowser flies away"},{"address":"$03A71F","length":"2 bytes. Ends at $03A720.","beginsAt":239391,"endsAt":239392,"type":"Sprite physics","descriptio":"Bowser's X acceleration as he swoops out before the fireball phase. First is while shrinking, second is while growing. Default is $01,$FF."},{"address":"$03A725","length":"2 bytes. Ends at $03A726.","beginsAt":239397,"endsAt":239398,"type":"Sprite physics","descriptio":"Bowser's Y acceleration as he swoops out before the fireball phase. First is while shrinking, second is while growing. Default is $FF,$01."},{"address":"$03A729","length":"2 bytes. Ends at $03A72A.","beginsAt":239401,"endsAt":239402,"type":"Sprite Misc.","descriptio":"Bowser's shrink/grow speed (change in $38 and $39) as he swoops out before the fireball phase. First is while shrinking, second is while growing. Default is $01,$FF."},{"address":"$03A79A","length":"1 byte","beginsAt":239514,"endsAt":239514,"type":"Timer","descriptio":"Duration of Bowser's fireball phase. Default is $80."},{"address":"$03A7A8","length":"1 byte","beginsAt":239528,"endsAt":239528,"type":"Music","descriptio":"Music played during Bowser's fireball phase"},{"address":"$03A7B9","length":"1 byte","beginsAt":239545,"endsAt":239545,"type":"Coordinate","descriptio":"X Position Bowser returns to after fire attack."},{"address":"$03A7C2","length":"1 byte","beginsAt":239554,"endsAt":239554,"type":"Music","descriptio":"Bowser scene 3 music"},{"address":"$03A7CC","length":"1 byte","beginsAt":239564,"endsAt":239564,"type":"Coordinate","descriptio":"Y Position Bowser returns to after fire attack."},{"address":"$03A7E0","length":"1 byte","beginsAt":239584,"endsAt":239584,"type":"Timer","descriptio":"Timing to start Bowser fireball attack"},{"address":"$03A7E0","length":"1 byte","beginsAt":239584,"endsAt":239584,"type":"Timer","descriptio":"Time when Bowser's fireballs start spawning, counting down from the value at $03A79A. Default is $60."},{"address":"$03A7F7","length":"1 byte","beginsAt":239607,"endsAt":239607,"type":"Sound effect","descriptio":"Bowser Battle primary flame sound"},{"address":"$03A7FC","length":"1 byte","beginsAt":239612,"endsAt":239612,"type":"Sprite Misc.","descriptio":"Status of sprite spawned by Bowser's fireball attack"},{"address":"$03A801","length":"1 byte","beginsAt":239617,"endsAt":239617,"type":"Sprite number","descriptio":"Sprite spawned by Bowser's fireball attack (fireballs falling from the sky). Default: 0x33."},{"address":"$03A80E","length":"1 byte","beginsAt":239630,"endsAt":239630,"type":"Sprite Misc.","descriptio":"Horizontal distance between Bowser's consecutive fireballs. Default is $20."},{"address":"$03A825","length":"2 bytes. Ends at $03A826.","beginsAt":239653,"endsAt":239654,"type":"Sprite Misc.","descriptio":"[F6 C2] By default, sets the sprite state for Bowser's Podoboo Rain to 01. Change to EA EA to change the sprite state back to 00 - useful if you want Bowser to spawn different falling sprites in between his regular attack rounds."},{"address":"$03A841","length":"8 bytes. Ends at $03A848.","beginsAt":239681,"endsAt":239688,"type":"Sound effect","descriptio":"Bowser Battle other flame sounds"},{"address":"$03A849","length":"2 bytes. Ends at $03A84A.","beginsAt":239689,"endsAt":239690,"type":"Music","descriptio":"Music for the other Bowser Battle attack phases"},{"address":"$03A865","length":"1 byte","beginsAt":239717,"endsAt":239717,"type":"Timer","descriptio":"Timing of Bowser stopping clown car in foreground"},{"address":"$03A86F","length":"1 byte","beginsAt":239727,"endsAt":239727,"type":"Timer","descriptio":"Timing of Peach throwing the mushroom"},{"address":"$03A87C","length":"1 byte","beginsAt":239740,"endsAt":239740,"type":"Timer","descriptio":"How soon Bowser starts moving again"},{"address":"$03A880","length":"1 byte","beginsAt":239744,"endsAt":239744,"type":"Timer","descriptio":"Timing of Bowser coming out of clown car"},{"address":"$03A884","length":"1 byte","beginsAt":239748,"endsAt":239748,"type":"Timer","descriptio":"Timing of music for next attack phase"},{"address":"$03A8AF","length":"1 byte","beginsAt":239791,"endsAt":239791,"type":"Timer","descriptio":"Timing of Peach crying for help sound"},{"address":"$03A8B3","length":"1 byte","beginsAt":239795,"endsAt":239795,"type":"Sound effect","descriptio":"Peach crying for help sound"},{"address":"$03A8E4","length":"1 byte","beginsAt":239844,"endsAt":239844,"type":"Sound effect","descriptio":"Peach Throwing Sound"},{"address":"$03A8E9","length":"1 byte","beginsAt":239849,"endsAt":239849,"type":"Sprite Misc.","descriptio":"Status of sprite spawned by Peach"},{"address":"$03A8EE","length":"1 byte","beginsAt":239854,"endsAt":239854,"type":"Sprite number","descriptio":"Sprite Princess Throws"},{"address":"$03A9CE","length":"80 bytes. Ends at $03AA1D.","beginsAt":240078,"endsAt":240157,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Princess Toadstool(Bowser Battle)"},{"address":"$03AB15","length":"2 bytes. Ends at $03AB16.","beginsAt":240405,"endsAt":240406,"type":"Sprite physics","descriptio":"Bowser's X acceleration (right/left) during phase 2."},{"address":"$03AB17","length":"2 bytes. Ends at $03AB18.","beginsAt":240407,"endsAt":240408,"type":"Sprite physics","descriptio":"Bowser's maximum X speed (right/left) during phase 2."},{"address":"$03AB19","length":"2 bytes. Ends at $03AB1A.","beginsAt":240409,"endsAt":240410,"type":"Sprite physics","descriptio":"Bowser's Y acceleration (down/up) during phase 2."},{"address":"$03AB1B","length":"2 bytes. Ends at $03AB1C.","beginsAt":240411,"endsAt":240412,"type":"Sprite physics","descriptio":"Bowser's maximum Y speed (down/up) during phase 2."},{"address":"$03AB50","length":"1 byte","beginsAt":240464,"endsAt":240464,"type":"Coordinate","descriptio":"Y Position Bowser hovers near in second part."},{"address":"$03AB62","length":"2 bytes. Ends at $03AB63.","beginsAt":240482,"endsAt":240483,"type":"Sprite physics","descriptio":"X speed of bounce in Bowser's third part."},{"address":"$03AB76","length":"1 byte","beginsAt":240502,"endsAt":240502,"type":"Sprite physics","descriptio":"Bowser's Y acceleration when bouncing during phase 3."},{"address":"$03AB89","length":"1 byte","beginsAt":240521,"endsAt":240521,"type":"Sprite physics","descriptio":"Bowser's Y speed after bouncing off the ground, during phase 3."},{"address":"$03AB8D","length":"1 byte","beginsAt":240525,"endsAt":240525,"type":"Sound effect","descriptio":"Bowser's Clown Car bouncing sound"},{"address":"$03ABF4","length":"1 byte","beginsAt":240628,"endsAt":240628,"type":"Sound effect","descriptio":"Bowser Defeated Sound"},{"address":"$03AC33","length":"1 byte","beginsAt":240691,"endsAt":240691,"type":"Sprite physics","descriptio":"Rotation speed of Bowser as he flies away after Peach has been released."},{"address":"$03AC53","length":"1 byte","beginsAt":240723,"endsAt":240723,"type":"Sound effect","descriptio":"Peach appearing after battle sound"},{"address":"$03AC63","length":"48 bytes. Ends at $03AC92.","beginsAt":240739,"endsAt":240786,"type":"Sprite subroutine (JSR)","descriptio":"Routine that spawns Princess Peach from Bowser's clown car.\n$03AC69 is the sprite ID Bowser spawns. Note that it will always use the 8th sprite slot.\n$03AC7F is the starting Y-coordinate of this sprite."},{"address":"$03AC93","length":"2 bytes. Ends at $03AC94.","beginsAt":240787,"endsAt":240788,"type":"Coordinate","descriptio":"Y-coords of blushing Mario face tiles (Super, small)"},{"address":"$03AC95","length":"2 bytes. Ends at $03AC96.","beginsAt":240789,"endsAt":240790,"type":"Mario tilemap","descriptio":"Blushing Mario Faces (Super, Small)"},{"address":"$03AD07","length":"1 byte","beginsAt":240903,"endsAt":240903,"type":"Mario tilemap","descriptio":"Palette of Mario's blushing tiles at the end of the game. YXPPCCCT format. Default: $31 (palette 8, second tile page, top priority)"},{"address":"$03B031","length":"1 byte","beginsAt":241713,"endsAt":241713,"type":"Sprite number","descriptio":"Sprite Bowser Throws (Mecha Koopa)"},{"address":"$03B0B9","length":"1 byte","beginsAt":241849,"endsAt":241849,"type":"Sound effect","descriptio":"Mario bumped by Clown Car sound"},{"address":"$03B12A","length":"1 byte","beginsAt":241962,"endsAt":241962,"type":"Sound effect","descriptio":"Bowser hurt sound"},{"address":"$03B161","length":"2 bytes. Ends at $03B162.","beginsAt":242017,"endsAt":242018,"type":"Sprite physics","descriptio":"Bowling ball's X speed. (Default: Right: $10, Left: $F0)"},{"address":"$03B181","length":"1 byte","beginsAt":242049,"endsAt":242049,"type":"Sprite physics","descriptio":"Bowling Ball Y acceleration. [Default: $03]"},{"address":"$03B187","length":"1 byte","beginsAt":242055,"endsAt":242055,"type":"Sprite physics","descriptio":"Bowling Ball maximum falling Y speed. [Default: $40]"},{"address":"$03B196","length":"1 byte","beginsAt":242070,"endsAt":242070,"type":"Coordinate","descriptio":"Y position at which Bowser's bowling ball will stop falling. If you change this, you must change $03B19A to the same value."},{"address":"$03B19A","length":"1 byte","beginsAt":242074,"endsAt":242074,"type":"Coordinate","descriptio":"Y position to set Bowser's bowling ball to once it hits the \"ground\". If you change this, you must change $03B196 to the same value."},{"address":"$03B1A4","length":"1 byte","beginsAt":242084,"endsAt":242084,"type":"Sound effect","descriptio":"Bowser's Steel Ball hitting ground sound"},{"address":"$03B1A4","length":"1 byte","beginsAt":242084,"endsAt":242084,"type":"Sound effect","descriptio":"Bowling Ball hard-bounce sound effect. [Default: $25]"},{"address":"$03B1B2","length":"1 byte","beginsAt":242098,"endsAt":242098,"type":"Sound effect","descriptio":"Steel Ball bouncing sound"},{"address":"$03B1B2","length":"1 byte","beginsAt":242098,"endsAt":242098,"type":"Sound effect","descriptio":"Bowling Ball soft-bounce sound effect. [Default: $01]"},{"address":"$03B1ED","length":"12 bytes. Ends at $03B1F8.","beginsAt":242157,"endsAt":242168,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Bowser's Steel Ball"},{"address":"$03B30F","length":"4 bytes. Ends at $03B312.","beginsAt":242447,"endsAt":242450,"type":"Sprite tilemap related","descriptio":"Mechakoopa tile horizontal displacement table left"},{"address":"$03B313","length":"4 bytes. Ends at $03B316.","beginsAt":242451,"endsAt":242454,"type":"Sprite tilemap related","descriptio":"Mechakoopa tile horizontal displacement table right"},{"address":"$03B317","length":"24 bytes. Ends at $03B32E.","beginsAt":242455,"endsAt":242478,"type":"Sprite tilemap related","descriptio":"Mechakoopa tile vertical displacement table (6 animation frames, each 4 bytes)"},{"address":"$03B32F","length":"24 bytes. Ends at $03B346.","beginsAt":242479,"endsAt":242502,"type":"Sprite tilemap related","descriptio":"Mechakoopa tile table (6 animation frames, each 4 bytes)"},{"address":"$03B347","length":"4 bytes. Ends at $03B34A.","beginsAt":242503,"endsAt":242506,"type":"Sprite tilemap related","descriptio":"Mechakoopa tiles' priority/flip left"},{"address":"$03B34B","length":"4 bytes. Ends at $03B34E.","beginsAt":242507,"endsAt":242510,"type":"Sprite tilemap related","descriptio":"Mechakoopa tiles' priority/flip right"},{"address":"$03B34F","length":"4 bytes. Ends at $03B352.","beginsAt":242511,"endsAt":242514,"type":"Sprite tilemap related","descriptio":"Mechakoopa tile sizes (00= 8x8, 02= 16x16)"},{"address":"$03B353","length":"1 byte","beginsAt":242515,"endsAt":242515,"type":"Sprite tilemap related","descriptio":"Mechakoopa Palette/gfx page used when coming to, #1"},{"address":"$03B354","length":"1 byte","beginsAt":242516,"endsAt":242516,"type":"Sprite tilemap related","descriptio":"Mechakoopa Palette/gfx page used when coming to, #2"},{"address":"$03B356","length":"1 byte","beginsAt":242518,"endsAt":242518,"type":"Sprite tilemap related","descriptio":"Mechakoopa Regular palette/gfx page"},{"address":"$03B360","length":"1 byte","beginsAt":242528,"endsAt":242528,"type":"Sprite tilemap related","descriptio":"Mechakoopa Animation frame used when stunned"},{"address":"$03B36A","length":"1 byte","beginsAt":242538,"endsAt":242538,"type":"Sprite tilemap related","descriptio":"Mechakoopa Animation frame used when kicked"},{"address":"$03B3EF","length":"1 byte","beginsAt":242671,"endsAt":242671,"type":"Sprite tilemap related","descriptio":"Mechakoopa Wind-up key horizontal displacement right"},{"address":"$03B3F0","length":"1 byte","beginsAt":242672,"endsAt":242672,"type":"Sprite tilemap related","descriptio":"Mechakoopa Wind-up key horizontal displacement left"},{"address":"$03B3F1","length":"1 byte","beginsAt":242673,"endsAt":242673,"type":"Sprite tilemap related","descriptio":"Mechakoopa Wind-up key palette/gfx page right"},{"address":"$03B3F2","length":"1 byte","beginsAt":242674,"endsAt":242674,"type":"Sprite tilemap related","descriptio":"Mechakoopa Wind-up key palette/gfx page left"},{"address":"$03B3F3","length":"4 bytes. Ends at $03B3F6.","beginsAt":242675,"endsAt":242678,"type":"Sprite tilemap related","descriptio":"Mechakoopa Wind-up key tile table (4 animation frames, each 1 byte)"},{"address":"$03B443","length":"4 bytes. Ends at $03B446.","beginsAt":242755,"endsAt":242758,"type":"Coordinate","descriptio":"Bowser Battle Item Box Frame: X position of each corner of the frame (in the order upper-left, upper-right, lower-left, lower-right)"},{"address":"$03B447","length":"4 bytes. Ends at $03B44A.","beginsAt":242759,"endsAt":242762,"type":"Coordinate","descriptio":"Bowser Battle Item Box Frame: Y position of each corner of the frame (same order as above)"},{"address":"$03B44B","length":"4 bytes. Ends at $03B44E.","beginsAt":242763,"endsAt":242766,"type":"Sprite tilemap related","descriptio":"Bowser Battle Item Box Frame: Attributes for each corner of the frame (same order as above)"},{"address":"$03B46E","length":"1 byte","beginsAt":242798,"endsAt":242798,"type":"Sprite tilemap related","descriptio":"Bowser Battle Item Box Frame: Tile to use for the frame (each corner uses the same 16x16 tile)"},{"address":"$03B48C","length":"16 bytes. Ends at $03B49B.","beginsAt":242828,"endsAt":242843,"type":"Misc.","descriptio":"X-coordinates of 1st and 3rd rows of Bowser's castle roof"},{"address":"$03B49C","length":"16 bytes. Ends at $03B4AB.","beginsAt":242844,"endsAt":242859,"type":"Misc.","descriptio":"Y-coordinates of 1st and 3rd rows of castle roof"},{"address":"$03B4B9","length":"1 byte","beginsAt":242873,"endsAt":242873,"type":"Misc.","descriptio":"How many tiles to load for 2nd row group, -1"},{"address":"$03B4C0","length":"1 byte","beginsAt":242880,"endsAt":242880,"type":"Misc.","descriptio":"Y-coordinate of 2nd row of castle roof"},{"address":"$03B4D1","length":"1 byte","beginsAt":242897,"endsAt":242897,"type":"Misc.","descriptio":"Difference in X-coordinate for tiles in 2nd row"},{"address":"$03B4D5","length":"1 byte","beginsAt":242901,"endsAt":242901,"type":"Sprite tilemap related","descriptio":"Tile of 2nd row of Bowser's castle roof"},{"address":"$03B4DA","length":"1 byte","beginsAt":242906,"endsAt":242906,"type":"Sprite tilemap related","descriptio":"Palette of 2nd row of Bowser's castle roof"},{"address":"$03B4F3","length":"1 byte","beginsAt":242931,"endsAt":242931,"type":"Misc.","descriptio":"How many tiles to load for 1st & 3rd row group, -1"},{"address":"$03B50D","length":"1 byte","beginsAt":242957,"endsAt":242957,"type":"Sprite tilemap related","descriptio":"Tile of 3rd row of Bowser's castle roof"},{"address":"$03B50F","length":"1 byte","beginsAt":242959,"endsAt":242959,"type":"Misc.","descriptio":"How many tiles will use the address below"},{"address":"$03B513","length":"1 byte","beginsAt":242963,"endsAt":242963,"type":"Sprite tilemap related","descriptio":"Tile of 1st row of castle roof"},{"address":"$03B518","length":"1 byte","beginsAt":242968,"endsAt":242968,"type":"Sprite tilemap related","descriptio":"Palette of 1st and 3rd rows of Bowser's castle roof"},{"address":"$03B547","length":"1 byte","beginsAt":243015,"endsAt":243015,"type":"Sprite tilemap related","descriptio":"Tile of 3rd row of castle roof (copy. It is called for when Peach comes from Bowser's clown car )"},{"address":"$03B549","length":"1 byte","beginsAt":243017,"endsAt":243017,"type":"Misc.","descriptio":"How many tiles will use the address below"},{"address":"$03B54D","length":"1 byte","beginsAt":243021,"endsAt":243021,"type":"Sprite tilemap related","descriptio":"Tile of 1st row of castle roof (copy)"},{"address":"$03B552","length":"1 byte","beginsAt":243026,"endsAt":243026,"type":"Sprite tilemap related","descriptio":"Palette of 1st and 3rd rows of castle roof (copy)"},{"address":"$03B56C","length":"60 bytes. Ends at $03B5A7.","beginsAt":243052,"endsAt":243111,"type":"Sprite physics","descriptio":"X displacement of sprite clippings."},{"address":"$03B5A8","length":"60 bytes. Ends at $03B5E3.","beginsAt":243112,"endsAt":243171,"type":"Sprite physics","descriptio":"Width of sprite clippings."},{"address":"$03B5E4","length":"60 bytes. Ends at $03B61F.","beginsAt":243172,"endsAt":243231,"type":"Sprite physics","descriptio":"Y displacement of sprite clippings."},{"address":"$03B620","length":"60 bytes. Ends at $03B65B.","beginsAt":243232,"endsAt":243291,"type":"Sprite physics","descriptio":"Height of sprite clippings."},{"address":"$03B664","length":"59 bytes. Ends at $03B69E.","beginsAt":243300,"endsAt":243358,"type":"Subroutine (JSL)","descriptio":"\"Get player clipping\" subroutine. Stores the clipping X displacement low byte to $00, the clipping X displacement high byte to $08, the clipping width to $02, the clipping Y displacement low byte to $01, the clipping Y displacement high byte to $09, and the clipping height to $03.\n$03B673 - The width of Mario hitbox with sprites in pixels.\n$03B67C - Change to A9 00 to make Super/Fire/Cape Mario have a 16x16 interaction field (like Small Mario)or change to A9 01 to have a 16x32 interaction field (like Big Mario)(in conjunction with addresses $00EB79 and $01B4C0)"},{"address":"$03B69F","length":"70 bytes. Ends at $03B6E4.","beginsAt":243359,"endsAt":243428,"type":"Sprite subroutine (JSL)","descriptio":"\"Get sprite clipping A\" subroutine. Stores the clipping X displacement low byte to $04, the clipping X displacement high byte to $0A, the clipping width to $06, the clipping Y displacement low byte to $05, the clipping Y displacement high byte to $0B, and the clipping height to $07."},{"address":"$03B6E5","length":"70 bytes. Ends at $03B72A.","beginsAt":243429,"endsAt":243498,"type":"Sprite subroutine (JSL)","descriptio":"\"Get sprite clipping B\" subroutine. Stores the clipping X displacement low byte to $00, the clipping X displacement high byte to $08, the clipping width to $02, the clipping Y displacement low byte to $01, the clipping Y displacement high byte to $09, and the clipping height to $03."},{"address":"$03B72B","length":"49 bytes. Ends at $03B75B.","beginsAt":243499,"endsAt":243547,"type":"Sprite subroutine (JSL)","descriptio":"\"Check for contact\" subroutine. Uses the values in scratch RAM set by $03B69F and either $03B6E5 or $03B664 (or occasionally custom values) to determine whether two sprites, or a sprite and the player, are in contact. If the carry flag is set after calling this, they are in contact."},{"address":"$03B902","length":"128 bytes. Ends at $03B981.","beginsAt":243970,"endsAt":244097,"type":"Palette","descriptio":"Magikoopa palettes (8 palettes; 8 colours each, including transparent colour)"},{"address":"$03B982","length":"128 bytes. Ends at $03BA01.","beginsAt":244098,"endsAt":244225,"type":"Palette","descriptio":"Big Boo Boss palettes (in same layout as Magikoopa palettes)"},{"address":"$03BA02","length":"1534 bytes. Ends at $03BFFF.","beginsAt":244226,"endsAt":245759,"type":"Empty","descriptio":"Filled with FF.\n\nLunar Magic:\n$03BB90: Start of Lunar Magic's modified Message Box routine.\n$03BC0B: Pointer to message locations. Note that this changes every time you use LM to edit the messages.\n$03BC7F: Table of the first 2 bytes of the stripe header for message boxes.\n$03BE80: Table of offsets to find the correct message. Indexed by ($13BF * 2 + ($1426 - 1)) * 2"},{"address":"$03C000","length":"35 bytes. Ends at $03C022.","beginsAt":245760,"endsAt":245794,"type":"Sprite subroutine (JSL)","descriptio":"This generates a Map16 tile at the position of the sprite currently being processed plus 8 pixels left and 8 pixels down. It can be accessed with a JSL, and A should be set to the value of $9C you wish to use."},{"address":"$03C0B2","length":"4 bytes. Ends at $03C0B5.","beginsAt":245938,"endsAt":245941,"type":"Sprite tilemap related","descriptio":"The tile numbers to use for the animated lava sprite tiles in Iggy/Larry's room. Default values are $68, $6A, $6C and $6E."},{"address":"$03C0B6","length":"16 bytes. Ends at $03C0C5.","beginsAt":245942,"endsAt":245957,"type":"Sprite tilemap related","descriptio":"The animation offsets for the animated lava sprite tiles in Iggy/Larry's room (e.g. if you set all of them to the same value, they would all display the same tile at once).\nStrangely, some of them are #$04, despite nothing using that bit."},{"address":"$03C0CD","length":"69 bytes. Ends at $03C111.","beginsAt":245965,"endsAt":246033,"type":"Subroutine (JSL)","descriptio":"The subroutine that displays the animated lava sprite tiles in Iggy/Larry's room (as well as calling his platform tilting routine, not included).\n\nIt makes use of 4 bytes at $03C0B2 and 16 bytes at $03C0B6, respectively for determining the tile numbers to use and their animation offset.\n\nIf you want to disable it for some reason, you can just put an RTL there."},{"address":"$03C112","length":"4 bytes. Ends at $03C115.","beginsAt":246034,"endsAt":246037,"type":"Misc.","descriptio":"Speed of rotation of Iggy/Larry's platform"},{"address":"$03C11A","length":"4 bytes. Ends at $03C11D.","beginsAt":246042,"endsAt":246045,"type":"Misc.","descriptio":"How far to Iggy/Larry's rotate platforms"},{"address":"$03C11E","length":"88 bytes. Ends at $03C175.","beginsAt":246046,"endsAt":246133,"type":"Subroutine (JSR)","descriptio":"The subroutine that takes care of tilting Iggy/Larry's Mode 7 platform.\n\nIt makes use of 4 bytes at $03C112, 4 bytes at $03C11A and 1 byte at $03C164, respectively for determining the tilting speeds, maximum angles and time to elapse between each tilt.\nIt also uses RAM adresses $1905, $1906 and $1907, respectively for the total number of tilts made, the timer between each tilt and the phase counter (See these for more details).\n\nIf you want to disable it for some reason, you can just put an RTS there."},{"address":"$03C164","length":"1 byte","beginsAt":246116,"endsAt":246116,"type":"Misc.","descriptio":"Time to stall Iggy/Larry's platform in between rotations"},{"address":"$03C25B","length":"4 bytes. Ends at $03C25E.","beginsAt":246363,"endsAt":246366,"type":"Sprite tilemap related","descriptio":"Chainsaw's Motor Tilemap"},{"address":"$03C2BB","length":"1 byte","beginsAt":246459,"endsAt":246459,"type":"Sprite tilemap related","descriptio":"Middle of Chainsaw"},{"address":"$03C2C0","length":"1 byte","beginsAt":246464,"endsAt":246464,"type":"Sprite tilemap related","descriptio":"Top of Chainsaw"},{"address":"$03C2EC","length":"1 byte","beginsAt":246508,"endsAt":246508,"type":"Sprite number","descriptio":"Sprite spawned by the checkpoint block (1up)"},{"address":"$03C319","length":"1 byte","beginsAt":246553,"endsAt":246553,"type":"Sprite number","descriptio":"Sprite that the invisible mushroom is made from"},{"address":"$03C33F","length":"1 byte","beginsAt":246591,"endsAt":246591,"type":"Sprite physics","descriptio":"Y speed of mushroom after spawning from an invisible mushroom."},{"address":"$03C343","length":"1 byte","beginsAt":246595,"endsAt":246595,"type":"Sound effect","descriptio":"Sound effect played when Mario discovers an invisible mushroom. The bank is stores to is located at $03:C345, default bank is $1DFC."},{"address":"$03C348","length":"4 bytes. Ends at $03C34B.","beginsAt":246600,"endsAt":246603,"type":"Sprite physics","descriptio":"Ninji's vertical speed when jumping"},{"address":"$03C36A","length":"1 byte","beginsAt":246634,"endsAt":246634,"type":"Misc.","descriptio":"Change from 04 to 0C to fix a bug where Ninjis can clip through ceilings."},{"address":"$03C375","length":"1 byte","beginsAt":246645,"endsAt":246645,"type":"Misc.","descriptio":"Time it takes Ninji to jump"},{"address":"$03C3B3","length":"12 bytes. Ends at $03C3BE.","beginsAt":246707,"endsAt":246718,"type":"Sprite tilemap related","descriptio":"Dry Bones x-displacement table (Bone, Head, Body)"},{"address":"$03C3BF","length":"3 bytes. Ends at $03C3C1.","beginsAt":246719,"endsAt":246721,"type":"Sprite tilemap related","descriptio":"Dry Bones palette/gfx page (Facing right) (Bone, Head, Body)"},{"address":"$03C3C2","length":"3 bytes. Ends at $03C3C4.","beginsAt":246722,"endsAt":246724,"type":"Sprite tilemap related","descriptio":"Dry Bones palette/gfx page (Facing left) (Bone, Head, Body)"},{"address":"$03C3C5","length":"9 bytes. Ends at $03C3CD.","beginsAt":246725,"endsAt":246733,"type":"Sprite tilemap related","descriptio":"Dry Bones y-displacement table (Bone, Head, Body)"},{"address":"$03C3CE","length":"9 bytes. Ends at $03C3D6.","beginsAt":246734,"endsAt":246742,"type":"Sprite tilemap related","descriptio":"Dry Bones tile table"},{"address":"$03C44E","length":"65 bytes. Ends at $03C48E.","beginsAt":246862,"endsAt":246926,"type":"Sprite subroutine (JSL)","descriptio":"Dry Bones's bone-throwing subroutine. It can be JSL'd to.\n\n$03C462 - [06] Extended sprite number to throw.\n$03C46A - [10] Y offset of the bone relative to the Dry Bones's position.\n$03C486 - [18] X speed of the bone when the Dry Bones is facing right.\n$03C48A - [E8] X speed of the bone when the Dry Bones is facing left."},{"address":"$03C493","length":"9 bytes. Ends at $03C49B.","beginsAt":246931,"endsAt":246939,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Disco Ball"},{"address":"$03C49C","length":"9 bytes. Ends at $03C4A4.","beginsAt":246940,"endsAt":246948,"type":"Sprite tilemap related","descriptio":"Spotlight / Disco Ball properties, YXPPCCCT."},{"address":"$03C575","length":"1 byte","beginsAt":247157,"endsAt":247157,"type":"Sprite Misc.","descriptio":"Spotlight sprite windowing update frequency. Default value is 03, which means the windowing is updated every 4 frames. Change to 00 to make it update every frame, giving it a smoother movement."},{"address":"$03C9B9","length":"40 bytes. Ends at $03C9E0.","beginsAt":248249,"endsAt":248288,"type":"Sprite tilemap related","descriptio":"Fireworks Tilemap"},{"address":"$03CBAD","length":"2 bytes. Ends at $03CBAE.","beginsAt":248749,"endsAt":248750,"type":"Coordinate","descriptio":"X-position of sprite spawned by Puntin' Chuck (facing right/left)"},{"address":"$03CBAF","length":"2 bytes. Ends at $03CBB0.","beginsAt":248751,"endsAt":248752,"type":"Sprite physics","descriptio":"X-speed of sprite spawned by Puntin' Chuck, high byte (facing right/left)"},{"address":"$03CBB1","length":"2 bytes. Ends at $03CBB2.","beginsAt":248753,"endsAt":248754,"type":"Sprite physics","descriptio":"X-speed of sprite spawned by Puntin' Chuck, low byte (facing right/left)"},{"address":"$03CBBA","length":"1 byte","beginsAt":248762,"endsAt":248762,"type":"Sprite number","descriptio":"Sprite Puntin' Chuck kicks"},{"address":"$03CBC6","length":"1 byte","beginsAt":248774,"endsAt":248774,"type":"Sprite Misc.","descriptio":"Status of sprite spawned by Puntin' Chuck"},{"address":"$03CBFE","length":"1 byte","beginsAt":248830,"endsAt":248830,"type":"Sprite physics","descriptio":"Y-speed of sprite spawned by Puntin' Chuck"},{"address":"$03CC38","length":"7 bytes. Ends at $03CC3E.","beginsAt":248888,"endsAt":248894,"type":"Sprite Misc.","descriptio":"Possible X positions for Lemmy/Wendy and their decoys."},{"address":"$03CC40","length":"7 bytes. Ends at $03CC46.","beginsAt":248896,"endsAt":248902,"type":"Sprite Misc.","descriptio":"Possible Y positions for Lemmy and his decoys."},{"address":"$03CC48","length":"8 bytes. Ends at $03CC4F.","beginsAt":248904,"endsAt":248911,"type":"Sprite Misc.","descriptio":"Number of frames Wendy and Lemmy take to emerge from their pipes, indexed by the animation they are performing."},{"address":"$03CC50","length":"1 byte","beginsAt":248912,"endsAt":248912,"type":"Sprite Misc.","descriptio":"Number of frames that Wendy/Lemmy's dummies take to rise out of their pipes."},{"address":"$03CC5A","length":"48 bytes. Ends at $03CC89.","beginsAt":248922,"endsAt":248969,"type":"Sprite Misc.","descriptio":"Indexes to $03CC38 / $03CC40 to choose from for each RNG value (00-0F). The first set of 16 bytes is used for Wendy/Lemmy, the second set is the corresponding value for the first dummy, and the third set is the corresponding value for the second dummy."},{"address":"$03CCB7","length":"1 byte","beginsAt":249015,"endsAt":249015,"type":"Sprite Misc.","descriptio":"Initial Y position of Wendy and her decoys."},{"address":"$03CD27","length":"1 byte","beginsAt":249127,"endsAt":249127,"type":"Timer","descriptio":"Amount of time Lemmy/Wendy remain vulnerable before retreating into their pipes. However, their animations will become glitched if this is set higher than its initial value of 0x40."},{"address":"$03CDD5","length":"1 byte","beginsAt":249301,"endsAt":249301,"type":"Misc.","descriptio":"Setting for Lemmy/Wendy's decoys. 00 - keep appearing after boss's defeat, 01 - interaction disabled, 02 - paralyzed, 03 - normal"},{"address":"$03CE01","length":"1 byte","beginsAt":249345,"endsAt":249345,"type":"Timer","descriptio":"How long until Lemmy/Wendy and enemies energe from the pipes."},{"address":"$03CE06","length":"1 byte","beginsAt":249350,"endsAt":249350,"type":"Misc.","descriptio":"Lemmy/Wendy/decoy speed when retreating into a pipe."},{"address":"$03CE11","length":"1 byte","beginsAt":249361,"endsAt":249361,"type":"Misc.","descriptio":"Change to F0 to make Lemmy/Wendy and enemies immediately go back into the pipe when they have been hit. (will not play the correct! sound effect.)"},{"address":"$03CE1A","length":"1 byte","beginsAt":249370,"endsAt":249370,"type":"Misc.","descriptio":"Lemmy and Wendy's HP"},{"address":"$03CE25","length":"1 byte","beginsAt":249381,"endsAt":249381,"type":"Sound effect","descriptio":"Lemmy/Wendy falling Sound Effect."},{"address":"$03CE34","length":"1 byte","beginsAt":249396,"endsAt":249396,"type":"Sound effect","descriptio":"Correct! Sound Effect."},{"address":"$03CE47","length":"1 byte","beginsAt":249415,"endsAt":249415,"type":"Sound effect","descriptio":"Incorrect sound effect for Lemmy/Wendy Battle."},{"address":"$03CE71","length":"1 byte","beginsAt":249457,"endsAt":249457,"type":"Misc.","descriptio":"Y-position where Lemmy/Wendy lands in the lava after being defeated."},{"address":"$03CE7F","length":"1 byte","beginsAt":249471,"endsAt":249471,"type":"Sound effect","descriptio":"Lemmy/Wendy falling in lava Sound Effect."},{"address":"$03CE80","length":"2 bytes. Ends at $03CE81.","beginsAt":249472,"endsAt":249473,"type":"Misc.","descriptio":"Change to [80 05] to disable the lava splash and sound effect when Lemmy/Wendy fall into lava."},{"address":"$03CE95","length":"1 byte","beginsAt":249493,"endsAt":249493,"type":"Timer","descriptio":"How long the fadeout is on the screen before the Castle Destruction Sequence appears."},{"address":"$03CE9A","length":"1 byte","beginsAt":249498,"endsAt":249498,"type":"Music","descriptio":"Music played after Lemmy/Wendy is defeated"},{"address":"$03CEB0","length":"1 byte","beginsAt":249520,"endsAt":249520,"type":"Misc.","descriptio":"Minimum speed Mario needs to be falling to stomp Lemmy/Wendy/decoys. Set to 01 to prevent Mario from getting unexpectedly damaged when trying to stomp them underwater. 00 causes Lemmy/Wendy/decoys to be always stomped on contact with Mario."},{"address":"$03CEB8","length":"1 byte","beginsAt":249528,"endsAt":249528,"type":"Misc.","descriptio":"Points you get for hitting Lemmy/Wendy or decoys. Default 02 - 400pts."},{"address":"$03CEC2","length":"1 byte","beginsAt":249538,"endsAt":249538,"type":"Sound effect","descriptio":"Hitting Lemmy/Wendy/enemies sound effect. (note: when hitting Lemmy/Wendy, 2 sound effects are played together.)"},{"address":"$03CECC","length":"1 byte","beginsAt":249548,"endsAt":249548,"type":"Sound effect","descriptio":"Sfx that plays when Lemmy/Wendy has been hit."},{"address":"$03CED4","length":"1 byte","beginsAt":249556,"endsAt":249556,"type":"Misc.","descriptio":"Number of times minus one Lemmy/Wendy must be hit before other sprites in the room vanish."},{"address":"$03CEE1","length":"1 byte","beginsAt":249569,"endsAt":249569,"type":"Timer","descriptio":"How long Lemmy stalls after being hit."},{"address":"$03CFAF","length":"1 byte","beginsAt":249775,"endsAt":249775,"type":"Sprite tilemap related","descriptio":"Change to 08 to fix the flip of Wendy's Bow (In conjunction with three other addresses)"},{"address":"$03CFB5","length":"1 byte","beginsAt":249781,"endsAt":249781,"type":"Sprite tilemap related","descriptio":"Change to 08 to fix Wendy's Bow (In conjunction with three other addresses)"},{"address":"$03D11A","length":"138 bytes. Ends at $03D1A3.","beginsAt":250138,"endsAt":250275,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Lemmy Koopa(and decoys)"},{"address":"$03D1A4","length":"138 bytes. Ends at $03D22D.","beginsAt":250276,"endsAt":250413,"type":"Sprite tilemap related","descriptio":"Sprite tilemap: Wendy O. Koopa(and decoys).\n$03D1D7 - Change to 1F 1E to fix Wendy's Bow (In conjunction with three other addresses)\n$03D1DD - Change to 1E 1F to fix Wendy's Bow (In conjunction with three other addresses)"},{"address":"$03D22E","length":"111 bytes. Ends at $03D29C.","beginsAt":250414,"endsAt":250524,"type":"Sprite tilemap related","descriptio":"Lemmy Koopa's Palette/gfx page/priority/flip"},{"address":"$03D2A0","length":"20 bytes. Ends at $03D2B3.","beginsAt":250528,"endsAt":250547,"type":"Sprite tilemap related","descriptio":"Lemmy Koopa's Decoys' Palette/gfx page/priority/flip"},{"address":"$03D2B8","length":"110 bytes. Ends at $03D325.","beginsAt":250552,"endsAt":250661,"type":"Sprite tilemap related","descriptio":"Wendy Koopa's Palette/gfx page/priority/flip"},{"address":"$03D32A","length":"20 bytes. Ends at $03D33D.","beginsAt":250666,"endsAt":250685,"type":"Sprite tilemap related","descriptio":"Wendy Koopa's Decoys' Palette/gfx page/priority/flip"},{"address":"$03D6AC","length":"84 bytes. Ends at $03D6FF.","beginsAt":251564,"endsAt":251647,"type":"Empty","descriptio":"Unused data."},{"address":"$03D71B","length":"1 byte","beginsAt":251675,"endsAt":251675,"type":"Misc.","descriptio":"Number of Reznors killed before bridge begins breaking"},{"address":"$03D739","length":"1 byte","beginsAt":251705,"endsAt":251705,"type":"Timer","descriptio":"Change $03D74E to [xx] and $03D739 to [xx-4] to change the speed at which the Reznor bridge breaks.\n\nxx is the speed at which it breaks. $3C is the original, $05 is the fastest that will work, and $FF is the slowest."},{"address":"$03D74E","length":"1 byte","beginsAt":251726,"endsAt":251726,"type":"Timer","descriptio":"Reznor bridge's shatter timer initialization. Times the shatter SFX and the smoke puff for Reznor bridge tile destruction. Actual removal of the tile set by $03D739. Change this in conjunction to $03D739 to alter the bridge shattering speed. Default is $40."},{"address":"$03D9DE","length":"480 bytes. Ends at $03DBBD.","beginsAt":252382,"endsAt":252861,"type":"Mode 7 tilemap","descriptio":"Morton, Roy and Ludwig tilemap"},{"address":"$03DBBE","length":"432 bytes. Ends at $03DD6D.","beginsAt":252862,"endsAt":253293,"type":"Mode 7 tilemap","descriptio":"Bowser tilemap"},{"address":"$03DD6E","length":"5 bytes. Ends at $03DD72.","beginsAt":253294,"endsAt":253298,"type":"Pointer","descriptio":"Low byte for the pointers to the SNES addresses for Morton, Roy, and Ludwig's palettes. The last two bytes are unused."},{"address":"$03DD73","length":"5 bytes. Ends at $03DD77.","beginsAt":253299,"endsAt":253303,"type":"Pointer","descriptio":"High byte for the pointers to the SNES addresses for Morton, Roy, and Ludwig's palettes. The last two bytes are unused."},{"address":"$03DD78","length":"5 bytes. Ends at $03DD7C.","beginsAt":253304,"endsAt":253308,"type":"Graphics","descriptio":"Graphics files used for Morton, Roy, and Ludwig. The last two bytes are unused."},{"address":"$03DD8E","length":"1 byte","beginsAt":253326,"endsAt":253326,"type":"Misc.","descriptio":"Y position of the center of rotation for Reznor's wheel."},{"address":"$03DD92","length":"1 byte","beginsAt":253330,"endsAt":253330,"type":"Misc.","descriptio":"Size of Reznor's wheel. The closer to 00, the larger."},{"address":"$03DF0A","length":"1 byte","beginsAt":253706,"endsAt":253706,"type":"Misc.","descriptio":"How many animation frames Clown Car's propeller has, -1"},{"address":"$03E016","length":"5 bytes. Ends at $03E01A.","beginsAt":253974,"endsAt":253978,"type":"ASM","descriptio":"Lightning sound FX for Bowser battle. Change to EA EA EA EA EA to disable noise."},{"address":"$03E02D","length":"7 bytes. Ends at $03E033.","beginsAt":253997,"endsAt":254003,"type":"Misc.","descriptio":"Code for loading BG flashes during Bowser battle. Change to EA EA EA EA EA EA EA to disable."},{"address":"$03E043","length":"4 bytes. Ends at $03E046.","beginsAt":254019,"endsAt":254022,"type":"Pointer","descriptio":"Pointer to Bowser's first palette"},{"address":"$03E05C","length":"932 bytes. Ends at $03E3FF.","beginsAt":254044,"endsAt":254975,"type":"Empty","descriptio":"Unused data."},{"address":"$03E400","length":"6624 bytes. Ends at $03FDDF.","beginsAt":254976,"endsAt":261599,"type":"Music","descriptio":"Credit music SPC data."},{"address":"$03FDE0","length":"544 bytes. Ends at $03FFFF.","beginsAt":261600,"endsAt":262143,"type":"Empty","descriptio":"Unused data."},{"address":"$048086","length":"51 bytes. Ends at $0480B8.","beginsAt":295046,"endsAt":295096,"type":"Subroutine (JSR)","descriptio":"Seems to handle drawing the default water tiles on the overworld."},{"address":"$048221","length":"16 bytes. Ends at $048230.","beginsAt":295457,"endsAt":295472,"type":"Overworld","descriptio":"Max range for overworld scrolling when start is pressed. 16bit. Indexed by controller bits. Order: null, right, left, both (same as right), null, bottom, top, both (same as bottom)"},{"address":"$04824B","length":"1 byte","beginsAt":295499,"endsAt":295499,"type":"Debug","descriptio":"Change from 80 to F0, and pushing select on the OW will cycle through Yoshi colours."},{"address":"$04828D","length":"2 bytes. Ends at $04828E.","beginsAt":295565,"endsAt":295566,"type":"ASM","descriptio":"Change to 80 06 to disable \"Lives Exchanger\" function."},{"address":"$048380","length":"1 byte","beginsAt":295808,"endsAt":295808,"type":"Misc.","descriptio":"Change to 00 to disable looking around the overworld map"},{"address":"$04857D","length":"39 bytes. Ends at $0485A3.","beginsAt":296317,"endsAt":296355,"type":"Pointer","descriptio":"Pointers that are indexed by $7E13D9. Each one points to a different process running on the overworld."},{"address":"$0485AA","length":"2 bytes. Ends at $0485AB.","beginsAt":296362,"endsAt":296363,"type":"Overworld border","descriptio":"X placement of Mario on the overworld border"},{"address":"$0485B2","length":"2 bytes. Ends at $0485B3.","beginsAt":296370,"endsAt":296371,"type":"Overworld border","descriptio":"Y placement of Mario on the overworld border"},{"address":"$0485BC","length":"1 byte","beginsAt":296380,"endsAt":296380,"type":"Overworld border","descriptio":"Mario's speed on the overworld (the one in the top-left). Since you don't actually move, it's only a graphical aspect. 0 is the lowest value possible - stand still. 1-3F speed up gradually. Other values aren't recommended and/or give the same effect."},{"address":"$0485CF","length":"4 bytes. Ends at $0485D2.","beginsAt":296399,"endsAt":296402,"type":"Overworld border","descriptio":"Change from 22 BD E2 00 to EA EA EA EA to remove Mario from the Overworld border"},{"address":"$0485E8","length":"1 byte","beginsAt":296424,"endsAt":296424,"type":"Overworld border","descriptio":"Change this byte to [60] (RTS) to get rid of the 32x32 box that surrounds the Mario image."},{"address":"$0485E9","length":"1 byte","beginsAt":296425,"endsAt":296425,"type":"Overworld border","descriptio":"X placement of first row of tiles behind Mario"},{"address":"$0485ED","length":"1 byte","beginsAt":296429,"endsAt":296429,"type":"Overworld border","descriptio":"Y placement of tile group behind Mario"},{"address":"$048603","length":"1 byte","beginsAt":296451,"endsAt":296451,"type":"Overworld border","descriptio":"Tile used for group behind Mario"},{"address":"$048608","length":"1 byte","beginsAt":296456,"endsAt":296456,"type":"Overworld border","descriptio":"Attributes of group behind Mario"},{"address":"$04861B","length":"1 byte","beginsAt":296475,"endsAt":296475,"type":"Overworld border","descriptio":"X placement of second to fourth row of tiles behind Mario"},{"address":"$048769","length":"3 bytes. Ends at $04876B.","beginsAt":296809,"endsAt":296811,"type":"ASM","descriptio":"Change to EA EA EA to keep the inactive player from appearing on the map"},{"address":"$0487B4","length":"1 byte","beginsAt":296884,"endsAt":296884,"type":"Sprite tilemap related","descriptio":"Tile to use for both halves of Mario's halo on the overworld."},{"address":"$0487BC","length":"1 byte","beginsAt":296892,"endsAt":296892,"type":"Sprite tilemap related","descriptio":"Properties of left half of Mario's halo on the overworld, in YXPPCCCT format."},{"address":"$0487C1","length":"1 byte","beginsAt":296897,"endsAt":296897,"type":"Sprite tilemap related","descriptio":"Properties of right half of Mario's halo on the overworld, in YXPPCCCT format."},{"address":"$0487CB","length":"384 bytes. Ends at $04894A.","beginsAt":296907,"endsAt":297290,"type":"Sprite tilemap related","descriptio":"Overworld sprite tilemap (Mario/Luigi) (2 bytes per 8x8 tile)"},{"address":"$0489DE","length":"384 bytes. Ends at $048B5D.","beginsAt":297438,"endsAt":297821,"type":"Sprite tilemap related","descriptio":"Overworld sprite tilemap (More M/L, Yoshi)\nChange $04:8A36 to [42 22 43 22 52 22 53 22] to fix a bug where Yoshi is partially red sometimes, no matter which color he really has."},{"address":"$048DDA","length":"1 byte","beginsAt":298458,"endsAt":298458,"type":"Misc.","descriptio":"Change to 80 to fix a rather odd bug caused by playing a level immediately after beating a boss in Sunken Ghost Ship's original level (level 018), in which Yoshi will display extremely strangely and goal tapes/spheres will stop Mario rather than making him walk."},{"address":"$048E2E","length":"1 byte","beginsAt":298542,"endsAt":298542,"type":"Music","descriptio":"Change to 80 to fix the glitch that occurs when Mario defeats one of the Koopalings and the music on the Overworld \"disappears\". Also applies for Custom Music."},{"address":"$048EEB","length":"3 bytes. Ends at $048EED.","beginsAt":298731,"endsAt":298733,"type":"ASM","descriptio":"If you change this to EA EA EA, the background water tiles on the overworld will not show up."},{"address":"$048EFA","length":"1 byte","beginsAt":298746,"endsAt":298746,"type":"Misc.","descriptio":"On which submap Mario should be walking upwards after the intro screen (walking to Yoshi's House)."},{"address":"$048F01","length":"1 byte","beginsAt":298753,"endsAt":298753,"type":"Coordinate","descriptio":"On which X position Mario should be walking upwards after the intro screen (walking to Yoshi's House).\n\nIn other words, on this X-position, the intro march will be triggered at the beginning of the game."},{"address":"$048F08","length":"1 byte","beginsAt":298760,"endsAt":298760,"type":"Coordinate","descriptio":"On which Y position Mario should be walking upwards after the intro screen (walking to Yoshi's House). (To be used with $05B15C.)"},{"address":"$048F7F","length":"8 bytes. Ends at $048F86.","beginsAt":298879,"endsAt":298886,"type":"Misc.","descriptio":"The overworld tiles that trigger a save prompt. default is $58 (fortress), $59 (unrevealed fortress, not used in the original game because all tiles are revealed before you play them), $5D (castle), $63 (ghost house), $77,$79 (switch palaces), $7E (yellow dots from special world), $80 (Sunken Ship tile)"},{"address":"$048F93","length":"1 byte","beginsAt":298899,"endsAt":298899,"type":"ASM","descriptio":"[6C] Changing this to [00] will cause all overworld tiles to show the save prompt when the corresponding level is beaten."},{"address":"$048F94","length":"72 bytes. Ends at $048FDB.","beginsAt":298900,"endsAt":298971,"type":"Subroutine (JSR)","descriptio":"\"Set up saving\" routine. This copies a number of RAM addresses to the table at $1F49. You probably want to copy this to your patch (it contains lots of weirdness you don't want, so don't use the JSL to RTS trick)."},{"address":"$04906C","length":"12 bytes. Ends at $049077.","beginsAt":299116,"endsAt":299127,"type":"Overworld","descriptio":"Table of the no-auto-move levels on the overworld. Each of the values are translevel numbers in 16-bit."},{"address":"$049078","length":"10 bytes. Ends at $049081.","beginsAt":299128,"endsAt":299137,"type":"Misc.","descriptio":"The list of levels that have hard-coded paths. Each byte represents a level. The value 0xFF means to check for a particular overworld position instead of a level (for the pipe that Chocolate Island 2 leads to). Setting any of these levels to an invalid level (e.g. 0xFE) will disable that hardcoded path."},{"address":"$049082","length":"4 bytes. Ends at $049085.","beginsAt":299138,"endsAt":299141,"type":"Coordinate","descriptio":"The 16-bit X and Y position in the overworld that will be used for the hardcoded path from the pipe to Chocolate Island 2."},{"address":"$049086","length":"68 bytes. Ends at $0490C9.","beginsAt":299142,"endsAt":299209,"type":"Misc.","descriptio":"This is a list of all of the hardcoded paths, in the same order as the levels defined in $04:9078. The paths are a list of the Layer 1 tiles that Mario would encounter along the path if the path were not hardcoded. Each path ends in a level tile of some kind, which matches a visible level tile in the world."},{"address":"$0490CA","length":"68 bytes. Ends at $04910D.","beginsAt":299210,"endsAt":299277,"type":"Misc.","descriptio":"Hardcoded path information. For each tile in the list at $04:9086, there is a corresponding tile in this list. These tiles determine the facing of Mario while walking along that path.\n$02: Down\n$00: Up\n$04: Left\n$06: Right"},{"address":"$04910E","length":"18 bytes. Ends at $04911F.","beginsAt":299278,"endsAt":299295,"type":"Misc.","descriptio":"Hardcoded path data. A list of offsets into the fields at $04:9086 and $04:90CA. This list corresponds to the list at $04:9078; this offset tells where the tile data for that level's hardcoded path begins."},{"address":"$049136","length":"1 byte","beginsAt":299318,"endsAt":299318,"type":"Misc.","descriptio":"DEBUG: Change to F0 to make player warp to Star Road if Select is pressed on top of Yoshi's House (tile 0x56)."},{"address":"$049171","length":"1 byte","beginsAt":299377,"endsAt":299377,"type":"Sound effect","descriptio":"Sound effect played when warping over a star road tile."},{"address":"$0491B8","length":"29 bytes. Ends at $0491D4.","beginsAt":299448,"endsAt":299476,"type":"Misc.","descriptio":"Loads Mario/Luigi's powerups, coins, Yoshies, and lives"},{"address":"$0491E1","length":"1 byte","beginsAt":299489,"endsAt":299489,"type":"Music","descriptio":"[80] Music to use when entering a level."},{"address":"$0491E3","length":"1 byte","beginsAt":299491,"endsAt":299491,"type":"Music","descriptio":"[FB] Change to F9 or FC to use sound effect when entering a level."},{"address":"$04922E","length":"1 byte","beginsAt":299566,"endsAt":299566,"type":"Misc.","descriptio":"Change to 00 to make Mario stay in place after completing a level on the overworld (as opposing to moving to the next level)"},{"address":"$049264","length":"1 byte","beginsAt":299620,"endsAt":299620,"type":"Misc.","descriptio":"On the overworld, Mario always faces you after he moves onto a level tile. Change the 09 to a 00 to disable that. Mario will continue facing the last direction he was moving towards after he moves onto a level tile."},{"address":"$049291","length":"3 bytes. Ends at $049293.","beginsAt":299665,"endsAt":299667,"type":"Debug","descriptio":"If you replace this with \"4C AF 92\" (JMP $92AF), it will enable to walk in unrevealed paths on the overworld.\n(But it will not work correctly with star road warps)"},{"address":"$049414","length":"2 bytes. Ends at $049415.","beginsAt":300052,"endsAt":300053,"type":"Mario physics","descriptio":"Speed of Mario on the OW (Higher = faster). First byte is normal ground, second is stairs."},{"address":"$049416","length":"8 bytes. Ends at $04941D.","beginsAt":300054,"endsAt":300061,"type":"Overworld","descriptio":"Max range for overworld scrolling when walking. 16bit. Order: left, top, right, bottom"},{"address":"$049426","length":"10 bytes. Ends at $04942F.","beginsAt":300070,"endsAt":300079,"type":"Misc.","descriptio":"List of layer 1 overworld tiles that allow mario to walk from one map to another (\"exit level tiles\" in lunar magic)"},{"address":"$04965C","length":"1 byte","beginsAt":300636,"endsAt":300636,"type":"Overworld","descriptio":"Change to 80 (BRA) to make Mario stand on OW tiles 6A through 6D, instead of swimming through them."},{"address":"$04968D","length":"24 bytes. Ends at $0496A4.","beginsAt":300685,"endsAt":300708,"type":"Sound effect","descriptio":"Code that handles what overworld tiles don't play a SFX when stepped on. The tile numbers are used in 16-bit.\n$04968D - Change [AD C1] to [80 10] to make overworld star/pipe tiles play the \"beep\" sound when stepped on.\n$0496A0 - Sound effect that plays when Mario steps on a level tile. Change to 00 to disable."},{"address":"$04969F","length":"6 bytes. Ends at $0496A4.","beginsAt":300703,"endsAt":300708,"type":"Sound effect","descriptio":"Replace [A9 23 00 8D FC 1D] with [EA EA EA EA EA EA] to disable the \"beep\" when Mario moves onto a level tile."},{"address":"$049885","length":"65 bytes. Ends at $0498C5.","beginsAt":301189,"endsAt":301253,"type":"Subroutine (JSR)","descriptio":"Calculator for the players overworld tile position. Before calling this function $00 must contain the 16 bit X position of the player, $02 must contain the 16 bit Y position of the player, and X must be 0 or 1 (luigi, mario). Additionally, A must be 16 bit."},{"address":"$0498CA","length":"1 byte","beginsAt":301258,"endsAt":301258,"type":"Overworld","descriptio":"Initial Y speed of the player when walking up to Yoshi's house. Each frame, he moves up one pixel, and then he's moved down this many 256ths of a pixel. Since the default value for this is #$80, this means Mario moves up #$100-#$80=#$80 pixel 256ths, which is half a pixel."},{"address":"$0498F0","length":"1 byte","beginsAt":301296,"endsAt":301296,"type":"Coordinate","descriptio":"At which Y position Mario should stop the intro march on the overworld (walking to Yoshi's house after start of new game). Default: $78."},{"address":"$049964","length":"170 bytes. Ends at $049A0D.","beginsAt":301412,"endsAt":301581,"type":"Overworld","descriptio":"A big bunch of tables for which exits on the overworld lead to where.\n\n$049964 to $0499A9: Five bytes for each entry that describe where each exit is (the tile Mario enters). First two bytes are Y position ($1F19), then comes X position ($1F21), then finally the submap ($13C3).\n$0499AA to $0499EF: Five bytes for each entry that describe where each exit leads (the tile Mario ends at). Same format as above.\n$0499F0 to $049A0D: Two bytes for each entry, to additionally describe the target. First comes Y high divided by 16 ($1F21), then comes X high divided by 16 ($1F1F).\n\nIf an exit is not present at the exact listed position, Mario is not moved, and tries to exit from the same tile again."},{"address":"$049AC5","length":"460 bytes. Ends at $049C90.","beginsAt":301765,"endsAt":302224,"type":"Layer 3","descriptio":"Level names.\nIt's almost raw tilemaps ready to be uploaded to VRAM (no YXPCCCTT), but if the highest bit is set, it gets cleared and it's the end of the area.\nHowever, it's cut to small chunks. See $04A0FC (0x222FC) for how they're put together."},{"address":"$049D22","length":"2 bytes. Ends at $049D23.","beginsAt":302370,"endsAt":302371,"type":"Coordinate","descriptio":"Position of OW level names. Increase/decrease by 1 to make it move up to the right/left, increase/decrease by 20 to make it move down/upwards.\nNote that #$8B should be considered the low byte for the address, not #$50."},{"address":"$049EA7","length":"162 bytes. Ends at $049F48.","beginsAt":302759,"endsAt":302920,"type":"Misc.","descriptio":"Two bytes per tile, starts at tile $01 and goes to $51.\nFirst byte is X distance mario moves across tile\nSecond byte is Y distance mario moves across tile\nThe distance is based on walking right for a horizontal path\nand walking down for a vertical path (see entry for $04:9F49)"},{"address":"$049F11","length":"2 bytes. Ends at $049F12.","beginsAt":302865,"endsAt":302866,"type":"Overworld","descriptio":"[FC F8] Change to [10 04] to allow overworld path tile 36 to be used as the missing water path tile. Must be combined with $049FB3, $04A020, and $04A04D."},{"address":"$049F49","length":"162 bytes. Ends at $049FEA.","beginsAt":302921,"endsAt":303082,"type":"Misc.","descriptio":"Two bytes per tile, starts at tile $01 and goes to $51\nIf the two bytes are $01,$00 then the tile is a horizontal path\nIf they are $00,$01 then a vertical path.\nNo other values were used in game\nIt seems odd to use two bytes to do this, so it might be worth experimenting with other values"},{"address":"$049FB3","length":"2 bytes. Ends at $049FB4.","beginsAt":303027,"endsAt":303028,"type":"Overworld","descriptio":"[00 01] Change to [01 00] to allow overworld path tile 36 to be used as the missing water path tile. Must be combined with $049F11, $04A020, and $04A04D."},{"address":"$049FEB","length":"81 bytes. Ends at $04A03B.","beginsAt":303083,"endsAt":303163,"type":"Misc.","descriptio":"One byte per tile, starts at tile $01 and goes to $51\nMario pose while walking\n\n0 - Mario Vertical\n4 - Mario Horizontal\n8 - Mario Swimming Vertical\nC - Mario Swimming Horizontal\n10 - Entering Level\n14 - Climbing\n18-FF - Unused\n\nOnly multiples of 4 seem to be used, using a value inbetween just seems to result in oddly animated versions of the normal values"},{"address":"$04A020","length":"1 byte","beginsAt":303136,"endsAt":303136,"type":"Overworld","descriptio":"[08] Change to [0C] to allow overworld path tile 36 to be used as the missing water path tile. Must be combined with $049F11, $049FB3, and $04A04D."},{"address":"$04A04D","length":"1 byte","beginsAt":303181,"endsAt":303181,"type":"Overworld","descriptio":"[36] Change to [87] to allow overworld path tile 36 to be used as the missing water path tile. Must be combined with $049F11, $049FB3, and $04A020."},{"address":"$04A0FC","length":"186 bytes. Ends at $04A1B5.","beginsAt":303356,"endsAt":303541,"type":"Layer 3","descriptio":"How to put level names together.\nFormat: 16 bits/entry.\nFirst byte contains the offsets to the second and third parts (lowest four bits there is third part, upper four bits there is second), while the second byte (except the highest bit, which is unused) contains the offset to the first part.\nNote that those offsets aren't direct, they point to $049C91, $049CCF, or $049CED (note: those offsets are 16bit), which contains the real offsets to $049AC5."},{"address":"$04A1B6","length":"586 bytes. Ends at $04A3FF.","beginsAt":303542,"endsAt":304127,"type":"Empty","descriptio":"Unused data"},{"address":"$04A400","length":"307 bytes. Ends at $04A532.","beginsAt":304128,"endsAt":304434,"type":"Overworld border","descriptio":"Layer 3 Border Tile Data: The 95s, 96s, and 97s are the tiles used for the Mushrooms, Stars, and Fire Flowers (respectively). The overworld border's \"filler\" tiles (tile FE by default) are determined by bytes at: $04A404 (top rows overworld border); $04A40A (first column, left-hand side); $04A410 (second column, left-hand side); $04A416 (top right corner by map shadow); $04A41C (right-hand side column); $04A422 (bottom rows).\n$04A530 is the x beside Mario and the Lives in the overword border. Change from 8F to FE to remove it."},{"address":"$04A533","length":"6904 bytes. Ends at $04C02A.","beginsAt":304435,"endsAt":311338,"type":"Misc.","descriptio":"Overworld layer 2 data's tilemap data: Tile numbers.\n\nTable is compressed in the LC_RLE2 format"},{"address":"$04C02B","length":"5709 bytes. Ends at $04D677.","beginsAt":311339,"endsAt":317047,"type":"Misc.","descriptio":"Overworld layer 2 data's tilemap data: Tile properties (YXPCCCTT).\n\nTable is compressed in the LC_RLE2 format"},{"address":"$04D678","length":"96 bytes. Ends at $04D6D7.","beginsAt":317048,"endsAt":317143,"type":"Overworld","descriptio":"Which directions you go in after beating a level, indexed by level ID ($13BF).\nFormat: nnss----\nnn = regular exit\nss = secret exit\n---- = unknown (unused?)\n00 is up, 01 is down, 10 is left, 11 is right."},{"address":"$04DA1D","length":"44 bytes. Ends at $04DA48.","beginsAt":317981,"endsAt":318024,"type":"Overworld","descriptio":"A 22-byte table of Layer 1 overworld tile numbers that change into other tiles, followed by a 22-byte table of the tile numbers that they become. Entries $09 [53->43], $0A [52->44], and $15 [54->23] correspond to tiles that are unused in the original SMW, so they could be changed to other tile numbers if need be.\n\n(This is how things such as revealing level tiles work: tile numbers from the first list are transformed into the corresponding tiles from the second list when activated.)"},{"address":"$04DABA","length":"53 bytes. Ends at $04DAEE.","beginsAt":318138,"endsAt":318190,"type":"Subroutine (JSR)","descriptio":"Subroutine that decompresses LC_RLE2 data."},{"address":"$04DBC8","length":"7 bytes. Ends at $04DBCE.","beginsAt":318408,"endsAt":318414,"type":"Music","descriptio":"Music tracks used by the different submaps, indexed by submap ID ($1F11)."},{"address":"$04DD57","length":"54 bytes. Ends at $04DD8C.","beginsAt":318807,"endsAt":318860,"type":"Subroutine (JSR)","descriptio":"Subroutine that decompresses LC_RLE1 data."},{"address":"$04DD8D","length":"1484 bytes. Ends at $04E358.","beginsAt":318861,"endsAt":320344,"type":"Overworld","descriptio":"A table used by layer 2 events. It contains 0x173 four byte entries. The first two bytes in each entry are for the source offset ($0C8000) (also decides size), the last two are for the target offset ($7F4000)."},{"address":"$04E359","length":"242 bytes. Ends at $04E44A.","beginsAt":320345,"endsAt":320586,"type":"Overworld","descriptio":"Table that tells how many layer 2 tiles each event reveals and where in the table ($04DD8D) they start. This table contains 121 16-bit values; one for each event, and one to tell where $04DD8D ends."},{"address":"$04E453","length":"285 bytes. Ends at $04E56F.","beginsAt":320595,"endsAt":320879,"type":"Subroutine (JSR)","descriptio":"Routine that loads the overworld layer 2 events on game load and OW load after cutscenes (possibly at every OW load)."},{"address":"$04E577","length":"16 bytes. Ends at $04E586.","beginsAt":320887,"endsAt":320902,"type":"Pointer","descriptio":"Pointer to locations in the routine that runs events."},{"address":"$04E587","length":"32 bytes. Ends at $04E5A6.","beginsAt":320903,"endsAt":320934,"type":"Overworld","descriptio":"VRAM addresses (16-bit) to write each of the destroyed castle/fortress/switch palace tiles to.\nLikely not used when LM is done with the ROM."},{"address":"$04E5A7","length":"5 bytes. Ends at $04E5AB.","beginsAt":320935,"endsAt":320939,"type":"Overworld","descriptio":"Layer 1 tile numbers that have a destruction event associated with them. Essentially, the \"before\" tiles."},{"address":"$04E5AC","length":"5 bytes. Ends at $04E5B0.","beginsAt":320940,"endsAt":320944,"type":"Overworld","descriptio":"Top tile to write after each destruction, in the order of $13D0. The table is only used for two-tile destructions (like the castles), so the first three bytes are normally unused."},{"address":"$04E5B1","length":"5 bytes. Ends at $04E5B5.","beginsAt":320945,"endsAt":320949,"type":"Overworld","descriptio":"Bottom/base tile to write after each overworld tile destruction, in the order of $13D0."},{"address":"$04E5B6","length":"32 bytes. Ends at $04E5D5.","beginsAt":320950,"endsAt":320981,"type":"Overworld","descriptio":"Layer 1 tilemap locations (16-bit) for each of the castle/fortress/switch palace destruction events."},{"address":"$04E5D6","length":"16 bytes. Ends at $04E5E5.","beginsAt":320982,"endsAt":320997,"type":"Overworld","descriptio":"Which event numbers will trigger castle/fortress/switch palace tile destruction sequences. Due to a coding error by Nintendo, the table is treated as 0x18 bytes long when it's really only 0x10 bytes."},{"address":"$04E5E6","length":"8 bytes. Ends at $04E5ED.","beginsAt":320998,"endsAt":321005,"type":"Overworld","descriptio":"The overworld tiles that will allow triggering a save prompt when an event has already been cleared. Tile must also exist in the list at $04:8F7F."},{"address":"$04E5EE","length":"82 bytes. Ends at $04E63F.","beginsAt":321006,"endsAt":321087,"type":"Subroutine (JSR)","descriptio":"Subroutine that runs events at level end."},{"address":"$04E660","length":"1 byte","beginsAt":321120,"endsAt":321120,"type":"Misc.","descriptio":"Level that triggers overworld Earthquake sequence"},{"address":"$04E670","length":"1 byte","beginsAt":321136,"endsAt":321136,"type":"Sound effect","descriptio":"Castle Destroyed (OW) Sound Effect."},{"address":"$04E764","length":"1 byte","beginsAt":321380,"endsAt":321380,"type":"Sound effect","descriptio":"SFX that makes the path appear (OW)."},{"address":"$04E8E4","length":"44 bytes. Ends at $04E90F.","beginsAt":321764,"endsAt":321807,"type":"Overworld","descriptio":"Event numbers corresponding to each of the Layer 1 and Layer 2 event tiles that are loaded offscreen in a clean ROM."},{"address":"$04E910","length":"44 bytes. Ends at $04E93B.","beginsAt":321808,"endsAt":321851,"type":"Overworld","descriptio":"Table of whether an offscreen event tile is on Layer 1 (00) or Layer 2 (01)."},{"address":"$04E93C","length":"88 bytes. Ends at $04E993.","beginsAt":321852,"endsAt":321939,"type":"Overworld","descriptio":"Location indices (16-bit) for each of the offscreen event tiles in their respective tilemaps."},{"address":"$04E994","length":"88 bytes. Ends at $04E9EB.","beginsAt":321940,"endsAt":322027,"type":"Overworld","descriptio":"Tile numbers for each of the offscreen events. All entries are 16-bit, with the high byte for Layer 1 tiles being unused."},{"address":"$04EAA8","length":"1 byte","beginsAt":322216,"endsAt":322216,"type":"Timer","descriptio":"Delay between laying down individual OW event tiles. Change from 40 to 00 for minimal delay."},{"address":"$04EB41","length":"1 byte","beginsAt":322369,"endsAt":322369,"type":"Misc.","descriptio":"Determines which submap reveals its event tiles at a slower rate (Default value is 03: Forest of Illusion)"},{"address":"$04EB42","length":"1 byte","beginsAt":322370,"endsAt":322370,"type":"Misc.","descriptio":"Change from D0 to 80 to make the Forest of Illusion submap reveal its event tiles at the same speed as the other submaps"},{"address":"$04ECAB","length":"1 byte","beginsAt":322731,"endsAt":322731,"type":"Sound effect","descriptio":"SFX that makes when the level tile appears."},{"address":"$04EF3E","length":"834 bytes. Ends at $04F27F.","beginsAt":323390,"endsAt":324223,"type":"Empty","descriptio":"Unused data."},{"address":"$04F294","length":"1 byte","beginsAt":324244,"endsAt":324244,"type":"Timer","descriptio":"How long until Switch Palace is destroyed."},{"address":"$04F2A1","length":"1 byte","beginsAt":324257,"endsAt":324257,"type":"Misc.","descriptio":"No. of times the ! blocks are spawned on OW after switch palace."},{"address":"$04F2A5","length":"1 byte","beginsAt":324261,"endsAt":324261,"type":"Sound effect","descriptio":"[1C] Sound played by the switch palace blocks as they fly across the overworld (after pressing a switch)."},{"address":"$04F2AA","length":"1 byte","beginsAt":324266,"endsAt":324266,"type":"Misc.","descriptio":"How many ! blocks are spawned on OW after switch palace."},{"address":"$04F4B6","length":"10 bytes. Ends at $04F4BF.","beginsAt":324790,"endsAt":324799,"type":"Stripe Image","descriptio":"\"MARIO\" text in the Lives Exchanger box. Odd bytes are tile numbers. Even bytes are YXPCCCTT properties."},{"address":"$04F4C4","length":"10 bytes. Ends at $04F4CD.","beginsAt":324804,"endsAt":324813,"type":"Stripe Image","descriptio":"\"LUIGI\" text in the Lives Exchanger box. Odd bytes are tile numbers. Even bytes are YXPCCCTT properties."},{"address":"$04F4F6","length":"4 bytes. Ends at $04F4F9.","beginsAt":324854,"endsAt":324857,"type":"Stripe Image","descriptio":"Tiles for Mario's halo in the Life Exchange box. Even bytes are tile numbers and odd bytes are their YXPCCCTT properties."},{"address":"$04F4FE","length":"4 bytes. Ends at $04F501.","beginsAt":324862,"endsAt":324865,"type":"Stripe Image","descriptio":"Tiles for Luigi's halo in the Life Exchange box. Even bytes are tile numbers and odd bytes are their YXPCCCTT properties."},{"address":"$04F52B","length":"250 bytes. Ends at $04F624.","beginsAt":324907,"endsAt":325156,"type":"Misc.","descriptio":"Main Lives Exchanger routine\n$04F56F is X location of Mario on lives exchange\n$04F570 is Y location of Mario on lives exchange\n$04F575 is X location of Luigi on lives exchange\n$04F576 is Y location of Luigi on lives exchange\n$04F57B is the tile to use for Mario on lives exchange\n$04F57C is Pal/flip/etc. of Mario on lives exchange\n$04F581 is the tile to use for Luigi on lives exchange\n$04F582 is Pal/flip/etc. of Luigi on lives exchange"},{"address":"$04F625","length":"65 bytes. Ends at $04F665.","beginsAt":325157,"endsAt":325221,"type":"Misc.","descriptio":"Overworld sprite data - controls 13 of the 16 slots of the overworld sprite tables (the first 3 of the 16 are reserved for clouds). One overworld sprite has 5 bytes:\nByte 1 - sprite number\nByte 2 - X-Pos, low\nByte 3 - X-Pos, high\nByte 4 - Y-Pos, low\nByte 5 - Y-Pos, high\n\nData is only read once, on titlescreen load. (Which also explains the bug that occurs with the titlescreen showing an unnecessary cloud tile.)"},{"address":"$04F666","length":"6 bytes. Ends at $04F66B.","beginsAt":325222,"endsAt":325227,"type":"Coordinate","descriptio":"X positions of the overworld ghost sprites, relative to their corresponding main map ghosts. Two bytes each. The small size of this table is why you can't have ghosts in any slot other than the last three."},{"address":"$04F66C","length":"6 bytes. Ends at $04F671.","beginsAt":325228,"endsAt":325233,"type":"Coordinate","descriptio":"Y positions of the overworld ghost sprites, relative to their corresponding main map ghosts. Two bytes each. The small size of this table is why you can't have ghosts in any slot other than the last three."},{"address":"$04F709","length":"1 byte","beginsAt":325385,"endsAt":325385,"type":"Overworld","descriptio":"Submaps on where to disable the thunder effect (originally used in Valley of Bowser).\n#$80 - Main map\n#$40 - Yoshi's Island\n#$20 - Vanilla Dome\n#$10 - Forest of Illusion\n#$08 - Valley of Bowser\n#$04 - Special World\n#$02 - Star World\n#$01 - Unused\nNote that the bits in this address disables the thunder in this submap, so to disable it everywhere, #$FF is the correct value. This address affects both colors and sound."},{"address":"$04F737","length":"1 byte","beginsAt":325431,"endsAt":325431,"type":"Music","descriptio":"Sound effect for the thunder in Valley of Bowser."},{"address":"$04F744","length":"1 byte","beginsAt":325444,"endsAt":325444,"type":"Timer","descriptio":"How long the lightning flash stays on screen (Bowser's Valley)"},{"address":"$04F74B","length":"35 bytes. Ends at $04F76D.","beginsAt":325451,"endsAt":325485,"type":"Subroutine (JSR)","descriptio":"Subroutine which is used for the flashing effect in Valley of Bowser.\n$04F754 - Color which is animated by this routine. Can be changed to 00 to have an all round lightning effect (everything flashes)."},{"address":"$04F829","length":"10 bytes. Ends at $04F832.","beginsAt":325673,"endsAt":325682,"type":"Misc.","descriptio":"Table which determines on which OW submaps sprites are disabled. myvfbswx format, where m = main, y = Yoshi's Island, v = Vanilla Dome, b = Valley of Bowser, s = Special World, w = Star World, x = not used."},{"address":"$04F85F","length":"22 bytes. Ends at $04F874.","beginsAt":325727,"endsAt":325748,"type":"Pointer","descriptio":"Overworld sprite pointer table."},{"address":"$04FA48","length":"1 byte","beginsAt":326216,"endsAt":326216,"type":"Overworld","descriptio":"Determines the three consecutive layer 1 tiles (this value +0, +1, or +2) that cause an overworld Cheep-Cheep to jump when walked across."},{"address":"$04FA6D","length":"1 byte","beginsAt":326253,"endsAt":326253,"type":"Misc.","descriptio":"Flip to use when approaching overworld Cheep-Cheep from left"},{"address":"$04FA6F","length":"1 byte","beginsAt":326255,"endsAt":326255,"type":"Sprite tilemap related","descriptio":"Base Palette/flip/etc. of overworld Cheep-Cheep"},{"address":"$04FA74","length":"1 byte","beginsAt":326260,"endsAt":326260,"type":"Misc.","descriptio":"Maximum height overworld Cheep-Cheep can jump"},{"address":"$04FA79","length":"1 byte","beginsAt":326265,"endsAt":326265,"type":"Sound effect","descriptio":"Sound overworld Cheep-Cheep makes"},{"address":"$04FA7E","length":"1 byte","beginsAt":326270,"endsAt":326270,"type":"Sprite Misc.","descriptio":"No. of frames used by OW Cheep-Cheep's splash."},{"address":"$04FAB2","length":"1 byte","beginsAt":326322,"endsAt":326322,"type":"Sprite tilemap related","descriptio":"Tile to use for overworld Cheep-Cheep (1)"},{"address":"$04FAB8","length":"1 byte","beginsAt":326328,"endsAt":326328,"type":"Sprite tilemap related","descriptio":"Tile to use for overworld Cheep-Cheep (2)"},{"address":"$04FAFB","length":"1 byte","beginsAt":326395,"endsAt":326395,"type":"Sprite tilemap related","descriptio":"Tile to use for overworld Piranha Plant (1)"},{"address":"$04FB01","length":"1 byte","beginsAt":326401,"endsAt":326401,"type":"Sprite tilemap related","descriptio":"Tile to use for overworld Piranha Plant (2)"},{"address":"$04FB03","length":"1 byte","beginsAt":326403,"endsAt":326403,"type":"Sprite tilemap related","descriptio":"Palette/flip/etc. of overworld Piranha Plant"},{"address":"$04FB38","length":"1 byte","beginsAt":326456,"endsAt":326456,"type":"Misc.","descriptio":"X speed of overworld clouds"},{"address":"$04FB3D","length":"1 byte","beginsAt":326461,"endsAt":326461,"type":"Misc.","descriptio":"Y speed of overworld clouds"},{"address":"$04FB44","length":"3 bytes. Ends at $04FB46.","beginsAt":326468,"endsAt":326470,"type":"Misc.","descriptio":"Change from 20 62 FE to EA EA EA to make the overworld clouds not show up (even if you use sprite slots for them)."},{"address":"$04FB65","length":"1 byte","beginsAt":326501,"endsAt":326501,"type":"Sprite tilemap related","descriptio":"Pal/flip/etc. of overworld cloud (left half)"},{"address":"$04FB76","length":"1 byte","beginsAt":326518,"endsAt":326518,"type":"Sprite tilemap related","descriptio":"Pal/flip/etc. of overworld cloud (right half)"},{"address":"$04FB79","length":"1 byte","beginsAt":326521,"endsAt":326521,"type":"Sprite tilemap related","descriptio":"Tile to use for overworld clouds"},{"address":"$04FCC6","length":"1 byte","beginsAt":326854,"endsAt":326854,"type":"Sprite tilemap related","descriptio":"Tile to use for Yoshi's House smoke (1)"},{"address":"$04FCD3","length":"1 byte","beginsAt":326867,"endsAt":326867,"type":"Sprite tilemap related","descriptio":"Tile to use for Yoshi's House smoke (2)"},{"address":"$04FD2E","length":"1 byte","beginsAt":326958,"endsAt":326958,"type":"Sprite tilemap related","descriptio":"Pal/flip/etc. of overworld Bowser (facing left)"},{"address":"$04FD35","length":"1 byte","beginsAt":326965,"endsAt":326965,"type":"Sprite tilemap related","descriptio":"Pal/flip/etc. of overworld Bowser (facing right)"},{"address":"$04FD38","length":"1 byte","beginsAt":326968,"endsAt":326968,"type":"Sprite tilemap related","descriptio":"Tile to use for overworld Bowser in clown car"},{"address":"$04FD82","length":"1 byte","beginsAt":327042,"endsAt":327042,"type":"Sprite Misc.","descriptio":"Overworld sprite slot to use as Forest of Illusion's ghost (default: slot 0F). This ghost won't appear on submaps unless certain events are beaten."},{"address":"$04FD89","length":"1 byte","beginsAt":327049,"endsAt":327049,"type":"Sprite Misc.","descriptio":"Which event numbers reveal the Forest of Illusion ghost, in the format of $1F02. The address number to use is two bytes at $04FD86 (x27F86).\nDefault value: 12, with address $1F07 (events 2B and 2E)."},{"address":"$04FDA6","length":"1 byte","beginsAt":327078,"endsAt":327078,"type":"Sprite tilemap related","descriptio":"Pal/flip/etc. of overworld Boo (facing left)"},{"address":"$04FDAD","length":"1 byte","beginsAt":327085,"endsAt":327085,"type":"Sprite tilemap related","descriptio":"Pal/flip/etc. of overworld Boo (facing right)"},{"address":"$04FDB0","length":"1 byte","beginsAt":327088,"endsAt":327088,"type":"Sprite tilemap related","descriptio":"Tile to use for overworld Boo"},{"address":"$04FE90","length":"71 bytes. Ends at $04FED6.","beginsAt":327312,"endsAt":327382,"type":"Sprite subroutine (JSR)","descriptio":"Overworld sprite speed routine."},{"address":"$04FFB1","length":"79 bytes. Ends at $04FFFF.","beginsAt":327601,"endsAt":327679,"type":"Empty","descriptio":"Unused data."},{"address":"$0580D5","length":"3 bytes. Ends at $0580D7.","beginsAt":360661,"endsAt":360663,"type":"ASM","descriptio":"Handles pipe colours in horizontal levels. Change to:\nEA - Pipes change colour every half-screen.\nEAEA - Every 1/4 screen (every 2 pipes).\nEAEAEA - Every pipe.\nEAEA0A - Every half pipe (every pipe is 2-toned).\nEAA9xx - All pipes are same colour (xx=00, 01, 02 or 04).\nMust be combined with $05:87A4.\n\nWarning: Does not have any effect on ROMs LM 1.7 has been used on."},{"address":"$0581BB","length":"64 bytes. Ends at $0581FA.","beginsAt":360891,"endsAt":360954,"type":"Misc.","descriptio":"Map16 tileset-specific table. Each bit (from high to low) corresponds to one tile. When the game sets up tile pointers, if the bit is set, it writes and then increments (by 2) P1 (which is initialized to the value at $058000 + (Tileset * 2)), otherwise it writes and increments P2 (initialized to $(0D)8000)."},{"address":"$0582C8","length":"114 bytes. Ends at $058339.","beginsAt":361160,"endsAt":361273,"type":"Subroutine (JSR)","descriptio":"This routine is used within the level clear to set $7EC800-$7EFFFF to #$25."},{"address":"$05833A","length":"114 bytes. Ends at $0583AB.","beginsAt":361274,"endsAt":361387,"type":"Subroutine (JSR)","descriptio":"This routine is used within the level clear to set $7FC800-$7FFFFF to #$00."},{"address":"$058417","length":"32 bytes. Ends at $058436.","beginsAt":361495,"endsAt":361526,"type":"Misc.","descriptio":"Table of Screen Mode values for each level mode. Stored to $5B."},{"address":"$058437","length":"32 bytes. Ends at $058456.","beginsAt":361527,"endsAt":361558,"type":"Misc.","descriptio":"Table of TM&TMW values for each level mode. Stored to $0D9D."},{"address":"$058457","length":"32 bytes. Ends at $058476.","beginsAt":361559,"endsAt":361590,"type":"Misc.","descriptio":"Table of TD&TSW values for each level mode. Stored to $0D9E."},{"address":"$058477","length":"32 bytes. Ends at $058496.","beginsAt":361591,"endsAt":361622,"type":"Misc.","descriptio":"Table of CGADSUB values for each level mode. Stored to $40."},{"address":"$058497","length":"32 bytes. Ends at $0584B6.","beginsAt":361623,"endsAt":361654,"type":"Misc.","descriptio":"Table of Fight Mode values for each level mode. Stored to $0D9B."},{"address":"$0584B7","length":"32 bytes. Ends at $0584D6.","beginsAt":361655,"endsAt":361686,"type":"Misc.","descriptio":"Table containing the default YXPPCCCT sprite tile settings for each level mode. Stored to $64.\nIt's used for determining whether or not layer priority should work in a level mode; the value #$30 means that it won't work, while #$20 means that it will."},{"address":"$0584D7","length":"4 bytes. Ends at $0584DA.","beginsAt":361687,"endsAt":361690,"type":"Timer","descriptio":"Hundreds digits for the four time limits that can be specified in the level header. Default is $00, $02, $03, $04 for time limits of 0, 200, 300, and 400. Tens and ones digits are set to 0 at $05858A."},{"address":"$0584DB","length":"1 byte","beginsAt":361691,"endsAt":361691,"type":"Music","descriptio":"Level Music - Here We Go! [02] (change to any other value to change what music plays by default in grassland levels)"},{"address":"$0584DC","length":"1 byte","beginsAt":361692,"endsAt":361692,"type":"Music","descriptio":"Level Music - Cave Drums [06] (change to any other value to change what music plays by default in cave levels)"},{"address":"$0584DD","length":"1 byte","beginsAt":361693,"endsAt":361693,"type":"Music","descriptio":"Level Music - Piano [01] (change to any other value to change what music plays by default in rope/sky levels)"},{"address":"$0584DE","length":"1 byte","beginsAt":361694,"endsAt":361694,"type":"Music","descriptio":"Level Music - Castle [08] (change to any other value to change what music plays by default in Castles and Fortresses)"},{"address":"$0584DF","length":"1 byte","beginsAt":361695,"endsAt":361695,"type":"Music","descriptio":"Level Music - Ghost House [07] (change to any other value to change what music plays by default in Ghost Houses)"},{"address":"$0584E0","length":"1 byte","beginsAt":361696,"endsAt":361696,"type":"Music","descriptio":"Level Music - Water [03] (change to any other value to change what music plays by default in water levels)"},{"address":"$0584E1","length":"1 byte","beginsAt":361697,"endsAt":361697,"type":"Music","descriptio":"Level Music - Boss Battle [05] (change to any other value to change what music plays by default during boss battles)"},{"address":"$0584E2","length":"1 byte","beginsAt":361698,"endsAt":361698,"type":"Music","descriptio":"Level Music - Switch Palace [12] (change to any other value to change what music plays by default in Switch Palaces)"},{"address":"$0587A4","length":"3 bytes. Ends at $0587A6.","beginsAt":362404,"endsAt":362406,"type":"ASM","descriptio":"Same as $05:80D5. Both must be changed to the same values."},{"address":"$058A95","length":"2 bytes. Ends at $058A96.","beginsAt":363157,"endsAt":363158,"type":"Coordinate","descriptio":"Until which Y position (default : #$01B0) all Map16 tiles' graphics should be updated."},{"address":"$058BA1","length":"1 byte","beginsAt":363425,"endsAt":363425,"type":"Objects","descriptio":"Which tileset's layer 2 always uses palettes 4-7 in horizontal levels, never 0-3. Default is 03 (Underground 1). To disable this effect, set it to anything invalid, like FF."},{"address":"$058C85","length":"1 byte","beginsAt":363653,"endsAt":363653,"type":"Objects","descriptio":"Which tileset's layer 2 always uses palettes 4-7 in vertical levels, never 0-3. Default is 03 (Underground 1). To disable this effect, set it to anything invalid, like FF."},{"address":"$058E19","length":"487 bytes. Ends at $058FFF.","beginsAt":364057,"endsAt":364543,"type":"Empty","descriptio":"Filled with FF."},{"address":"$059000","length":"135 bytes. Ends at $059086.","beginsAt":364544,"endsAt":364678,"type":"Pointer","descriptio":"24-bit layer 3 pointer. 3 pointer addresses per FG/BG tileset (tilesets 0-E). First pointer for low and high tides, second pointer for low tide only, third pointer for tileset specific layer 3 (although technically, all layer 3 settings here can be tileset specific)."},{"address":"$059087","length":"525 bytes. Ends at $059293.","beginsAt":364679,"endsAt":365203,"type":"Layer 3","descriptio":"Layer 3 cage tiles placement, stripe image format."},{"address":"$059294","length":"693 bytes. Ends at $059548.","beginsAt":365204,"endsAt":365896,"type":"Layer 3","descriptio":"Layer 3 crusher tiles placement, stripe image format."},{"address":"$059549","length":"149 bytes. Ends at $0595DD.","beginsAt":365897,"endsAt":366045,"type":"Layer 3","descriptio":"Layer 3 tide tiles placement, stripe image format."},{"address":"$0595DE","length":"1081 bytes. Ends at $059A16.","beginsAt":366046,"endsAt":367126,"type":"Layer 3","descriptio":"Layer 3 ghost house fog tiles placement, stripe image format."},{"address":"$059A17","length":"201 bytes. Ends at $059ADF.","beginsAt":367127,"endsAt":367327,"type":"Layer 3","descriptio":"Layer 3 goldfish tiles placement, stripe image format."},{"address":"$059AE0","length":"1857 bytes. Ends at $05A220.","beginsAt":367328,"endsAt":369184,"type":"Layer 3","descriptio":"Layer 3 castle windows tiles placement, stripe image format."},{"address":"$05A221","length":"834 bytes. Ends at $05A562.","beginsAt":369185,"endsAt":370018,"type":"Layer 3","descriptio":"Layer 3 underground rocks tiles placement, stripe image format."},{"address":"$05A563","length":"29 bytes. Ends at $05A57F.","beginsAt":370019,"endsAt":370047,"type":"Empty","descriptio":"Unused data"},{"address":"$05A580","length":"16 bytes. Ends at $05A58F.","beginsAt":370048,"endsAt":370063,"type":"Layer 3","descriptio":"VRAM positions for the different lines of the message boxes. Actually the first half of stripe images; the second half is the same for all of those. It's at $05B1F7."},{"address":"$05A590","length":"23 bytes. Ends at $05A5A6.","beginsAt":370064,"endsAt":370086,"type":"Misc.","descriptio":"Which levels have message boxes. Different values here corresponds to $13BF. If the highest bit (#$80) is set, it tells that message 2 is used for that level; if clear, message 1 is used.\nMost likely not used when LM is done with the ROM."},{"address":"$05A5D9","length":"2854 bytes. Ends at $05B0FE.","beginsAt":370137,"endsAt":372990,"type":"Layer 3","descriptio":"All the message box texts.\nThey're almost raw tilemaps (doesn't contain YXPCCCTT data) to be uploaded to VRAM, but setting the highest bit makes it add a newline too."},{"address":"$05B106","length":"2 bytes. Ends at $05B107.","beginsAt":372998,"endsAt":372999,"type":"Misc.","descriptio":"Time when to show text after expanding/shrinking the Message Box window.\n\n1st byte determines when to show the message.\n2nd byte determines how fast to hide the message.\n\nEdited values can't be higher than the default hex values."},{"address":"$05B108","length":"2 bytes. Ends at $05B109.","beginsAt":373000,"endsAt":373001,"type":"Misc.","descriptio":"Expanding/Shrinking size of Message Box window.\n\nSecond digit of both bytes can't be other numbers than 0."},{"address":"$05B10A","length":"2 bytes. Ends at $05B10B.","beginsAt":373002,"endsAt":373003,"type":"Misc.","descriptio":"Expanding/Shrinking speed of Message Box window."},{"address":"$05B10C","length":"399 bytes. Ends at $05B29A.","beginsAt":373004,"endsAt":373402,"type":"Subroutine (JSL)","descriptio":"The subroutine that displays the message from a message box. It handles the windowing HDMA, the stripe image upload, and things such as teleporting to the overworld after the intro screen.\n\n$05B129: [9C 9F 0D] Change to [EA EA EA] to prevent HDMA from getting disabled AFTER a message box has been displayed. Use with $05B296.\n$05B15C: [8E] The Y position on which to start the march to Yoshi's House after the intro screen. To be used with $048F08.\n$05B15D: [8D 19 1F] ASM code that stores the player's starting Y position to its RAM address, $1F19. Lunar Magic changes this to [EA EA EA] if you move the Mario OW sprite around, thus disabling the intro march (and its effects, such as storing '0' to the amount of levels cleared). If you want to undo this effect, change it back to [8D 19 1F].\n$05B160: Side exit subroutine. It can be JSL'd to.\n$05B189: [D0 CF] Change to [EA EA] to prevent the message that pops up in the intro screen from exiting the level. (It will act exactly the same as a message in any other level.)\n$05B21D: [39] Tile properties of the Layer 3 tiles in message box messages in YXPCCCTT format. (Note: Lunar Magic ASM hacks render this address unused.)\n$05B296: [8D] Change to [0C] to prevent HDMA from getting disabled WHILE a message box is being displayed. Use with $05B129."},{"address":"$05B29B","length":"64 bytes. Ends at $05B2DA.","beginsAt":373403,"endsAt":373466,"type":"Sprite tilemap related","descriptio":"This is the 8x8 tilemap data for the sprites used on the switch palace messages (dotted and '!' block). The first byte in each in the tile, the second byte is the YXPPCCCT data."},{"address":"$05B329","length":"33 bytes. Ends at $05B349.","beginsAt":373545,"endsAt":373577,"type":"Subroutine (JSL)","descriptio":"\"Give coins\" subroutine. If you JSL to it, it will give the player the number of coins equal to the value in A."},{"address":"$05B34A","length":"17 bytes. Ends at $05B35A.","beginsAt":373578,"endsAt":373594,"type":"Subroutine (JSL)","descriptio":"Subroutine that gives the player a single coin. It handles the green star block as well.\n$05B34E is the sound this generates."},{"address":"$05B375","length":"488 bytes. Ends at $05B55C.","beginsAt":373621,"endsAt":374108,"type":"Layer 3","descriptio":"Title screen stripe image data (the part that appears right as the title screen loads up)."},{"address":"$05B6FE","length":"203 bytes. Ends at $05B7C8.","beginsAt":374526,"endsAt":374728,"type":"Layer 3","descriptio":"Tilemap of the erase file select dialog. (\"ERASE MARIO A . . . EMPTY\", etc.)"},{"address":"$05B7C9","length":"169 bytes. Ends at $05B871.","beginsAt":374729,"endsAt":374897,"type":"Layer 3","descriptio":"Tilemap of the file select dialog. (\"MARIO A . . . EMPTY\", etc.)"},{"address":"$05B872","length":"85 bytes. Ends at $05B8C6.","beginsAt":374898,"endsAt":374982,"type":"Misc.","descriptio":"1 / 2 player game stripe image data."},{"address":"$05B93B","length":"48 bytes. Ends at $05B96A.","beginsAt":375099,"endsAt":375146,"type":"Misc.","descriptio":"Destination VRAM addresses for animated tiles. There are 6 bytes, 3 16-bit addresses, for each of the 8 possible animation frames (index = (frame & 7) * 6), and their values get stored to $0D7C, $0D7E, and $0D80 during the animation handling routine. (The last 6 bytes are actually unused, since SMW never uses animation frame 7 for anything.)"},{"address":"$05B96B","length":"24 bytes. Ends at $05B982.","beginsAt":375147,"endsAt":375170,"type":"Misc.","descriptio":"This table determines how a certain tile should vary its animation. 00 = always the same, 01 = change depending on $14AD, $14AE, or $14AF (P-switch timers and on/off switch), 02 = change depending on $1931 (FG/BG tileset number). It is indexed by the animation frame times 3, or (($14 & #$07) * 3), and each of the 8 possible animation frames uses one group of 3 bytes. Note that the last 6 bytes overlap with the table at $05B97D."},{"address":"$05B97D","length":"15 bytes. Ends at $05B98B.","beginsAt":375165,"endsAt":375179,"type":"Misc.","descriptio":"Table that determines, for tile animations that can have one of two states, which address to use to determine the state (i.e. any animation for which its corresponding value in the table at $05B96B is 01). The address used is $14AD plus this value, so 00 = blue P-switch, 01 = gray P-switch, 02 = on/off switch. This table is only 15 bytes long rather than 24 because all of the 2-state animations are updated on animation frame 0, 1, 2, 3, or 4, never 5, 6, or 7. Note also that the last byte overlaps with the table at $05B98B."},{"address":"$05B98B","length":"14 bytes. Ends at $05B998.","beginsAt":375179,"endsAt":375192,"type":"Misc.","descriptio":"Table, indexed by FG/BG tileset. Determines which group of animated tiles to use for a certain tileset, such as conveyor belts, stars, lava, etc."},{"address":"$05B999","length":"416 bytes. Ends at $05BB38.","beginsAt":375193,"endsAt":375608,"type":"Misc.","descriptio":"Frame data for animated tiles. Each group of 8 bytes is one set of tile animation, and each pair of bytes is one frame. The numbers are offsets forming the lower two bytes of pointers to the table data at $7E7D00. (For instance, the first two bytes = 00 95 -> data at $7E9500.) There seems to be no discernable pattern to which tiles are uploaded where in VRAM, though."},{"address":"$05BB39","length":"109 bytes. Ends at $05BBA5.","beginsAt":375609,"endsAt":375717,"type":"Subroutine (JSL)","descriptio":"The routine that handles tile animation. It reads the animation data from the table at $05B999 and, based on that and a few other factors (such as tileset and blue P-switch status), sets the pointers to the tile data in the table at RAM $7E0D76."},{"address":"$05BBA6","length":"90 bytes. Ends at $05BBFF.","beginsAt":375718,"endsAt":375807,"type":"Empty","descriptio":"Unused data."},{"address":"$05BC87","length":"30 bytes. Ends at $05BCA4.","beginsAt":375943,"endsAt":375972,"type":"Pointer","descriptio":"Pointers to the scroll sprite main routines for Layer 1 scrolling."},{"address":"$05BCB8","length":"30 bytes. Ends at $05BCD5.","beginsAt":375992,"endsAt":376021,"type":"Pointer","descriptio":"Pointers to the scroll sprite main routines for Layer 2 scrolling."},{"address":"$05BCF0","length":"30 bytes. Ends at $05BD0D.","beginsAt":376048,"endsAt":376077,"type":"Pointer","descriptio":"Pointers to the scroll sprite init routines for Layer 1 scrolling."},{"address":"$05BD17","length":"30 bytes. Ends at $05BD34.","beginsAt":376087,"endsAt":376116,"type":"Pointer","descriptio":"Pointers to the scroll sprite init routines for Layer 2 scrolling."},{"address":"$05BEA6","length":"3 bytes. Ends at $05BEA8.","beginsAt":376486,"endsAt":376488,"type":"ASM","descriptio":"[9C 11 14] Change this to EA EA EA to make Layer 2 Sideways Scroll not disable horizontal scroll."},{"address":"$05C4F2","length":"6 bytes. Ends at $05C4F7.","beginsAt":378098,"endsAt":378103,"type":"ASM","descriptio":"Change from [85 22 A9 01 85 23] to [38 69 02 85 22 EA] in order to make the Layer 3 tides scroll to the right instead of the left. (Nothing is stored to the high byte of Layer 3 X position, however, so if you adjusted the tide to be asymmetrical, this may not give the wanted result.)\n\nOnly applies to the graphical part of the Layer 3 tide."},{"address":"$05C71B","length":"1 byte","beginsAt":378651,"endsAt":378651,"type":"Misc.","descriptio":"Layer 2 on/off switch lower limit. The lower this number, the further down the screen layer 2 will go before stopping."},{"address":"$05C71D","length":"1 byte","beginsAt":378653,"endsAt":378653,"type":"Misc.","descriptio":"Layer 2 on/off switch upper limit. The higher this number, the further up layer 2 will go before it will start descending again."},{"address":"$05C7BC","length":"3 bytes. Ends at $05C7BE.","beginsAt":378812,"endsAt":378814,"type":"Misc.","descriptio":"Change to A9 08 EA and the background will start scrolling fast with generator F4 without having to touch platform C1"},{"address":"$05C7CB","length":"2 bytes. Ends at $05C7CC.","beginsAt":378827,"endsAt":378828,"type":"Misc.","descriptio":"Maximum speed of layer 2 scrolling during \"Fast BG Scroll\" (sprite F4)."},{"address":"$05CA5C","length":"5 bytes. Ends at $05CA60.","beginsAt":379484,"endsAt":379488,"type":"Sprite Misc.","descriptio":"What direction Layer 2 will start out moving when each variant of the Layer 2 Scroll sprite (sprite EA) is used. In order: Range 12, Range 08, Range 05, Range 06, Range 05 (alternate). 00 -> down, 01 -> up."},{"address":"$05CBF5","length":"10 bytes. Ends at $05CBFE.","beginsAt":379893,"endsAt":379902,"type":"Timer","descriptio":"Determines the distance for Layer 2 to scroll when using each variant of the Layer 2 Scroll sprite (sprite EA), outside of the acceleration/deceleration period. In order: Range 12, Range 08, Range 05, Range 06, Range 05 (alternate); each type corresponds to a pair of bytes here. The first byte of each pair is for the first movement, and the second is for every time it moves after that. The data is roughly how much time will be spent scrolling at full speed, not the actual distance, so the scroll speed and acceleration affect this."},{"address":"$05CBFF","length":"8 bytes. Ends at $05CC06.","beginsAt":379903,"endsAt":379910,"type":"Subroutine (JSL)","descriptio":"Jumps to Level End Scorecard Subroutine"},{"address":"$05CC16","length":"75 bytes. Ends at $05CC60.","beginsAt":379926,"endsAt":380000,"type":"Layer 3","descriptio":"Start of course clear message tilemap.\n$05CC1A (10 bytes) is 'MARIO' tiles and attributes used in the end-of-level scorecard\n$05CC28 (12 bytes) is \"COURSE\" and attributes at end of level scorecard.\n$05CC36 (10 bytes) is \"CLEAR\" and attributes at end of level scorecard."},{"address":"$05CC61","length":"5 bytes. Ends at $05CC65.","beginsAt":380001,"endsAt":380005,"type":"Misc.","descriptio":"'LUIGI' letters used in the end-of-level scorecard (uses the same attributes as the MARIO letters)"},{"address":"$05CC66","length":"2 bytes. Ends at $05CC67.","beginsAt":380006,"endsAt":380007,"type":"Misc.","descriptio":"Change to 80 1C to prevent the player from getting a free 1UP at the goal if the tens digit of your bonus star counter and the tens and ones digits of your time are all the same"},{"address":"$05CC85","length":"1 byte","beginsAt":380037,"endsAt":380037,"type":"Misc.","descriptio":"Change to 00 to disable \"Course Clear\" from appearing."},{"address":"$05CCC4","length":"1 byte","beginsAt":380100,"endsAt":380100,"type":"Misc.","descriptio":"Number of LUIGI tiles to use in the end-of-level scorecard"},{"address":"$05CD2C","length":"1 byte","beginsAt":380204,"endsAt":380204,"type":"Timer","descriptio":"Time it takes for Bonus! to appear after hitting the goal tape."},{"address":"$05CD3F","length":"35 bytes. Ends at $05CD61.","beginsAt":380223,"endsAt":380257,"type":"Layer 3","descriptio":"Stripe image for the bonus star counter in end of level scorecard.\n$05CD3F is the main \"BONUS! ★x__\" text, with the __ being blank tiles reserved for the bottom of the number of stars.\nA second header starting at $05CD5A handles two additional blank tiles, used for the top of the numbers."},{"address":"$05CD62","length":"20 bytes. Ends at $05CD75.","beginsAt":380258,"endsAt":380277,"type":"Layer 3","descriptio":"Table of tiles used to display the amount of bonus stars received in the end level routine.\nStarts with top tile of 0, bottom tile of 0, top tile of 1, bottom tile of 1, etc. Notably, there's no header OR end byte."},{"address":"$05CD79","length":"1 byte","beginsAt":380281,"endsAt":380281,"type":"ASM","descriptio":"Changing this byte to [80] will disable the bonus counter in the 'Course Clear' screen."},{"address":"$05CDD8","length":"1 byte","beginsAt":380376,"endsAt":380376,"type":"ASM","descriptio":"Changing this byte to [80] will disable the drumroll sound effect, and the Timer and score tallying at the 'Course Clear' screen."},{"address":"$05CDE4","length":"1 byte","beginsAt":380388,"endsAt":380388,"type":"Sound effect","descriptio":"Drum Roll (tallying points) Sound Effect."},{"address":"$05CE7A","length":"1 byte","beginsAt":380538,"endsAt":380538,"type":"Misc.","descriptio":"Time Multiplier for every second (use with $05CE92) must be a multiple of 10."},{"address":"$05CE92","length":"1 byte","beginsAt":380562,"endsAt":380562,"type":"Misc.","descriptio":"Time Multiplier for every second (use with $05CE7A) must be a multiple of 10."},{"address":"$05CF1B","length":"3 bytes. Ends at $05CF1D.","beginsAt":380699,"endsAt":380701,"type":"ASM","descriptio":"Change to EA EA EA and the player will receive no bonus stars at the end of the level."},{"address":"$05CF49","length":"1 byte","beginsAt":380745,"endsAt":380745,"type":"Sound effect","descriptio":"Drum Roll Finishing Sound Effect."},{"address":"$05CFEA","length":"22 bytes. Ends at $05CFFF.","beginsAt":380906,"endsAt":380927,"type":"Empty","descriptio":"Empty."},{"address":"$05D000","length":"1536 bytes. Ends at $05D5FF.","beginsAt":380928,"endsAt":382463,"type":"Misc.","descriptio":"Tile data for all Layer 1 overworld tiles, #$00-#$BF (but BF doesn't show up in LM no matter what you set it to). 8 bytes per 16x16 tile = 2 bytes per 8x8 tile. (TTTTTTTT YXPCCCTT.)\nOrder in which the pairs of bytes go inside a 16x16 tile: upper-left, bottom-left, upper-right, bottom-right."},{"address":"$05D608","length":"96 bytes. Ends at $05D667.","beginsAt":382472,"endsAt":382567,"type":"Overworld","descriptio":"Which events are triggered by which level. Indexed by level ID, aka $13BF."},{"address":"$05D668","length":"160 bytes. Ends at $05D707.","beginsAt":382568,"endsAt":382727,"type":"Empty","descriptio":"Unused data."},{"address":"$05D708","length":"8 bytes. Ends at $05D70F.","beginsAt":382728,"endsAt":382735,"type":"Level data","descriptio":"Layer 1, 2 (FG,BG) Initial Position. FG values (4 bytes) are first. BG values (4 values) are last."},{"address":"$05D710","length":"16 bytes. Ends at $05D71F.","beginsAt":382736,"endsAt":382751,"type":"Level data","descriptio":"Vertical scroll settings for layer 2 background. The values in this table are for RAM $7E:1414. The index to this table is the %ssss from the %ssssyyyy in table ROM $05:F000."},{"address":"$05D720","length":"16 bytes. Ends at $05D72F.","beginsAt":382752,"endsAt":382767,"type":"Level data","descriptio":"Horizontal scroll settings for layer 2 background. The values in this table are for RAM $7E:1413. The index to this table is the %ssss from the %ssssyyyy in table ROM $05:F000.\n\nThe maximum %ssss in SMW is %0111, thus indexes %1000 through %1111 are unused and are available if you want to invent more scroll settings for layer 2."},{"address":"$05D730","length":"16 bytes. Ends at $05D73F.","beginsAt":382768,"endsAt":382783,"type":"Level data","descriptio":"Mario Y-Position (main and midway entrances)"},{"address":"$05D740","length":"16 bytes. Ends at $05D74F.","beginsAt":382784,"endsAt":382799,"type":"Level data","descriptio":"Mario Y-Subscreen Positions (main and midway entrances)"},{"address":"$05D750","length":"8 bytes. Ends at $05D757.","beginsAt":382800,"endsAt":382807,"type":"Level data","descriptio":"Mario X-Positions (main and midway entrances). 8th byte unused?"},{"address":"$05D758","length":"8 bytes. Ends at $05D75F.","beginsAt":382808,"endsAt":382815,"type":"Level data","descriptio":"Mario X-Subscreen Positions (main and midway entrances). 8th byte unused?"},{"address":"$05D760","length":"6 bytes. Ends at $05D765.","beginsAt":382816,"endsAt":382821,"type":"Misc.","descriptio":"The tileset that each no-Yoshi intro intro is used with. Same order as $05D766 (0x2D966). The last one seems to be unused."},{"address":"$05D766","length":"18 bytes. Ends at $05D777.","beginsAt":382822,"endsAt":382839,"type":"Pointer","descriptio":"List of 6 pointers to the \"Get off Yoshi\" level intros. In order: Ghost House, Castle Entrance 1, No Yoshi Sign 1, No Yoshi Sign 2, No Yoshi Sign 3, Castle Entrance 2."},{"address":"$05D778","length":"18 bytes. Ends at $05D789.","beginsAt":382840,"endsAt":382857,"type":"Pointer","descriptio":"List of pointers to the Layer 2's for the \"Get off Yoshi\" intro levels. Same order as for 2D966"},{"address":"$05D796","length":"857 bytes. Ends at $05DAEE.","beginsAt":382870,"endsAt":383726,"type":"Subroutine (JSL)","descriptio":"The main level data loading routine.\n$05DAE5 is which level has the variable exits that changes depending on coins, timer, and yoshi coins. To disable the variable properties of this level, change $05DAE6 to 80.\n$05DA19 is the start of the code for checking whether or not the level should use a No-Yoshi intro. Change to [4C D7 DA] to disable all No-Yoshi intros, including those for ghost houses and castles."},{"address":"$05DA1D","length":"1 byte","beginsAt":383517,"endsAt":383517,"type":"Level number","descriptio":"Any level with a translevel number greater than or equal to this will use the \"No Yoshi Sign 2\" intro if the no-Yoshi intro is not disabled, regardless of tileset."},{"address":"$05DA4B","length":"1 byte","beginsAt":383563,"endsAt":383563,"type":"Level number","descriptio":"One of five translevels that will use a dark-background castle intro if the level is set to tileset 1 and a no-Yoshi intro is enabled. This one is 31 (Front Door) by default."},{"address":"$05DA4F","length":"1 byte","beginsAt":383567,"endsAt":383567,"type":"Level number","descriptio":"One of five translevels that will use a dark-background castle intro if the level is set to tileset 1 and a no-Yoshi intro is enabled. This one is 32 (Back Door) by default."},{"address":"$05DA53","length":"1 byte","beginsAt":383571,"endsAt":383571,"type":"Level number","descriptio":"One of five translevels that will use a dark-background castle intro if the level is set to tileset 1 and a no-Yoshi intro is enabled. This one is 34 (#7 Larry's Castle) by default."},{"address":"$05DA57","length":"1 byte","beginsAt":383575,"endsAt":383575,"type":"Level number","descriptio":"One of five translevels that will use a dark-background castle intro if the level is set to tileset 1 and a no-Yoshi intro is enabled. This one is 35 (Valley Fortress) by default."},{"address":"$05DA5B","length":"1 byte","beginsAt":383579,"endsAt":383579,"type":"Level number","descriptio":"One of five translevels that will use a dark-background castle intro if the level is set to tileset 1 and a no-Yoshi intro is enabled. This one is 40 (#3 Lemmy's Castle) by default."},{"address":"$05DAEF","length":"186 bytes. Ends at $05DBA8.","beginsAt":383727,"endsAt":383912,"type":"Subroutine (JSR)","descriptio":"The routine that loads level data for the sublevels of the level with the variable screen exits (i.e. level 24, or Chocolate Island 2, in the original SMW)."},{"address":"$05DBA9","length":"1 byte","beginsAt":383913,"endsAt":383913,"type":"Level number","descriptio":"Level number for bonus game after gaining 100 bonus stars from a goal tape."},{"address":"$05DBAA","length":"1 byte","beginsAt":383914,"endsAt":383914,"type":"Level number","descriptio":"Level number for yoshi wings bonus stage."},{"address":"$05DBAC","length":"29 bytes. Ends at $05DBC8.","beginsAt":383916,"endsAt":383944,"type":"Subroutine (JSR)","descriptio":"The routine that handles setting the level to warp to when Yoshi gets the wings. (Level xC8.)"},{"address":"$05DBB3","length":"1 byte","beginsAt":383923,"endsAt":383923,"type":"Misc.","descriptio":"Change to 60 (RTS) to make it so Yoshi wings use the normal screen exit instead of forcing a warp to level C8/1C8. This allows you to use pipes/doors in Yoshi wings levels. However, bonus games still remain incompatible. (Make sure to add a screen exit on every screen a player could possibly collect Yoshi wings if you use this.)"},{"address":"$05DBC9","length":"2 bytes. Ends at $05DBCA.","beginsAt":383945,"endsAt":383946,"type":"Coordinate","descriptio":"Position of lives counter on the overworld."},{"address":"$05DC3A","length":"12 bytes. Ends at $05DC45.","beginsAt":384058,"endsAt":384069,"type":"Subroutine (JSR)","descriptio":"Hex -> Dec subroutine, ends with RTS. Only used for displaying the player's lives on the overworld.\n\nInput: A (8-bit) = the value to be converted\n\nOutput:\nA = ones digit.\nX = tens digit.\n"},{"address":"$05DC46","length":"954 bytes. Ends at $05DFFF.","beginsAt":384070,"endsAt":385023,"type":"Empty","descriptio":"Filled with FF."},{"address":"$05E000","length":"1536 bytes. Ends at $05E5FF.","beginsAt":385024,"endsAt":386559,"type":"Pointer","descriptio":"Level data pointer table (Layer 1)"},{"address":"$05E600","length":"1536 bytes. Ends at $05EBFF.","beginsAt":386560,"endsAt":388095,"type":"Pointer","descriptio":"Level data pointer table (Layer 2)"},{"address":"$05EC00","length":"1024 bytes. Ends at $05EFFF.","beginsAt":388096,"endsAt":389119,"type":"Pointer","descriptio":"Level data pointer table (Sprites)"},{"address":"$05F000","length":"512 bytes. Ends at $05F1FF.","beginsAt":389120,"endsAt":389631,"type":"Level data","descriptio":"Table for each level in ssssyyyy format. ssss = layer 2 scroll settings, yyyy = Y position (from LM's method 1)."},{"address":"$05F200","length":"512 bytes. Ends at $05F3FF.","beginsAt":389632,"endsAt":390143,"type":"Level data","descriptio":"Table for each level in ttaaaxxx format. tt = tide/tileset specific Layer 3 BG to use, aaa = Mario action to start the level out with, xxx = initial X position (one of which is not selectable by LM, X = 10)."},{"address":"$05F400","length":"512 bytes. Ends at $05F5FF.","beginsAt":390144,"endsAt":390655,"type":"Level data","descriptio":"Table for each level in mmmmffbb format. mmmm = screen for midway entrance, ff = FG initial position, bb = BG initial position."},{"address":"$05F600","length":"512 bytes. Ends at $05F7FF.","beginsAt":390656,"endsAt":391167,"type":"Level data","descriptio":"Table for each level in iuveeeee format. i = disable No Yoshi Intro flag, u = unknown vertical level positioning flag, v = vertical level positioning flag, eeeee = screen # that the primary entrance is on."},{"address":"$05F800","length":"512 bytes. Ends at $05F9FF.","beginsAt":391168,"endsAt":391679,"type":"Level data","descriptio":"Part of the Secondary Entrance information; each byte is one of the secondary entrances. The byte is the low byte of the destination level number. The high bit (0x100 vs. 0x000) is stored in another table.\n\nNote that, as of LM v2.50, this table may be dynamically moved to accomodate the size of the new secondary exits. It can be found at read3($0DE191)."},{"address":"$05FA00","length":"512 bytes. Ends at $05FBFF.","beginsAt":391680,"endsAt":392191,"type":"Level data","descriptio":"Part of the Secondary Entrance information; each byte is one of the secondary entrances. The low 4 bits are the Y position for Mario; offsets into a table at SNES addresses $05:D730 and $05:D740. The next two bits are the FG initial position, indexing into the table at SNES address $05:D708. The highest 2 bits are the BG initial position, indexing into the table at SNES address $05:D70C.\n\nNote that, as of LM v2.50, this table may be dynamically moved to accomodate the size of the new secondary exits. It can be found at read3($0DE198)."},{"address":"$05FC00","length":"512 bytes. Ends at $05FDFF.","beginsAt":392192,"endsAt":392703,"type":"Level data","descriptio":"Part of the secondary level information. The low 5 bits are for the destination screen number. The high 3 bits are the X position for Mario; offsets into a table at SNES addresses $05:D750 and $05:D758.\n\nNote that, as of LM v2.50, this table may be dynamically moved to accomodate the size of the new secondary exits. It can be found at read3($0DE19F)."},{"address":"$05FE00","length":"512 bytes. Ends at $05FFFF.","beginsAt":392704,"endsAt":393215,"type":"Level data","descriptio":"Part of the Secondary Entrance data; each byte corresponds to an entrance. The lowest 3 bits are the Mario action. The next bit is the high bit of the secondary entrance's level number. The highest bit is set when the destination level should be slippery.\n\nNote that, as of LM v2.50, this table may be dynamically moved to accomodate the size of the new secondary exits. It can be found at read3($05DC81)."},{"address":"$068000","length":"99 bytes. Ends at $068062.","beginsAt":425984,"endsAt":426082,"type":"Level data","descriptio":"Level 012, 019, 01E, 025-092, 09C-0BC, 10C, 112, 124, 129, 12E, 12F, 131, 133, 137-192, 19C-1BA"},{"address":"$068063","length":"90 bytes. Ends at $0680BC.","beginsAt":426083,"endsAt":426172,"type":"Level data","descriptio":"Unused level: Ride Among the Clouds"},{"address":"$0680BD","length":"123 bytes. Ends at $068137.","beginsAt":426173,"endsAt":426295,"type":"Level data","descriptio":"Unused level: Mushroom Scales"},{"address":"$068138","length":"282 bytes. Ends at $068251.","beginsAt":426296,"endsAt":426577,"type":"Level data","descriptio":"Unused level: Boss Test"},{"address":"$068252","length":"6 bytes. Ends at $068257.","beginsAt":426578,"endsAt":426583,"type":"Level data","descriptio":"Level 09B, 19B"},{"address":"$068258","length":"6 bytes. Ends at $06825D.","beginsAt":426584,"endsAt":426589,"type":"Level data","descriptio":"Level 095, 098-09A, 195, 198-19A"},{"address":"$06825E","length":"6 bytes. Ends at $068263.","beginsAt":426590,"endsAt":426595,"type":"Level data","descriptio":"Level 096, 097, 196, 197"},{"address":"$068264","length":"135 bytes. Ends at $0682EA.","beginsAt":426596,"endsAt":426730,"type":"Level data","descriptio":"Unused level: Lava Cave (Layer 2)"},{"address":"$0682EB","length":"177 bytes. Ends at $06839B.","beginsAt":426731,"endsAt":426907,"type":"Level data","descriptio":"Unused level: Lava Cave"},{"address":"$06839C","length":"15 bytes. Ends at $0683AA.","beginsAt":426908,"endsAt":426922,"type":"Level data","descriptio":"Unused level: Twin Blocks"},{"address":"$0683AB","length":"342 bytes. Ends at $068500.","beginsAt":426923,"endsAt":427264,"type":"Level data","descriptio":"Unused level: Beta level 01A.\n"},{"address":"$068501","length":"60 bytes. Ends at $06853C.","beginsAt":427265,"endsAt":427324,"type":"Level data","descriptio":"Unused level: Beta level 01A (Layer 2)"},{"address":"$06853D","length":"36 bytes. Ends at $068560.","beginsAt":427325,"endsAt":427360,"type":"Level data","descriptio":"Unused level: Pipe 'n' Ground"},{"address":"$068561","length":"42 bytes. Ends at $06858A.","beginsAt":427361,"endsAt":427402,"type":"Level data","descriptio":"Level 093, 194"},{"address":"$06858B","length":"42 bytes. Ends at $0685B4.","beginsAt":427403,"endsAt":427444,"type":"Level data","descriptio":"Level 094, 193"},{"address":"$0685B5","length":"78 bytes. Ends at $068602.","beginsAt":427445,"endsAt":427522,"type":"Level data","descriptio":"Level 0C7"},{"address":"$068603","length":"24 bytes. Ends at $06861A.","beginsAt":427523,"endsAt":427546,"type":"Level data","descriptio":"Level 0C5"},{"address":"$06861B","length":"6 bytes. Ends at $068620.","beginsAt":427547,"endsAt":427552,"type":"Level data","descriptio":"Level 0C4, 0EB, 0F0, 0FB, 1DA, 1E6, 1E7, 1F9 (Layer 2)"},{"address":"$068621","length":"21 bytes. Ends at $068635.","beginsAt":427553,"endsAt":427573,"type":"Level data","descriptio":"Level 0EB, 0F0, 0FB, 1DA, 1E7, 1F9"},{"address":"$068636","length":"6 bytes. Ends at $06863B.","beginsAt":427574,"endsAt":427579,"type":"Level data","descriptio":"Level 0CC, 0D5, 0D9, 0DF, 0E2, 0E5, 1DE"},{"address":"$06863C","length":"24 bytes. Ends at $068653.","beginsAt":427580,"endsAt":427603,"type":"Level data","descriptio":"Level 0FF"},{"address":"$068654","length":"33 bytes. Ends at $068674.","beginsAt":427604,"endsAt":427636,"type":"Level data","descriptio":"Level 000, 100"},{"address":"$068675","length":"18 bytes. Ends at $068686.","beginsAt":427637,"endsAt":427654,"type":"Level data","descriptio":"Unused level: Ghost House Exit"},{"address":"$068687","length":"6 bytes. Ends at $06868C.","beginsAt":427655,"endsAt":427660,"type":"Level data","descriptio":"Level 1EB, 1F6"},{"address":"$06868D","length":"67 bytes. Ends at $0686CF.","beginsAt":427661,"endsAt":427727,"type":"Level data","descriptio":"Level 014"},{"address":"$0686D0","length":"91 bytes. Ends at $06872A.","beginsAt":427728,"endsAt":427818,"type":"Level data","descriptio":"Level 11B"},{"address":"$06872B","length":"67 bytes. Ends at $06876D.","beginsAt":427819,"endsAt":427885,"type":"Level data","descriptio":"Level 121"},{"address":"$06876E","length":"64 bytes. Ends at $0687AD.","beginsAt":427886,"endsAt":427949,"type":"Level data","descriptio":"Level 008"},{"address":"$0687AE","length":"69 bytes. Ends at $0687F2.","beginsAt":427950,"endsAt":428018,"type":"Level data","descriptio":"Level 0CA"},{"address":"$0687F3","length":"69 bytes. Ends at $068837.","beginsAt":428019,"endsAt":428087,"type":"Level data","descriptio":"Level 1D8"},{"address":"$068838","length":"69 bytes. Ends at $06887C.","beginsAt":428088,"endsAt":428156,"type":"Level data","descriptio":"Level 1D7"},{"address":"$06887D","length":"66 bytes. Ends at $0688BE.","beginsAt":428157,"endsAt":428222,"type":"Level data","descriptio":"Level 0C9"},{"address":"$0688BF","length":"30 bytes. Ends at $0688DC.","beginsAt":428223,"endsAt":428252,"type":"Level data","descriptio":"Level 003"},{"address":"$0688DD","length":"283 bytes. Ends at $0689F7.","beginsAt":428253,"endsAt":428535,"type":"Level data","descriptio":"Level 105"},{"address":"$0689F8","length":"55 bytes. Ends at $068A2E.","beginsAt":428536,"endsAt":428590,"type":"Level data","descriptio":"Level 1CB"},{"address":"$068A2F","length":"388 bytes. Ends at $068BB2.","beginsAt":428591,"endsAt":428978,"type":"Level data","descriptio":"Level 106"},{"address":"$068BB3","length":"43 bytes. Ends at $068BDD.","beginsAt":428979,"endsAt":429021,"type":"Level data","descriptio":"Level 1CA"},{"address":"$068BDE","length":"655 bytes. Ends at $068E6C.","beginsAt":429022,"endsAt":429676,"type":"Level data","descriptio":"Level 103"},{"address":"$068E6D","length":"64 bytes. Ends at $068EAC.","beginsAt":429677,"endsAt":429740,"type":"Level data","descriptio":"Level 1FD"},{"address":"$068EAD","length":"230 bytes. Ends at $068F92.","beginsAt":429741,"endsAt":429970,"type":"Level data","descriptio":"Level 102"},{"address":"$068F93","length":"30 bytes. Ends at $068FB0.","beginsAt":429971,"endsAt":430000,"type":"Level data","descriptio":"Level 1FF"},{"address":"$068FB1","length":"76 bytes. Ends at $068FFC.","beginsAt":430001,"endsAt":430076,"type":"Level data","descriptio":"Level 1BE"},{"address":"$068FFD","length":"370 bytes. Ends at $06916E.","beginsAt":430077,"endsAt":430446,"type":"Level data","descriptio":"Level 101"},{"address":"$06916F","length":"118 bytes. Ends at $0691E4.","beginsAt":430447,"endsAt":430564,"type":"Level data","descriptio":"Level 1FC"},{"address":"$0691E5","length":"503 bytes. Ends at $0693DB.","beginsAt":430565,"endsAt":431067,"type":"Level data","descriptio":"Level 015-017"},{"address":"$0693DC","length":"151 bytes. Ends at $069472.","beginsAt":431068,"endsAt":431218,"type":"Level data","descriptio":"Level 0FD"},{"address":"$069473","length":"250 bytes. Ends at $06956C.","beginsAt":431219,"endsAt":431468,"type":"Level data","descriptio":"Level 0E3"},{"address":"$06956D","length":"192 bytes. Ends at $06962C.","beginsAt":431469,"endsAt":431660,"type":"Level data","descriptio":"Level 009 (Layer 2)"},{"address":"$06962D","length":"353 bytes. Ends at $06978D.","beginsAt":431661,"endsAt":432013,"type":"Level data","descriptio":"Level 009"},{"address":"$06978E","length":"121 bytes. Ends at $069806.","beginsAt":432014,"endsAt":432134,"type":"Level data","descriptio":"Level 0E9"},{"address":"$069807","length":"116 bytes. Ends at $06987A.","beginsAt":432135,"endsAt":432250,"type":"Level data","descriptio":"Level 004"},{"address":"$06987B","length":"34 bytes. Ends at $06989C.","beginsAt":432251,"endsAt":432284,"type":"Level data","descriptio":"Level 0FA"},{"address":"$06989D","length":"83 bytes. Ends at $0698EF.","beginsAt":432285,"endsAt":432367,"type":"Level data","descriptio":"Level 0DE, 0F9"},{"address":"$0698F0","length":"95 bytes. Ends at $06994E.","beginsAt":432368,"endsAt":432462,"type":"Level data","descriptio":"Level 0FE"},{"address":"$06994F","length":"18 bytes. Ends at $069960.","beginsAt":432463,"endsAt":432480,"type":"Level data","descriptio":"Level 0C4"},{"address":"$069961","length":"445 bytes. Ends at $069B1D.","beginsAt":432481,"endsAt":432925,"type":"Level data","descriptio":"Level 005"},{"address":"$069B1E","length":"151 bytes. Ends at $069BB4.","beginsAt":432926,"endsAt":433076,"type":"Level data","descriptio":"Level 0F4"},{"address":"$069BB5","length":"407 bytes. Ends at $069D4B.","beginsAt":433077,"endsAt":433483,"type":"Level data","descriptio":"Level 006"},{"address":"$069D4C","length":"55 bytes. Ends at $069D82.","beginsAt":433484,"endsAt":433538,"type":"Level data","descriptio":"Level 0D2"},{"address":"$069D83","length":"61 bytes. Ends at $069DBF.","beginsAt":433539,"endsAt":433599,"type":"Level data","descriptio":"Level 0C3"},{"address":"$069DC0","length":"110 bytes. Ends at $069E2D.","beginsAt":433600,"endsAt":433709,"type":"Level data","descriptio":"Level 007"},{"address":"$069E2E","length":"145 bytes. Ends at $069EBE.","beginsAt":433710,"endsAt":433854,"type":"Level data","descriptio":"Level 0E8"},{"address":"$069EBF","length":"165 bytes. Ends at $069F63.","beginsAt":433855,"endsAt":434019,"type":"Level data","descriptio":"Level 0E7 (Layer 2)"},{"address":"$069F64","length":"313 bytes. Ends at $06A09C.","beginsAt":434020,"endsAt":434332,"type":"Level data","descriptio":"Level 0E7"},{"address":"$06A09D","length":"151 bytes. Ends at $06A133.","beginsAt":434333,"endsAt":434483,"type":"Level data","descriptio":"Level 0E6"},{"address":"$06A134","length":"316 bytes. Ends at $06A26F.","beginsAt":434484,"endsAt":434799,"type":"Level data","descriptio":"Level 00A"},{"address":"$06A270","length":"130 bytes. Ends at $06A2F1.","beginsAt":434800,"endsAt":434929,"type":"Level data","descriptio":"Level 0C2"},{"address":"$06A2F2","length":"130 bytes. Ends at $06A373.","beginsAt":434930,"endsAt":435059,"type":"Level data","descriptio":"Level 013, 0EC, 0EE"},{"address":"$06A374","length":"172 bytes. Ends at $06A41F.","beginsAt":435060,"endsAt":435231,"type":"Level data","descriptio":"Level 0ED, 0F2"},{"address":"$06A420","length":"47 bytes. Ends at $06A44E.","beginsAt":435232,"endsAt":435278,"type":"Level data","descriptio":"Level 0F1"},{"address":"$06A44F","length":"18 bytes. Ends at $06A460.","beginsAt":435279,"endsAt":435296,"type":"Level data","descriptio":"Level 0E4"},{"address":"$06A461","length":"268 bytes. Ends at $06A56C.","beginsAt":435297,"endsAt":435564,"type":"Level data","descriptio":"Level 10B"},{"address":"$06A56D","length":"76 bytes. Ends at $06A5B8.","beginsAt":435565,"endsAt":435640,"type":"Level data","descriptio":"Level 1C6"},{"address":"$06A5B9","length":"71 bytes. Ends at $06A5FF.","beginsAt":435641,"endsAt":435711,"type":"Empty","descriptio":"Unused data"},{"address":"$06A600","length":"745 bytes. Ends at $06A8E8.","beginsAt":435712,"endsAt":436456,"type":"Level data","descriptio":"Level 11A"},{"address":"$06A8E9","length":"85 bytes. Ends at $06A93D.","beginsAt":436457,"endsAt":436541,"type":"Level data","descriptio":"Level 1EF"},{"address":"$06A93E","length":"33 bytes. Ends at $06A95E.","beginsAt":436542,"endsAt":436574,"type":"Level data","descriptio":"Level 1EF (Layer 2)"},{"address":"$06A95F","length":"841 bytes. Ends at $06ACA7.","beginsAt":436575,"endsAt":437415,"type":"Level data","descriptio":"Level 118"},{"address":"$06ACA8","length":"97 bytes. Ends at $06AD08.","beginsAt":437416,"endsAt":437512,"type":"Level data","descriptio":"Level 1C3"},{"address":"$06AD09","length":"271 bytes. Ends at $06AE17.","beginsAt":437513,"endsAt":437783,"type":"Level data","descriptio":"Level 107, 1FB"},{"address":"$06AE18","length":"101 bytes. Ends at $06AE7C.","beginsAt":437784,"endsAt":437884,"type":"Level data","descriptio":"Level 1EA"},{"address":"$06AE7D","length":"824 bytes. Ends at $06B1B4.","beginsAt":437885,"endsAt":438708,"type":"Level data","descriptio":"Level 10A"},{"address":"$06B1B5","length":"133 bytes. Ends at $06B239.","beginsAt":438709,"endsAt":438841,"type":"Level data","descriptio":"Level 1C2"},{"address":"$06B23A","length":"151 bytes. Ends at $06B2D0.","beginsAt":438842,"endsAt":438992,"type":"Level data","descriptio":"Level 1F7"},{"address":"$06B2D1","length":"337 bytes. Ends at $06B421.","beginsAt":438993,"endsAt":439329,"type":"Level data","descriptio":"Level 119"},{"address":"$06B422","length":"190 bytes. Ends at $06B4DF.","beginsAt":439330,"endsAt":439519,"type":"Level data","descriptio":"Level 1F5"},{"address":"$06B4E0","length":"320 bytes. Ends at $06B61F.","beginsAt":439520,"endsAt":439839,"type":"Level data","descriptio":"Level 11C"},{"address":"$06B620","length":"70 bytes. Ends at $06B665.","beginsAt":439840,"endsAt":439909,"type":"Level data","descriptio":"Level 1F4"},{"address":"$06B666","length":"229 bytes. Ends at $06B74A.","beginsAt":439910,"endsAt":440138,"type":"Level data","descriptio":"Level 1F3"},{"address":"$06B74B","length":"162 bytes. Ends at $06B7EC.","beginsAt":440139,"endsAt":440300,"type":"Level data","descriptio":"Level 1F3 (Layer 2)"},{"address":"$06B7ED","length":"42 bytes. Ends at $06B816.","beginsAt":440301,"endsAt":440342,"type":"Level data","descriptio":"Level 1F2"},{"address":"$06B817","length":"495 bytes. Ends at $06BA05.","beginsAt":440343,"endsAt":440837,"type":"Level data","descriptio":"Level 109"},{"address":"$06BA06","length":"45 bytes. Ends at $06BA32.","beginsAt":440838,"endsAt":440882,"type":"Level data","descriptio":"Level 1F1"},{"address":"$06BA33","length":"54 bytes. Ends at $06BA68.","beginsAt":440883,"endsAt":440936,"type":"Level data","descriptio":"Level 1F0"},{"address":"$06BA69","length":"352 bytes. Ends at $06BBC8.","beginsAt":440937,"endsAt":441288,"type":"Level data","descriptio":"Level 001"},{"address":"$06BBC9","length":"106 bytes. Ends at $06BC32.","beginsAt":441289,"endsAt":441394,"type":"Level data","descriptio":"Level 0D8"},{"address":"$06BC33","length":"187 bytes. Ends at $06BCED.","beginsAt":441395,"endsAt":441581,"type":"Level data","descriptio":"Level 002"},{"address":"$06BCEE","length":"33 bytes. Ends at $06BD0E.","beginsAt":441582,"endsAt":441614,"type":"Level data","descriptio":"Level 0CB"},{"address":"$06BD0F","length":"167 bytes. Ends at $06BDB5.","beginsAt":441615,"endsAt":441781,"type":"Level data","descriptio":"Level 00B"},{"address":"$06BDB6","length":"247 bytes. Ends at $06BEAC.","beginsAt":441782,"endsAt":442028,"type":"Level data","descriptio":"Level 0E0, 0E1"},{"address":"$06BEAD","length":"748 bytes. Ends at $06C198.","beginsAt":442029,"endsAt":442776,"type":"Level data","descriptio":"Level 00F"},{"address":"$06C199","length":"43 bytes. Ends at $06C1C3.","beginsAt":442777,"endsAt":442819,"type":"Level data","descriptio":"Level 0BF"},{"address":"$06C1C4","length":"433 bytes. Ends at $06C374.","beginsAt":442820,"endsAt":443252,"type":"Level data","descriptio":"Level 010"},{"address":"$06C375","length":"46 bytes. Ends at $06C3A2.","beginsAt":443253,"endsAt":443298,"type":"Level data","descriptio":"Level 0C1"},{"address":"$06C3A3","length":"203 bytes. Ends at $06C46D.","beginsAt":443299,"endsAt":443501,"type":"Level data","descriptio":"Level 00E"},{"address":"$06C46E","length":"39 bytes. Ends at $06C494.","beginsAt":443502,"endsAt":443540,"type":"Level data","descriptio":"Level 00E (Layer 2)"},{"address":"$06C495","length":"127 bytes. Ends at $06C513.","beginsAt":443541,"endsAt":443667,"type":"Level data","descriptio":"Level 0DC"},{"address":"$06C514","length":"69 bytes. Ends at $06C558.","beginsAt":443668,"endsAt":443736,"type":"Level data","descriptio":"Level 0DC (Layer 2)"},{"address":"$06C559","length":"403 bytes. Ends at $06C6EB.","beginsAt":443737,"endsAt":444139,"type":"Level data","descriptio":"Level 0DB"},{"address":"$06C6EC","length":"151 bytes. Ends at $06C782.","beginsAt":444140,"endsAt":444290,"type":"Level data","descriptio":"Level 0DA"},{"address":"$06C783","length":"454 bytes. Ends at $06C948.","beginsAt":444291,"endsAt":444744,"type":"Level data","descriptio":"Level 011"},{"address":"$06C949","length":"27 bytes. Ends at $06C963.","beginsAt":444745,"endsAt":444771,"type":"Level data","descriptio":"Level 0C6"},{"address":"$06C964","length":"1692 bytes. Ends at $06CFFF.","beginsAt":444772,"endsAt":446463,"type":"Empty","descriptio":"Filled with $FF."},{"address":"$06D000","length":"220 bytes. Ends at $06D0DB.","beginsAt":446464,"endsAt":446683,"type":"Level data","descriptio":"Level 00C"},{"address":"$06D0DC","length":"24 bytes. Ends at $06D0F3.","beginsAt":446684,"endsAt":446707,"type":"Level data","descriptio":"Level 0F3"},{"address":"$06D0F4","length":"226 bytes. Ends at $06D1D5.","beginsAt":446708,"endsAt":446933,"type":"Level data","descriptio":"Level 00D"},{"address":"$06D1D6","length":"100 bytes. Ends at $06D239.","beginsAt":446934,"endsAt":447033,"type":"Level data","descriptio":"Level 0DD"},{"address":"$06D23A","length":"465 bytes. Ends at $06D40A.","beginsAt":447034,"endsAt":447498,"type":"Level data","descriptio":"Level 11E"},{"address":"$06D40B","length":"744 bytes. Ends at $06D6F2.","beginsAt":447499,"endsAt":448242,"type":"Level data","descriptio":"Level 120"},{"address":"$06D6F3","length":"545 bytes. Ends at $06D913.","beginsAt":448243,"endsAt":448787,"type":"Level data","descriptio":"Level 123"},{"address":"$06D914","length":"46 bytes. Ends at $06D941.","beginsAt":448788,"endsAt":448833,"type":"Level data","descriptio":"Level 1F8"},{"address":"$06D942","length":"151 bytes. Ends at $06D9D8.","beginsAt":448834,"endsAt":448984,"type":"Level data","descriptio":"Level 1BC"},{"address":"$06D9D9","length":"229 bytes. Ends at $06DABD.","beginsAt":448985,"endsAt":449213,"type":"Level data","descriptio":"Level 020"},{"address":"$06DABE","length":"207 bytes. Ends at $06DB8C.","beginsAt":449214,"endsAt":449420,"type":"Level data","descriptio":"Level 11D, 1E8, 1E9"},{"address":"$06DB8D","length":"837 bytes. Ends at $06DED1.","beginsAt":449421,"endsAt":450257,"type":"Level data","descriptio":"Level 11D, 1E8, 1E9 (Layer 2)"},{"address":"$06DED2","length":"116 bytes. Ends at $06DF45.","beginsAt":450258,"endsAt":450373,"type":"Level data","descriptio":"Level 1FA"},{"address":"$06DF46","length":"21 bytes. Ends at $06DF5A.","beginsAt":450374,"endsAt":450394,"type":"Level data","descriptio":"Level 1E6"},{"address":"$06DF5B","length":"425 bytes. Ends at $06E103.","beginsAt":450395,"endsAt":450819,"type":"Level data","descriptio":"Level 11F"},{"address":"$06E104","length":"36 bytes. Ends at $06E127.","beginsAt":450820,"endsAt":450855,"type":"Level data","descriptio":"Level 1DF"},{"address":"$06E128","length":"91 bytes. Ends at $06E182.","beginsAt":450856,"endsAt":450946,"type":"Level data","descriptio":"Level 1C1"},{"address":"$06E183","length":"135 bytes. Ends at $06E209.","beginsAt":450947,"endsAt":451081,"type":"Level data","descriptio":"Level 122"},{"address":"$06E20A","length":"253 bytes. Ends at $06E306.","beginsAt":451082,"endsAt":451334,"type":"Level data","descriptio":"Level 01F"},{"address":"$06E307","length":"317 bytes. Ends at $06E443.","beginsAt":451335,"endsAt":451651,"type":"Level data","descriptio":"Level 0D6"},{"address":"$06E444","length":"396 bytes. Ends at $06E5CF.","beginsAt":451652,"endsAt":452047,"type":"Level data","descriptio":"Level 022, 0D0, 0D1"},{"address":"$06E5D0","length":"414 bytes. Ends at $06E76D.","beginsAt":452048,"endsAt":452461,"type":"Level data","descriptio":"Level 0F5, 0F6"},{"address":"$06E76E","length":"52 bytes. Ends at $06E7A1.","beginsAt":452462,"endsAt":452513,"type":"Level data","descriptio":"Level 0BE"},{"address":"$06E7A2","length":"115 bytes. Ends at $06E814.","beginsAt":452514,"endsAt":452628,"type":"Level data","descriptio":"Level 021"},{"address":"$06E815","length":"130 bytes. Ends at $06E896.","beginsAt":452629,"endsAt":452758,"type":"Level data","descriptio":"Level 0FC"},{"address":"$06E897","length":"238 bytes. Ends at $06E984.","beginsAt":452759,"endsAt":452996,"type":"Level data","descriptio":"Level 024"},{"address":"$06E985","length":"118 bytes. Ends at $06E9FA.","beginsAt":452997,"endsAt":453114,"type":"Level data","descriptio":"Level 0CF"},{"address":"$06E9FB","length":"181 bytes. Ends at $06EAAF.","beginsAt":453115,"endsAt":453295,"type":"Level data","descriptio":"Chocolate Island 2 - Level 1"},{"address":"$06EAB0","length":"91 bytes. Ends at $06EB0A.","beginsAt":453296,"endsAt":453386,"type":"Level data","descriptio":"Chocolate Island 2 - Level 2"},{"address":"$06EB0B","length":"103 bytes. Ends at $06EB71.","beginsAt":453387,"endsAt":453489,"type":"Level data","descriptio":"Level 0CE"},{"address":"$06EB72","length":"76 bytes. Ends at $06EBBD.","beginsAt":453490,"endsAt":453565,"type":"Level data","descriptio":"Chocolate Island 2 - Level 3"},{"address":"$06EBBE","length":"102 bytes. Ends at $06EC23.","beginsAt":453566,"endsAt":453667,"type":"Level data","descriptio":"Chocolate Island 2 - Level 4"},{"address":"$06EC24","length":"90 bytes. Ends at $06EC7D.","beginsAt":453668,"endsAt":453757,"type":"Level data","descriptio":"Level 0CD"},{"address":"$06EC7E","length":"75 bytes. Ends at $06ECC8.","beginsAt":453758,"endsAt":453832,"type":"Level data","descriptio":"Chocolate Island 2 - Level 5"},{"address":"$06ECC9","length":"286 bytes. Ends at $06EDE6.","beginsAt":453833,"endsAt":454118,"type":"Level data","descriptio":"Level 023"},{"address":"$06EDE7","length":"79 bytes. Ends at $06EE35.","beginsAt":454119,"endsAt":454197,"type":"Level data","descriptio":"Level 0D7"},{"address":"$06EE36","length":"199 bytes. Ends at $06EEFC.","beginsAt":454198,"endsAt":454396,"type":"Level data","descriptio":"Level 01B"},{"address":"$06EEFD","length":"352 bytes. Ends at $06F05C.","beginsAt":454397,"endsAt":454748,"type":"Level data","descriptio":"Level 0EF"},{"address":"$06F05D","length":"263 bytes. Ends at $06F163.","beginsAt":454749,"endsAt":455011,"type":"Level data","descriptio":"Level 117"},{"address":"$06F164","length":"505 bytes. Ends at $06F35C.","beginsAt":455012,"endsAt":455516,"type":"Level data","descriptio":"Level 1ED"},{"address":"$06F35D","length":"205 bytes. Ends at $06F429.","beginsAt":455517,"endsAt":455721,"type":"Level data","descriptio":"Level 1EC"},{"address":"$06F42A","length":"210 bytes. Ends at $06F4FB.","beginsAt":455722,"endsAt":455931,"type":"Level data","descriptio":"Level 1EC (Layer 2)"},{"address":"$06F4FC","length":"21 bytes. Ends at $06F510.","beginsAt":455932,"endsAt":455952,"type":"Level data","descriptio":"Level 1EE"},{"address":"$06F511","length":"40 bytes. Ends at $06F538.","beginsAt":455953,"endsAt":455992,"type":"Level data","descriptio":"Level 1C0"},{"address":"$06F539","length":"2759 bytes. Ends at $06FFFF.","beginsAt":455993,"endsAt":458751,"type":"Empty","descriptio":"Filled with $FF.\n\n464 bytes at $06F600 used for LM's Map16 custom behavior routine."},{"address":"$078000","length":"24 bytes. Ends at $078017.","beginsAt":491520,"endsAt":491543,"type":"Level data","descriptio":"Ghost house entrance"},{"address":"$078018","length":"6 bytes. Ends at $07801D.","beginsAt":491544,"endsAt":491549,"type":"Level data","descriptio":"Empty level (header only). Used as layer 2 when no background is needed."},{"address":"$07801E","length":"15 bytes. Ends at $07802C.","beginsAt":491550,"endsAt":491564,"type":"Level data","descriptio":"Castle entrance 1"},{"address":"$07802D","length":"33 bytes. Ends at $07804D.","beginsAt":491565,"endsAt":491597,"type":"Level data","descriptio":"Level 104"},{"address":"$07804E","length":"18 bytes. Ends at $07805F.","beginsAt":491598,"endsAt":491615,"type":"Level data","descriptio":"No Yoshi sign entrance 1"},{"address":"$078060","length":"33 bytes. Ends at $078080.","beginsAt":491616,"endsAt":491648,"type":"Level data","descriptio":"Unused level: Ghost House Exit"},{"address":"$078081","length":"15 bytes. Ends at $07808F.","beginsAt":491649,"endsAt":491663,"type":"Level data","descriptio":"Unused level: Three bushes"},{"address":"$078090","length":"15 bytes. Ends at $07809E.","beginsAt":491664,"endsAt":491678,"type":"Level data","descriptio":"Castle entrance 2"},{"address":"$07809F","length":"18 bytes. Ends at $0780B0.","beginsAt":491679,"endsAt":491696,"type":"Level data","descriptio":"No Yoshi sign entrance 2"},{"address":"$0780B1","length":"18 bytes. Ends at $0780C2.","beginsAt":491697,"endsAt":491714,"type":"Level data","descriptio":"No Yoshi sign entrance 3"},{"address":"$0780C3","length":"42 bytes. Ends at $0780EC.","beginsAt":491715,"endsAt":491756,"type":"Level data","descriptio":"Level 108"},{"address":"$0780ED","length":"19 bytes. Ends at $0780FF.","beginsAt":491757,"endsAt":491775,"type":"Empty","descriptio":"Empty"},{"address":"$078100","length":"1204 bytes. Ends at $0785B3.","beginsAt":491776,"endsAt":492979,"type":"Level data","descriptio":"Level 01D"},{"address":"$0785B4","length":"303 bytes. Ends at $0786E2.","beginsAt":492980,"endsAt":493282,"type":"Level data","descriptio":"Level 0EA"},{"address":"$0786E3","length":"488 bytes. Ends at $0788CA.","beginsAt":493283,"endsAt":493770,"type":"Level data","descriptio":"Level 01C"},{"address":"$0788CB","length":"106 bytes. Ends at $078934.","beginsAt":493771,"endsAt":493876,"type":"Level data","descriptio":"Level 0C0"},{"address":"$078935","length":"151 bytes. Ends at $0789CB.","beginsAt":493877,"endsAt":494027,"type":"Level data","descriptio":"Level 0BD"},{"address":"$0789CC","length":"337 bytes. Ends at $078B1C.","beginsAt":494028,"endsAt":494364,"type":"Level data","descriptio":"Level 01A"},{"address":"$078B1D","length":"45 bytes. Ends at $078B49.","beginsAt":494365,"endsAt":494409,"type":"Level data","descriptio":"Level 01A (Layer 2)"},{"address":"$078B4A","length":"109 bytes. Ends at $078BB6.","beginsAt":494410,"endsAt":494518,"type":"Level data","descriptio":"Level 0D4"},{"address":"$078BB7","length":"51 bytes. Ends at $078BE9.","beginsAt":494519,"endsAt":494569,"type":"Level data","descriptio":"Level 0D4 (Layer 2)"},{"address":"$078BEA","length":"42 bytes. Ends at $078C13.","beginsAt":494570,"endsAt":494611,"type":"Level data","descriptio":"Level 0D3"},{"address":"$078C14","length":"178 bytes. Ends at $078CC5.","beginsAt":494612,"endsAt":494789,"type":"Level data","descriptio":"Level 018"},{"address":"$078CC6","length":"229 bytes. Ends at $078DAA.","beginsAt":494790,"endsAt":495018,"type":"Level data","descriptio":"Level 0F8"},{"address":"$078DAB","length":"249 bytes. Ends at $078EA3.","beginsAt":495019,"endsAt":495267,"type":"Level data","descriptio":"Level 0F7"},{"address":"$078EA4","length":"893 bytes. Ends at $079220.","beginsAt":495268,"endsAt":496160,"type":"Level data","descriptio":"Level 116"},{"address":"$079221","length":"18 bytes. Ends at $079232.","beginsAt":496161,"endsAt":496178,"type":"Level data","descriptio":"Level 1E5"},{"address":"$079233","length":"151 bytes. Ends at $0792C9.","beginsAt":496179,"endsAt":496329,"type":"Level data","descriptio":"Level 1E4"},{"address":"$0792CA","length":"178 bytes. Ends at $07937B.","beginsAt":496330,"endsAt":496507,"type":"Level data","descriptio":"Level 115"},{"address":"$07937C","length":"102 bytes. Ends at $0793E1.","beginsAt":496508,"endsAt":496609,"type":"Level data","descriptio":"Level 115 (Layer 2)"},{"address":"$0793E2","length":"451 bytes. Ends at $0795A4.","beginsAt":496610,"endsAt":497060,"type":"Level data","descriptio":"Level 1E3"},{"address":"$0795A5","length":"75 bytes. Ends at $0795EF.","beginsAt":497061,"endsAt":497135,"type":"Level data","descriptio":"Level 1E3 (Layer 2)"},{"address":"$0795F0","length":"366 bytes. Ends at $07975D.","beginsAt":497136,"endsAt":497501,"type":"Level data","descriptio":"Level 1E2"},{"address":"$07975E","length":"30 bytes. Ends at $07977B.","beginsAt":497502,"endsAt":497531,"type":"Level data","descriptio":"Level 1E2 (Layer 2)"},{"address":"$07977C","length":"135 bytes. Ends at $079802.","beginsAt":497532,"endsAt":497666,"type":"Level data","descriptio":"Level 0C8"},{"address":"$079803","length":"100 bytes. Ends at $079866.","beginsAt":497667,"endsAt":497766,"type":"Level data","descriptio":"Level 114, 1D9"},{"address":"$079867","length":"258 bytes. Ends at $079968.","beginsAt":497767,"endsAt":498024,"type":"Level data","descriptio":"Level 1DD"},{"address":"$079969","length":"109 bytes. Ends at $0799D5.","beginsAt":498025,"endsAt":498133,"type":"Level data","descriptio":"Level 1DB, 1DC"},{"address":"$0799D6","length":"235 bytes. Ends at $079AC0.","beginsAt":498134,"endsAt":498368,"type":"Level data","descriptio":"Level 113"},{"address":"$079AC1","length":"151 bytes. Ends at $079B57.","beginsAt":498369,"endsAt":498519,"type":"Level data","descriptio":"Level 1BB"},{"address":"$079B58","length":"556 bytes. Ends at $079D83.","beginsAt":498520,"endsAt":499075,"type":"Level data","descriptio":"Level 10F"},{"address":"$079D84","length":"94 bytes. Ends at $079DE1.","beginsAt":499076,"endsAt":499169,"type":"Level data","descriptio":"Level 1BF"},{"address":"$079DE2","length":"320 bytes. Ends at $079F21.","beginsAt":499170,"endsAt":499489,"type":"Level data","descriptio":"Level 110"},{"address":"$079F22","length":"262 bytes. Ends at $07A027.","beginsAt":499490,"endsAt":499751,"type":"Level data","descriptio":"Level 1FE"},{"address":"$07A028","length":"268 bytes. Ends at $07A133.","beginsAt":499752,"endsAt":500019,"type":"Level data","descriptio":"Level 111"},{"address":"$07A134","length":"69 bytes. Ends at $07A178.","beginsAt":500020,"endsAt":500088,"type":"Level data","descriptio":"Level 111 (Layer 2)"},{"address":"$07A179","length":"1159 bytes. Ends at $07A5FF.","beginsAt":500089,"endsAt":501247,"type":"Empty","descriptio":"Filled with $FF."},{"address":"$07A600","length":"142 bytes. Ends at $07A68D.","beginsAt":501248,"endsAt":501389,"type":"Level data","descriptio":"Level 10D"},{"address":"$07A68E","length":"121 bytes. Ends at $07A706.","beginsAt":501390,"endsAt":501510,"type":"Level data","descriptio":"Level 1D4"},{"address":"$07A707","length":"94 bytes. Ends at $07A764.","beginsAt":501511,"endsAt":501604,"type":"Level data","descriptio":"Level 1D3"},{"address":"$07A765","length":"157 bytes. Ends at $07A801.","beginsAt":501605,"endsAt":501761,"type":"Level data","descriptio":"Level 1D2"},{"address":"$07A802","length":"61 bytes. Ends at $07A83E.","beginsAt":501762,"endsAt":501822,"type":"Level data","descriptio":"Level 1D1"},{"address":"$07A83F","length":"154 bytes. Ends at $07A8D8.","beginsAt":501823,"endsAt":501976,"type":"Level data","descriptio":"Level 1D0"},{"address":"$07A8D9","length":"91 bytes. Ends at $07A933.","beginsAt":501977,"endsAt":502067,"type":"Level data","descriptio":"Level 1CF"},{"address":"$07A934","length":"45 bytes. Ends at $07A960.","beginsAt":502068,"endsAt":502112,"type":"Level data","descriptio":"Level 1CF (Layer 2)"},{"address":"$07A961","length":"130 bytes. Ends at $07A9E2.","beginsAt":502113,"endsAt":502242,"type":"Level data","descriptio":"Level 1CE"},{"address":"$07A9E3","length":"51 bytes. Ends at $07AA15.","beginsAt":502243,"endsAt":502293,"type":"Level data","descriptio":"Level 1CE (Layer 2)"},{"address":"$07AA16","length":"97 bytes. Ends at $07AA76.","beginsAt":502294,"endsAt":502390,"type":"Level data","descriptio":"Level 1CD"},{"address":"$07AA77","length":"82 bytes. Ends at $07AAC8.","beginsAt":502391,"endsAt":502472,"type":"Level data","descriptio":"Level 1CC"},{"address":"$07AAC9","length":"304 bytes. Ends at $07ABF8.","beginsAt":502473,"endsAt":502776,"type":"Level data","descriptio":"Level 1BD"},{"address":"$07ABF9","length":"310 bytes. Ends at $07AD2E.","beginsAt":502777,"endsAt":503086,"type":"Level data","descriptio":"Level 10E"},{"address":"$07AD2F","length":"6 bytes. Ends at $07AD34.","beginsAt":503087,"endsAt":503092,"type":"Level data","descriptio":"Level 1C7"},{"address":"$07AD35","length":"481 bytes. Ends at $07AF15.","beginsAt":503093,"endsAt":503573,"type":"Level data","descriptio":"Level 134"},{"address":"$07AF16","length":"15 bytes. Ends at $07AF24.","beginsAt":503574,"endsAt":503588,"type":"Level data","descriptio":"Level 1D6"},{"address":"$07AF25","length":"169 bytes. Ends at $07AFCD.","beginsAt":503589,"endsAt":503757,"type":"Level data","descriptio":"Level 130"},{"address":"$07AFCE","length":"21 bytes. Ends at $07AFE2.","beginsAt":503758,"endsAt":503778,"type":"Level data","descriptio":"Level 1D5"},{"address":"$07AFE3","length":"78 bytes. Ends at $07B030.","beginsAt":503779,"endsAt":503856,"type":"Level data","descriptio":"Level 132"},{"address":"$07B031","length":"243 bytes. Ends at $07B123.","beginsAt":503857,"endsAt":504099,"type":"Level data","descriptio":"Level 135"},{"address":"$07B124","length":"327 bytes. Ends at $07B26A.","beginsAt":504100,"endsAt":504426,"type":"Level data","descriptio":"Level 136"},{"address":"$07B26B","length":"347 bytes. Ends at $07B3C5.","beginsAt":504427,"endsAt":504773,"type":"Level data","descriptio":"Level 12A"},{"address":"$07B3C6","length":"168 bytes. Ends at $07B46D.","beginsAt":504774,"endsAt":504941,"type":"Level data","descriptio":"Level 1C4, 1C5"},{"address":"$07B46E","length":"210 bytes. Ends at $07B53F.","beginsAt":504942,"endsAt":505151,"type":"Level data","descriptio":"Level 12B"},{"address":"$07B540","length":"829 bytes. Ends at $07B87C.","beginsAt":505152,"endsAt":505980,"type":"Level data","descriptio":"Level 12C"},{"address":"$07B87D","length":"25 bytes. Ends at $07B895.","beginsAt":505981,"endsAt":506005,"type":"Level data","descriptio":"Level 1C9"},{"address":"$07B896","length":"114 bytes. Ends at $07B907.","beginsAt":506006,"endsAt":506119,"type":"Level data","descriptio":"Level 1C8"},{"address":"$07B908","length":"438 bytes. Ends at $07BABD.","beginsAt":506120,"endsAt":506557,"type":"Level data","descriptio":"Level 12D"},{"address":"$07BABE","length":"339 bytes. Ends at $07BC10.","beginsAt":506558,"endsAt":506896,"type":"Level data","descriptio":"Level 128"},{"address":"$07BC11","length":"356 bytes. Ends at $07BD74.","beginsAt":506897,"endsAt":507252,"type":"Level data","descriptio":"Level 127"},{"address":"$07BD75","length":"21 bytes. Ends at $07BD89.","beginsAt":507253,"endsAt":507273,"type":"Level data","descriptio":"Level 1E1"},{"address":"$07BD8A","length":"91 bytes. Ends at $07BDE4.","beginsAt":507274,"endsAt":507364,"type":"Level data","descriptio":"Level 1E0"},{"address":"$07BDE5","length":"384 bytes. Ends at $07BF64.","beginsAt":507365,"endsAt":507748,"type":"Level data","descriptio":"Level 126"},{"address":"$07BF65","length":"705 bytes. Ends at $07C225.","beginsAt":507749,"endsAt":508453,"type":"Level data","descriptio":"Level 125"},{"address":"$07C226","length":"218 bytes. Ends at $07C2FF.","beginsAt":508454,"endsAt":508671,"type":"Empty","descriptio":"Filled with $FF"},{"address":"$07C300","length":"14 bytes. Ends at $07C30D.","beginsAt":508672,"endsAt":508685,"type":"Level data","descriptio":"Unused level: Ride Among the Clouds (Sprites)"},{"address":"$07C30E","length":"50 bytes. Ends at $07C33F.","beginsAt":508686,"endsAt":508735,"type":"Level data","descriptio":"Unused level: Mushroom Scales (Sprites)"},{"address":"$07C340","length":"5 bytes. Ends at $07C344.","beginsAt":508736,"endsAt":508740,"type":"Level data","descriptio":"Level 09B, 19B (Sprites)"},{"address":"$07C345","length":"5 bytes. Ends at $07C349.","beginsAt":508741,"endsAt":508745,"type":"Level data","descriptio":"Level 09A, 19A (Sprites)"},{"address":"$07C34A","length":"5 bytes. Ends at $07C34E.","beginsAt":508746,"endsAt":508750,"type":"Level data","descriptio":"Level 099, 199 (Sprites)"},{"address":"$07C34F","length":"5 bytes. Ends at $07C353.","beginsAt":508751,"endsAt":508755,"type":"Level data","descriptio":"Level 098, 198 (Sprites)"},{"address":"$07C354","length":"5 bytes. Ends at $07C358.","beginsAt":508756,"endsAt":508760,"type":"Level data","descriptio":"Level 097, 197 (Sprites)"},{"address":"$07C359","length":"14 bytes. Ends at $07C366.","beginsAt":508761,"endsAt":508774,"type":"Level data","descriptio":"Level 096, 196 (Sprites)"},{"address":"$07C367","length":"14 bytes. Ends at $07C374.","beginsAt":508775,"endsAt":508788,"type":"Level data","descriptio":"Level 095, 195 (Sprites)"},{"address":"$07C375","length":"38 bytes. Ends at $07C39A.","beginsAt":508789,"endsAt":508826,"type":"Level data","descriptio":"Unused level: Lava Cave (Sprites)"},{"address":"$07C39B","length":"14 bytes. Ends at $07C3A8.","beginsAt":508827,"endsAt":508840,"type":"Level data","descriptio":"Unused level: Twin Blocks (Sprites)"},{"address":"$07C3A9","length":"50 bytes. Ends at $07C3DA.","beginsAt":508841,"endsAt":508890,"type":"Level data","descriptio":"Unused level: Beta level 01A (Sprites)"},{"address":"$07C3DB","length":"8 bytes. Ends at $07C3E2.","beginsAt":508891,"endsAt":508898,"type":"Level data","descriptio":"Level 093, 194 (Sprites)"},{"address":"$07C3E3","length":"11 bytes. Ends at $07C3ED.","beginsAt":508899,"endsAt":508909,"type":"Level data","descriptio":"Level 094, 193 (Sprites)"},{"address":"$07C3EE","length":"2 bytes. Ends at $07C3EF.","beginsAt":508910,"endsAt":508911,"type":"Level data","descriptio":"Level 0BD, 0DA, 0E6, 0F4, 0FA, 0FD, 1BB, 1BC, 1C9, 1CB, 1E0, 1E4, 1F4, 1F7 (Sprites)"},{"address":"$07C3F0","length":"5 bytes. Ends at $07C3F4.","beginsAt":508912,"endsAt":508916,"type":"Level data","descriptio":"Level 0C6, 0CB, 0F3, 0FF, 1D5, 1D6, 1E1, 1EE (Sprites)"},{"address":"$07C3F5","length":"8 bytes. Ends at $07C3FC.","beginsAt":508917,"endsAt":508924,"type":"Level data","descriptio":"Level 0C4, 0F0, 0FB, 1DA, 1E6, 1F9 (Sprites)"},{"address":"$07C3FD","length":"5 bytes. Ends at $07C401.","beginsAt":508925,"endsAt":508929,"type":"Level data","descriptio":"Unused level: Goal 1 (Sprites)"},{"address":"$07C402","length":"5 bytes. Ends at $07C406.","beginsAt":508930,"endsAt":508934,"type":"Level data","descriptio":"Unused level: Goal 2 (Sprites)"},{"address":"$07C407","length":"5 bytes. Ends at $07C40B.","beginsAt":508935,"endsAt":508939,"type":"Level data","descriptio":"Level 000, 100 (Sprites)"},{"address":"$07C40C","length":"8 bytes. Ends at $07C413.","beginsAt":508940,"endsAt":508947,"type":"Level data","descriptio":"Level 0EB, 1E7 (Sprites)"},{"address":"$07C414","length":"14 bytes. Ends at $07C421.","beginsAt":508948,"endsAt":508961,"type":"Level data","descriptio":"Level 0D5, 0DF, 0E2, 1DE (Sprites)"},{"address":"$07C422","length":"5 bytes. Ends at $07C426.","beginsAt":508962,"endsAt":508966,"type":"Level data","descriptio":"Level 10D, 1D0 (Sprites)"},{"address":"$07C427","length":"26 bytes. Ends at $07C440.","beginsAt":508967,"endsAt":508992,"type":"Level data","descriptio":"Level 0C7 (Sprites)"},{"address":"$07C441","length":"5 bytes. Ends at $07C445.","beginsAt":508993,"endsAt":508997,"type":"Level data","descriptio":"Level 0C5 (Sprites)"},{"address":"$07C446","length":"5 bytes. Ends at $07C44A.","beginsAt":508998,"endsAt":509002,"type":"Level data","descriptio":"Level 014 (Sprites)"},{"address":"$07C44B","length":"5 bytes. Ends at $07C44F.","beginsAt":509003,"endsAt":509007,"type":"Level data","descriptio":"Level 0CA (Sprites)"},{"address":"$07C450","length":"35 bytes. Ends at $07C472.","beginsAt":509008,"endsAt":509042,"type":"Level data","descriptio":"Level 11B (Sprites)"},{"address":"$07C473","length":"5 bytes. Ends at $07C477.","beginsAt":509043,"endsAt":509047,"type":"Level data","descriptio":"Level 1D8 (Sprites)"},{"address":"$07C478","length":"32 bytes. Ends at $07C497.","beginsAt":509048,"endsAt":509079,"type":"Level data","descriptio":"Level 121 (Sprites)"},{"address":"$07C498","length":"5 bytes. Ends at $07C49C.","beginsAt":509080,"endsAt":509084,"type":"Level data","descriptio":"Level 1D7 (Sprites)"},{"address":"$07C49D","length":"35 bytes. Ends at $07C4BF.","beginsAt":509085,"endsAt":509119,"type":"Level data","descriptio":"Level 008 (Sprites)"},{"address":"$07C4C0","length":"5 bytes. Ends at $07C4C4.","beginsAt":509120,"endsAt":509124,"type":"Level data","descriptio":"Level 0C9 (Sprites)"},{"address":"$07C4C5","length":"5 bytes. Ends at $07C4C9.","beginsAt":509125,"endsAt":509129,"type":"Level data","descriptio":"Level 003 (Sprites)"},{"address":"$07C4CA","length":"104 bytes. Ends at $07C531.","beginsAt":509130,"endsAt":509233,"type":"Level data","descriptio":"Level 105 (Sprites)"},{"address":"$07C532","length":"77 bytes. Ends at $07C57E.","beginsAt":509234,"endsAt":509310,"type":"Level data","descriptio":"Level 106 (Sprites)"},{"address":"$07C57F","length":"20 bytes. Ends at $07C592.","beginsAt":509311,"endsAt":509330,"type":"Level data","descriptio":"Level 1CA (Sprites)"},{"address":"$07C593","length":"92 bytes. Ends at $07C5EE.","beginsAt":509331,"endsAt":509422,"type":"Level data","descriptio":"Level 103 (Sprites)"},{"address":"$07C5EF","length":"5 bytes. Ends at $07C5F3.","beginsAt":509423,"endsAt":509427,"type":"Level data","descriptio":"Level 1FD (Sprites)"},{"address":"$07C5F4","length":"101 bytes. Ends at $07C658.","beginsAt":509428,"endsAt":509528,"type":"Level data","descriptio":"Level 102 (Sprites)"},{"address":"$07C659","length":"8 bytes. Ends at $07C660.","beginsAt":509529,"endsAt":509536,"type":"Level data","descriptio":"Level 1FF (Sprites)"},{"address":"$07C661","length":"14 bytes. Ends at $07C66E.","beginsAt":509537,"endsAt":509550,"type":"Level data","descriptio":"Level 1BE (Sprites)"},{"address":"$07C66F","length":"80 bytes. Ends at $07C6BE.","beginsAt":509551,"endsAt":509630,"type":"Level data","descriptio":"Level 101 (Sprites)"},{"address":"$07C6BF","length":"17 bytes. Ends at $07C6CF.","beginsAt":509631,"endsAt":509647,"type":"Level data","descriptio":"Level 1FC (Sprites)"},{"address":"$07C6D0","length":"5 bytes. Ends at $07C6D4.","beginsAt":509648,"endsAt":509652,"type":"Level data","descriptio":"Level 1F6 (Sprites)"},{"address":"$07C6D5","length":"116 bytes. Ends at $07C748.","beginsAt":509653,"endsAt":509768,"type":"Level data","descriptio":"Level 015-017 (Sprites)"},{"address":"$07C749","length":"8 bytes. Ends at $07C750.","beginsAt":509769,"endsAt":509776,"type":"Level data","descriptio":"Level 0E3 (Sprites)"},{"address":"$07C751","length":"86 bytes. Ends at $07C7A6.","beginsAt":509777,"endsAt":509862,"type":"Level data","descriptio":"Level 009 (Sprites)"},{"address":"$07C7A7","length":"14 bytes. Ends at $07C7B4.","beginsAt":509863,"endsAt":509876,"type":"Level data","descriptio":"Level 0E9 (Sprites)"},{"address":"$07C7B5","length":"8 bytes. Ends at $07C7BC.","beginsAt":509877,"endsAt":509884,"type":"Level data","descriptio":"Level 004 (Sprites)"},{"address":"$07C7BD","length":"14 bytes. Ends at $07C7CA.","beginsAt":509885,"endsAt":509898,"type":"Level data","descriptio":"Level 0DE, 0F9 (Sprites)"},{"address":"$07C7CB","length":"14 bytes. Ends at $07C7D8.","beginsAt":509899,"endsAt":509912,"type":"Level data","descriptio":"Level 0FE (Sprites)"},{"address":"$07C7D9","length":"107 bytes. Ends at $07C843.","beginsAt":509913,"endsAt":510019,"type":"Level data","descriptio":"Level 005 (Sprites)"},{"address":"$07C844","length":"137 bytes. Ends at $07C8CC.","beginsAt":510020,"endsAt":510156,"type":"Level data","descriptio":"Level 006 (Sprites)"},{"address":"$07C8CD","length":"29 bytes. Ends at $07C8E9.","beginsAt":510157,"endsAt":510185,"type":"Level data","descriptio":"Level 0D2 (Sprites)"},{"address":"$07C8EA","length":"26 bytes. Ends at $07C903.","beginsAt":510186,"endsAt":510211,"type":"Level data","descriptio":"Level 0C3 (Sprites)"},{"address":"$07C904","length":"17 bytes. Ends at $07C914.","beginsAt":510212,"endsAt":510228,"type":"Level data","descriptio":"Level 007 (Sprites)"},{"address":"$07C915","length":"17 bytes. Ends at $07C925.","beginsAt":510229,"endsAt":510245,"type":"Level data","descriptio":"Level 0E8 (Sprites)"},{"address":"$07C926","length":"29 bytes. Ends at $07C942.","beginsAt":510246,"endsAt":510274,"type":"Level data","descriptio":"Level 0E7 (Sprites)"},{"address":"$07C943","length":"5 bytes. Ends at $07C947.","beginsAt":510275,"endsAt":510279,"type":"Level data","descriptio":"Level 0E5 (Sprites)"},{"address":"$07C948","length":"98 bytes. Ends at $07C9A9.","beginsAt":510280,"endsAt":510377,"type":"Level data","descriptio":"Level 00A (Sprites)"},{"address":"$07C9AA","length":"32 bytes. Ends at $07C9C9.","beginsAt":510378,"endsAt":510409,"type":"Level data","descriptio":"Level 0C2 (Sprites)"},{"address":"$07C9CA","length":"17 bytes. Ends at $07C9DA.","beginsAt":510410,"endsAt":510426,"type":"Level data","descriptio":"Level 013, 0EC, 0EE (Sprites)"},{"address":"$07C9DB","length":"23 bytes. Ends at $07C9F1.","beginsAt":510427,"endsAt":510449,"type":"Level data","descriptio":"Level 0ED, 0F2 (Sprites)"},{"address":"$07C9F2","length":"26 bytes. Ends at $07CA0B.","beginsAt":510450,"endsAt":510475,"type":"Level data","descriptio":"Level 0F1 (Sprites)"},{"address":"$07CA0C","length":"11 bytes. Ends at $07CA16.","beginsAt":510476,"endsAt":510486,"type":"Level data","descriptio":"Level 0E4 (Sprites)"},{"address":"$07CA17","length":"86 bytes. Ends at $07CA6C.","beginsAt":510487,"endsAt":510572,"type":"Level data","descriptio":"Level 10B (Sprites)"},{"address":"$07CA6D","length":"26 bytes. Ends at $07CA86.","beginsAt":510573,"endsAt":510598,"type":"Level data","descriptio":"Level 1C6 (Sprites)"},{"address":"$07CA87","length":"122 bytes. Ends at $07CB00.","beginsAt":510599,"endsAt":510720,"type":"Level data","descriptio":"Level 11A (Sprites)"},{"address":"$07CB01","length":"41 bytes. Ends at $07CB29.","beginsAt":510721,"endsAt":510761,"type":"Level data","descriptio":"Level 1EF (Sprites)"},{"address":"$07CB2A","length":"155 bytes. Ends at $07CBC4.","beginsAt":510762,"endsAt":510916,"type":"Level data","descriptio":"Level 118 (Sprites)"},{"address":"$07CBC5","length":"23 bytes. Ends at $07CBDB.","beginsAt":510917,"endsAt":510939,"type":"Level data","descriptio":"Level 1C3 (Sprites)"},{"address":"$07CBDC","length":"53 bytes. Ends at $07CC10.","beginsAt":510940,"endsAt":510992,"type":"Level data","descriptio":"Level 107, 1FB (Sprites)"},{"address":"$07CC11","length":"20 bytes. Ends at $07CC24.","beginsAt":510993,"endsAt":511012,"type":"Level data","descriptio":"Level 1EA (Sprites)"},{"address":"$07CC25","length":"149 bytes. Ends at $07CCB9.","beginsAt":511013,"endsAt":511161,"type":"Level data","descriptio":"Level 10A (Sprites)"},{"address":"$07CCBA","length":"26 bytes. Ends at $07CCD3.","beginsAt":511162,"endsAt":511187,"type":"Level data","descriptio":"Level 1C2 (Sprites)"},{"address":"$07CCD4","length":"143 bytes. Ends at $07CD62.","beginsAt":511188,"endsAt":511330,"type":"Level data","descriptio":"Level 119 (Sprites)"},{"address":"$07CD63","length":"5 bytes. Ends at $07CD67.","beginsAt":511331,"endsAt":511335,"type":"Level data","descriptio":"Level 1F5 (Sprites)"},{"address":"$07CD68","length":"44 bytes. Ends at $07CD93.","beginsAt":511336,"endsAt":511379,"type":"Level data","descriptio":"Level 11C (Sprites)"},{"address":"$07CD94","length":"44 bytes. Ends at $07CDBF.","beginsAt":511380,"endsAt":511423,"type":"Level data","descriptio":"Level 1F3 (Sprites)"},{"address":"$07CDC0","length":"8 bytes. Ends at $07CDC7.","beginsAt":511424,"endsAt":511431,"type":"Level data","descriptio":"Level 1F2 (Sprites)"},{"address":"$07CDC8","length":"68 bytes. Ends at $07CE0B.","beginsAt":511432,"endsAt":511499,"type":"Level data","descriptio":"Level 109 (Sprites)"},{"address":"$07CE0C","length":"8 bytes. Ends at $07CE13.","beginsAt":511500,"endsAt":511507,"type":"Level data","descriptio":"Level 1F1 (Sprites)"},{"address":"$07CE14","length":"8 bytes. Ends at $07CE1B.","beginsAt":511508,"endsAt":511515,"type":"Level data","descriptio":"Level 1F0 (Sprites)"},{"address":"$07CE1C","length":"158 bytes. Ends at $07CEB9.","beginsAt":511516,"endsAt":511673,"type":"Level data","descriptio":"Level 001 (Sprites)"},{"address":"$07CEBA","length":"5 bytes. Ends at $07CEBE.","beginsAt":511674,"endsAt":511678,"type":"Level data","descriptio":"Level 0D8 (Sprites)"},{"address":"$07CEBF","length":"71 bytes. Ends at $07CF05.","beginsAt":511679,"endsAt":511749,"type":"Level data","descriptio":"Level 002 (Sprites)"},{"address":"$07CF06","length":"71 bytes. Ends at $07CF4C.","beginsAt":511750,"endsAt":511820,"type":"Level data","descriptio":"Level 00B (Sprites)"},{"address":"$07CF4D","length":"98 bytes. Ends at $07CFAE.","beginsAt":511821,"endsAt":511918,"type":"Level data","descriptio":"Level 0E0, 0E1 (Sprites)"},{"address":"$07CFAF","length":"128 bytes. Ends at $07D02E.","beginsAt":511919,"endsAt":512046,"type":"Level data","descriptio":"Level 00F (Sprites)"},{"address":"$07D02F","length":"20 bytes. Ends at $07D042.","beginsAt":512047,"endsAt":512066,"type":"Level data","descriptio":"Level 0BF (Sprites)"},{"address":"$07D043","length":"140 bytes. Ends at $07D0CE.","beginsAt":512067,"endsAt":512206,"type":"Level data","descriptio":"Level 010 (Sprites)"},{"address":"$07D0CF","length":"8 bytes. Ends at $07D0D6.","beginsAt":512207,"endsAt":512214,"type":"Level data","descriptio":"Level 0C1 (Sprites)"},{"address":"$07D0D7","length":"29 bytes. Ends at $07D0F3.","beginsAt":512215,"endsAt":512243,"type":"Level data","descriptio":"Level 00E (Sprites)"},{"address":"$07D0F4","length":"29 bytes. Ends at $07D110.","beginsAt":512244,"endsAt":512272,"type":"Level data","descriptio":"Level 0DC (Sprites)"},{"address":"$07D111","length":"65 bytes. Ends at $07D151.","beginsAt":512273,"endsAt":512337,"type":"Level data","descriptio":"Level 0DB (Sprites)"},{"address":"$07D152","length":"5 bytes. Ends at $07D156.","beginsAt":512338,"endsAt":512342,"type":"Level data","descriptio":"Level 0D9 (Sprites)"},{"address":"$07D157","length":"158 bytes. Ends at $07D1F4.","beginsAt":512343,"endsAt":512500,"type":"Level data","descriptio":"Level 011 (Sprites)"},{"address":"$07D1F5","length":"101 bytes. Ends at $07D259.","beginsAt":512501,"endsAt":512601,"type":"Level data","descriptio":"Level 00C (Sprites)"},{"address":"$07D25A","length":"170 bytes. Ends at $07D303.","beginsAt":512602,"endsAt":512771,"type":"Level data","descriptio":"Level 00D (Sprites)"},{"address":"$07D304","length":"8 bytes. Ends at $07D30B.","beginsAt":512772,"endsAt":512779,"type":"Level data","descriptio":"Level 0DD (Sprites)"},{"address":"$07D30C","length":"116 bytes. Ends at $07D37F.","beginsAt":512780,"endsAt":512895,"type":"Level data","descriptio":"Level 11E (Sprites)"},{"address":"$07D380","length":"197 bytes. Ends at $07D444.","beginsAt":512896,"endsAt":513092,"type":"Level data","descriptio":"Level 120 (Sprites)"},{"address":"$07D445","length":"128 bytes. Ends at $07D4C4.","beginsAt":513093,"endsAt":513220,"type":"Level data","descriptio":"Level 123 (Sprites)"},{"address":"$07D4C5","length":"8 bytes. Ends at $07D4CC.","beginsAt":513221,"endsAt":513228,"type":"Level data","descriptio":"Level 1F8 (Sprites)"},{"address":"$07D4CD","length":"80 bytes. Ends at $07D51C.","beginsAt":513229,"endsAt":513308,"type":"Level data","descriptio":"Level 020 (Sprites)"},{"address":"$07D51D","length":"5 bytes. Ends at $07D521.","beginsAt":513309,"endsAt":513313,"type":"Level data","descriptio":"Level 0CC (Sprites)"},{"address":"$07D522","length":"74 bytes. Ends at $07D56B.","beginsAt":513314,"endsAt":513387,"type":"Level data","descriptio":"Level 11D, 1E8, 1E9 (Sprites)"},{"address":"$07D56C","length":"11 bytes. Ends at $07D576.","beginsAt":513388,"endsAt":513398,"type":"Level data","descriptio":"Level 1FA (Sprites)"},{"address":"$07D577","length":"80 bytes. Ends at $07D5C6.","beginsAt":513399,"endsAt":513478,"type":"Level data","descriptio":"Level 11F (Sprites)"},{"address":"$07D5C7","length":"8 bytes. Ends at $07D5CE.","beginsAt":513479,"endsAt":513486,"type":"Level data","descriptio":"Level 1DF (Sprites)"},{"address":"$07D5CF","length":"38 bytes. Ends at $07D5F4.","beginsAt":513487,"endsAt":513524,"type":"Level data","descriptio":"Level 1C1 (Sprites)"},{"address":"$07D5F5","length":"83 bytes. Ends at $07D647.","beginsAt":513525,"endsAt":513607,"type":"Level data","descriptio":"Level 122 (Sprites)"},{"address":"$07D648","length":"32 bytes. Ends at $07D667.","beginsAt":513608,"endsAt":513639,"type":"Level data","descriptio":"Level 01F (Sprites)"},{"address":"$07D668","length":"113 bytes. Ends at $07D6D8.","beginsAt":513640,"endsAt":513752,"type":"Level data","descriptio":"Level 0D6 (Sprites)"},{"address":"$07D6D9","length":"104 bytes. Ends at $07D740.","beginsAt":513753,"endsAt":513856,"type":"Level data","descriptio":"Level 022, 0D0, 0D1, 0F5, 0F6 (Sprites)"},{"address":"$07D741","length":"11 bytes. Ends at $07D74B.","beginsAt":513857,"endsAt":513867,"type":"Level data","descriptio":"Level 0BE (Sprites)"},{"address":"$07D74C","length":"77 bytes. Ends at $07D798.","beginsAt":513868,"endsAt":513944,"type":"Level data","descriptio":"Level 021 (Sprites)"},{"address":"$07D799","length":"38 bytes. Ends at $07D7BE.","beginsAt":513945,"endsAt":513982,"type":"Level data","descriptio":"Level 0FC (Sprites)"},{"address":"$07D7BF","length":"38 bytes. Ends at $07D7E4.","beginsAt":513983,"endsAt":514020,"type":"Level data","descriptio":"Level 024 (Sprites)"},{"address":"$07D7E5","length":"5 bytes. Ends at $07D7E9.","beginsAt":514021,"endsAt":514025,"type":"Level data","descriptio":"Level 0CF (Sprites)"},{"address":"$07D7EA","length":"59 bytes. Ends at $07D824.","beginsAt":514026,"endsAt":514084,"type":"Level data","descriptio":"Choco Island 2 (36BFB) (Sprites)"},{"address":"$07D825","length":"38 bytes. Ends at $07D84A.","beginsAt":514085,"endsAt":514122,"type":"Level data","descriptio":"Choco Island 2 (36CB0) (Sprites)"},{"address":"$07D84B","length":"35 bytes. Ends at $07D86D.","beginsAt":514123,"endsAt":514157,"type":"Level data","descriptio":"Level 0CE (Sprites)"},{"address":"$07D86E","length":"26 bytes. Ends at $07D887.","beginsAt":514158,"endsAt":514183,"type":"Level data","descriptio":"Choco Island 2 (36D72) (Sprites)"},{"address":"$07D888","length":"17 bytes. Ends at $07D898.","beginsAt":514184,"endsAt":514200,"type":"Level data","descriptio":"Choco Island 2 (36DBE) (Sprites)"},{"address":"$07D899","length":"8 bytes. Ends at $07D8A0.","beginsAt":514201,"endsAt":514208,"type":"Level data","descriptio":"Level 0CD (Sprites)"},{"address":"$07D8A1","length":"29 bytes. Ends at $07D8BD.","beginsAt":514209,"endsAt":514237,"type":"Level data","descriptio":"Choco Island 2 (36E7E) (Sprites)"},{"address":"$07D8BE","length":"152 bytes. Ends at $07D955.","beginsAt":514238,"endsAt":514389,"type":"Level data","descriptio":"Level 023 (Sprites)"},{"address":"$07D956","length":"8 bytes. Ends at $07D95D.","beginsAt":514390,"endsAt":514397,"type":"Level data","descriptio":"Level 0D7 (Sprites)"},{"address":"$07D95E","length":"83 bytes. Ends at $07D9B0.","beginsAt":514398,"endsAt":514480,"type":"Level data","descriptio":"Level 01B (Sprites)"},{"address":"$07D9B1","length":"62 bytes. Ends at $07D9EE.","beginsAt":514481,"endsAt":514542,"type":"Level data","descriptio":"Level 0EF (Sprites)"},{"address":"$07D9EF","length":"35 bytes. Ends at $07DA11.","beginsAt":514543,"endsAt":514577,"type":"Level data","descriptio":"Level 117 (Sprites)"},{"address":"$07DA12","length":"50 bytes. Ends at $07DA43.","beginsAt":514578,"endsAt":514627,"type":"Level data","descriptio":"Level 1ED (Sprites)"},{"address":"$07DA44","length":"59 bytes. Ends at $07DA7E.","beginsAt":514628,"endsAt":514686,"type":"Level data","descriptio":"Level 1EC (Sprites)"},{"address":"$07DA7F","length":"20 bytes. Ends at $07DA92.","beginsAt":514687,"endsAt":514706,"type":"Level data","descriptio":"Level 1C0 (Sprites)"},{"address":"$07DA93","length":"74 bytes. Ends at $07DADC.","beginsAt":514707,"endsAt":514780,"type":"Level data","descriptio":"Level 01D (Sprites)"},{"address":"$07DADD","length":"50 bytes. Ends at $07DB0E.","beginsAt":514781,"endsAt":514830,"type":"Level data","descriptio":"Level 0EA (Sprites)"},{"address":"$07DB0F","length":"134 bytes. Ends at $07DB94.","beginsAt":514831,"endsAt":514964,"type":"Level data","descriptio":"Level 01C (Sprites)"},{"address":"$07DB95","length":"38 bytes. Ends at $07DBBA.","beginsAt":514965,"endsAt":515002,"type":"Level data","descriptio":"Level 0C0 (Sprites)"},{"address":"$07DBBB","length":"62 bytes. Ends at $07DBF8.","beginsAt":515003,"endsAt":515064,"type":"Level data","descriptio":"Level 01A (Sprites)"},{"address":"$07DBF9","length":"41 bytes. Ends at $07DC21.","beginsAt":515065,"endsAt":515105,"type":"Level data","descriptio":"Level 0D4 (Sprites)"},{"address":"$07DC22","length":"11 bytes. Ends at $07DC2C.","beginsAt":515106,"endsAt":515116,"type":"Level data","descriptio":"Level 0D3 (Sprites)"},{"address":"$07DC2D","length":"14 bytes. Ends at $07DC3A.","beginsAt":515117,"endsAt":515130,"type":"Level data","descriptio":"Level 018 (Sprites)"},{"address":"$07DC3B","length":"38 bytes. Ends at $07DC60.","beginsAt":515131,"endsAt":515168,"type":"Level data","descriptio":"Level 0F8 (Sprites)"},{"address":"$07DC61","length":"179 bytes. Ends at $07DD13.","beginsAt":515169,"endsAt":515347,"type":"Level data","descriptio":"Level 0F7 (Sprites)"},{"address":"$07DD14","length":"98 bytes. Ends at $07DD75.","beginsAt":515348,"endsAt":515445,"type":"Level data","descriptio":"Level 116 (Sprites)"},{"address":"$07DD76","length":"5 bytes. Ends at $07DD7A.","beginsAt":515446,"endsAt":515450,"type":"Level data","descriptio":"Level 1E5 (Sprites)"},{"address":"$07DD7B","length":"56 bytes. Ends at $07DDB2.","beginsAt":515451,"endsAt":515506,"type":"Level data","descriptio":"Level 115 (Sprites)"},{"address":"$07DDB3","length":"5 bytes. Ends at $07DDB7.","beginsAt":515507,"endsAt":515511,"type":"Level data","descriptio":"Level 1E3 (Sprites)"},{"address":"$07DDB8","length":"23 bytes. Ends at $07DDCE.","beginsAt":515512,"endsAt":515534,"type":"Level data","descriptio":"Level 1E2 (Sprites)"},{"address":"$07DDCF","length":"50 bytes. Ends at $07DE00.","beginsAt":515535,"endsAt":515584,"type":"Level data","descriptio":"Level 0C8 (Sprites)"},{"address":"$07DE01","length":"14 bytes. Ends at $07DE0E.","beginsAt":515585,"endsAt":515598,"type":"Level data","descriptio":"Level 114, 1D9 (Sprites)"},{"address":"$07DE0F","length":"44 bytes. Ends at $07DE3A.","beginsAt":515599,"endsAt":515642,"type":"Level data","descriptio":"Level 1DD (Sprites)"},{"address":"$07DE3B","length":"20 bytes. Ends at $07DE4E.","beginsAt":515643,"endsAt":515662,"type":"Level data","descriptio":"Level 1DB, 1DC (Sprites)"},{"address":"$07DE4F","length":"185 bytes. Ends at $07DF07.","beginsAt":515663,"endsAt":515847,"type":"Level data","descriptio":"Level 113 (Sprites)"},{"address":"$07DF08","length":"140 bytes. Ends at $07DF93.","beginsAt":515848,"endsAt":515987,"type":"Level data","descriptio":"Level 10F (Sprites)"},{"address":"$07DF94","length":"29 bytes. Ends at $07DFB0.","beginsAt":515988,"endsAt":516016,"type":"Level data","descriptio":"Level 1BF (Sprites)"},{"address":"$07DFB1","length":"47 bytes. Ends at $07DFDF.","beginsAt":516017,"endsAt":516063,"type":"Level data","descriptio":"Level 110 (Sprites)"},{"address":"$07DFE0","length":"68 bytes. Ends at $07E023.","beginsAt":516064,"endsAt":516131,"type":"Level data","descriptio":"Level 1FE (Sprites)"},{"address":"$07E024","length":"14 bytes. Ends at $07E031.","beginsAt":516132,"endsAt":516145,"type":"Level data","descriptio":"Level 1EB (Sprites)"},{"address":"$07E032","length":"53 bytes. Ends at $07E066.","beginsAt":516146,"endsAt":516198,"type":"Level data","descriptio":"Level 111 (Sprites)"},{"address":"$07E067","length":"38 bytes. Ends at $07E08C.","beginsAt":516199,"endsAt":516236,"type":"Level data","descriptio":"Level 1D4 (Sprites)"},{"address":"$07E08D","length":"56 bytes. Ends at $07E0C4.","beginsAt":516237,"endsAt":516292,"type":"Level data","descriptio":"Level 1D3 (Sprites)"},{"address":"$07E0C5","length":"35 bytes. Ends at $07E0E7.","beginsAt":516293,"endsAt":516327,"type":"Level data","descriptio":"Level 1D2 (Sprites)"},{"address":"$07E0E8","length":"44 bytes. Ends at $07E113.","beginsAt":516328,"endsAt":516371,"type":"Level data","descriptio":"Level 1D1 (Sprites)"},{"address":"$07E114","length":"29 bytes. Ends at $07E130.","beginsAt":516372,"endsAt":516400,"type":"Level data","descriptio":"Level 1CF (Sprites)"},{"address":"$07E131","length":"47 bytes. Ends at $07E15F.","beginsAt":516401,"endsAt":516447,"type":"Level data","descriptio":"Level 1CE (Sprites)"},{"address":"$07E160","length":"35 bytes. Ends at $07E182.","beginsAt":516448,"endsAt":516482,"type":"Level data","descriptio":"Level 1CD (Sprites)"},{"address":"$07E183","length":"26 bytes. Ends at $07E19C.","beginsAt":516483,"endsAt":516508,"type":"Level data","descriptio":"Level 1CC (Sprites)"},{"address":"$07E19D","length":"35 bytes. Ends at $07E1BF.","beginsAt":516509,"endsAt":516543,"type":"Level data","descriptio":"Level 10E, 1BD (Sprites)"},{"address":"$07E1C0","length":"5 bytes. Ends at $07E1C4.","beginsAt":516544,"endsAt":516548,"type":"Level data","descriptio":"Level 1C7 (Sprites)"},{"address":"$07E1C5","length":"92 bytes. Ends at $07E220.","beginsAt":516549,"endsAt":516640,"type":"Level data","descriptio":"Level 134 (Sprites)"},{"address":"$07E221","length":"125 bytes. Ends at $07E29D.","beginsAt":516641,"endsAt":516765,"type":"Level data","descriptio":"Level 130 (Sprites)"},{"address":"$07E29E","length":"17 bytes. Ends at $07E2AE.","beginsAt":516766,"endsAt":516782,"type":"Level data","descriptio":"Level 132 (Sprites)"},{"address":"$07E2AF","length":"134 bytes. Ends at $07E334.","beginsAt":516783,"endsAt":516916,"type":"Level data","descriptio":"Level 135 (Sprites)"},{"address":"$07E335","length":"167 bytes. Ends at $07E3DB.","beginsAt":516917,"endsAt":517083,"type":"Level data","descriptio":"Level 136 (Sprites)"},{"address":"$07E3DC","length":"38 bytes. Ends at $07E401.","beginsAt":517084,"endsAt":517121,"type":"Level data","descriptio":"Level 12A (Sprites)"},{"address":"$07E402","length":"38 bytes. Ends at $07E427.","beginsAt":517122,"endsAt":517159,"type":"Level data","descriptio":"Level 1C4, 1C5 (Sprites)"},{"address":"$07E428","length":"62 bytes. Ends at $07E465.","beginsAt":517160,"endsAt":517221,"type":"Level data","descriptio":"Level 12B (Sprites)"},{"address":"$07E466","length":"134 bytes. Ends at $07E4EB.","beginsAt":517222,"endsAt":517355,"type":"Level data","descriptio":"Level 12C (Sprites)"},{"address":"$07E4EC","length":"5 bytes. Ends at $07E4F0.","beginsAt":517356,"endsAt":517360,"type":"Level data","descriptio":"Level 1C8 (Sprites)"},{"address":"$07E4F1","length":"131 bytes. Ends at $07E573.","beginsAt":517361,"endsAt":517491,"type":"Level data","descriptio":"Level 12D (Sprites)"},{"address":"$07E574","length":"107 bytes. Ends at $07E5DE.","beginsAt":517492,"endsAt":517598,"type":"Level data","descriptio":"Level 128 (Sprites)"},{"address":"$07E5DF","length":"113 bytes. Ends at $07E64F.","beginsAt":517599,"endsAt":517711,"type":"Level data","descriptio":"Level 127 (Sprites)"},{"address":"$07E650","length":"164 bytes. Ends at $07E6F3.","beginsAt":517712,"endsAt":517875,"type":"Level data","descriptio":"Level 126 (Sprites)"},{"address":"$07E6F4","length":"101 bytes. Ends at $07E758.","beginsAt":517876,"endsAt":517976,"type":"Level data","descriptio":"Level 125 (Sprites)"},{"address":"$07E759","length":"20 bytes. Ends at $07E76C.","beginsAt":517977,"endsAt":517996,"type":"Level data","descriptio":"Level 104 (Sprites)"},{"address":"$07E76D","length":"2 bytes. Ends at $07E76E.","beginsAt":517997,"endsAt":517998,"type":"Level data","descriptio":"Level 012, 019, 01E, 025-092, 09C-0BC, 10C, 112, 124, 129, 12E, 12F, 131, 133, 137-192, 19C-1BA (Sprites)"},{"address":"$07E76F","length":"2193 bytes. Ends at $07EFFF.","beginsAt":517999,"endsAt":520191,"type":"Empty","descriptio":"Unused data."},{"address":"$07F000","length":"180 bytes. Ends at $07F0B3.","beginsAt":520192,"endsAt":520371,"type":"Sprite Misc.","descriptio":"Table of sprite OAM indexes. It is indexed by the values in the table at $07F0B4 and used in the routine at $0180D2."},{"address":"$07F0B4","length":"20 bytes. Ends at $07F0C7.","beginsAt":520372,"endsAt":520391,"type":"Sprite Misc.","descriptio":"Indexes to the table at $07F000. This table itself is indexed by the sprite memory setting plus the sprite index."},{"address":"$07F0C8","length":"107 bytes. Ends at $07F132.","beginsAt":520392,"endsAt":520498,"type":"Misc.","descriptio":"X-coordinates of bonus star numbers (FF terminates the string)"},{"address":"$07F134","length":"107 bytes. Ends at $07F19E.","beginsAt":520500,"endsAt":520606,"type":"Misc.","descriptio":"Y-coordinates of bonus star numbers (FF terminates the string)"},{"address":"$07F1A0","length":"10 bytes. Ends at $07F1A9.","beginsAt":520608,"endsAt":520617,"type":"Pointer","descriptio":"Relative pointers for each bonus star number formation's tilemap (0-9)"},{"address":"$07F1AA","length":"32 bytes. Ends at $07F1C9.","beginsAt":520618,"endsAt":520649,"type":"Misc.","descriptio":"Table of bonus stars to receive at the goal. The table is x20 bytes long, and each byte corresponds to a four-pixel range, from the lowest to the highest point. (The values in this table are binary-coded decimal numbers, so e.g. if the table says x17 it means you will get 17 (decimal) stars at that level.)"},{"address":"$07F21A","length":"1 byte","beginsAt":520730,"endsAt":520730,"type":"Sprite tilemap related","descriptio":"Tile used by Bonus Star formation"},{"address":"$07F24E","length":"4 bytes. Ends at $07F251.","beginsAt":520782,"endsAt":520785,"type":"Sprite tilemap related","descriptio":"Tiles used by Bonus Star formation when the screen fades out"},{"address":"$07F262","length":"1 byte","beginsAt":520802,"endsAt":520802,"type":"Misc.","descriptio":"If you get this many bonus stars at the goal, you will also be awarded a 3up (default 50)"},{"address":"$07F263","length":"1 byte","beginsAt":520803,"endsAt":520803,"type":"Misc.","descriptio":"Change to 80 to disable getting a 3up when getting the above number of bonus stars"},{"address":"$07F266","length":"1 byte","beginsAt":520806,"endsAt":520806,"type":"Misc.","descriptio":"Bonus for getting 50 bonus stars (3up)"},{"address":"$07F26C","length":"201 bytes. Ends at $07F334.","beginsAt":520812,"endsAt":521012,"type":"Sprite Misc.","descriptio":"Default values for $1656, various interaction-related flags, for the standard sprites.\n$07F27B: Goomba 1656 value - change from 10 to 30 to make Goombas die when jumped on like the classic Goombas in SMB or SMB3.\n$07F27C: Winged Goomba 1656 value - change from 10 to 30 to make Winged Goombas \"die when jumped on\" (when jumped on, they will \"die\" and spawn a regular Goomba, just like the Paragoombas in SMB3).\n$07F306: Sumo Bros. 1656 value (object clipping/table offset, can be jumped on, dies when jumped on, hop in/kick shells, disappear in a cloud of smoke)."},{"address":"$07F335","length":"201 bytes. Ends at $07F3FD.","beginsAt":521013,"endsAt":521213,"type":"Sprite Misc.","descriptio":"Default values for $1662, some death-related flags and the sprite clipping, for the standard sprites."},{"address":"$07F3FE","length":"201 bytes. Ends at $07F4C6.","beginsAt":521214,"endsAt":521414,"type":"Sprite Misc.","descriptio":"Default values for $166E, various flags to disable some stuff (like fireball death and layer 2 interaction) and palette/graphics page, for the standard sprites."},{"address":"$07F4C7","length":"201 bytes. Ends at $07F58F.","beginsAt":521415,"endsAt":521615,"type":"Sprite Misc.","descriptio":"Default values for $167A, various misc flags, for the standard sprites.\nChange $07F57D from 00 to 01 to fix the glitched tiles that appear when a reflecting fireball goes into lava and make it display the normal lava splash."},{"address":"$07F590","length":"201 bytes. Ends at $07F658.","beginsAt":521616,"endsAt":521816,"type":"Sprite Misc.","descriptio":"Default values for $1686, various misc flags, for the standard sprites."},{"address":"$07F659","length":"201 bytes. Ends at $07F721.","beginsAt":521817,"endsAt":522017,"type":"Sprite Misc.","descriptio":"Default values for $190F, various misc flags, for the standard sprites.\n\nChange $07F69C from 05 to 25 to fix the Dolphin tails showing up when they're vertically off-screen."},{"address":"$07F722","length":"105 bytes. Ends at $07F78A.","beginsAt":522018,"endsAt":522122,"type":"Sprite subroutine (JSL)","descriptio":"Zeros out the sprite tables. However, $15A0 (the horizontal off screen flag) is set to $01 instead of zero."},{"address":"$07F78B","length":"21 bytes. Ends at $07F79F.","beginsAt":522123,"endsAt":522143,"type":"Sprite subroutine (JSL)","descriptio":"The subroutine that loads the necessary bytes for some sprite tables. Actually just JSLs to $07F7A0 and sets $15F6,x."},{"address":"$07F7A0","length":"50 bytes. Ends at $07F7D1.","beginsAt":522144,"endsAt":522193,"type":"Sprite subroutine (JSL)","descriptio":"The subroutine that loads the six Tweaker bytes for a sprite when it is initialized."},{"address":"$07F7D2","length":"9 bytes. Ends at $07F7DA.","beginsAt":522194,"endsAt":522202,"type":"Sprite subroutine (JSL)","descriptio":"Resets most sprite tables and loads new values for some of them depending on the sprite number. Actually just JSLs to $07F722 and $07F78B."},{"address":"$07F7DB","length":"512 bytes. Ends at $07F9DA.","beginsAt":522203,"endsAt":522714,"type":"Misc.","descriptio":"SMW's trigonometry/sine/cosine value table. Note that these are 16-bit values, but most of the high bytes are 00. Also note that this only is half a circle, and that a values for a degree are not in units out of 360 for a full circle, rather, 0-255 for a half-circle."},{"address":"$07F9DB","length":"536 bytes. Ends at $07FBF2.","beginsAt":522715,"endsAt":523250,"type":"Sprite Misc.","descriptio":"Line-guided sprite speed table. These aren't speed values in the tradition sense: when using them, the low nybble of the sprite's X and Y position is cleared, and then it is offset a certain number of pixels depending on where it was before and which line guide it is on. The high nybble of each of these values determines how many pixels to move the sprite on the Y axis, and the low nybble determines how many pixels to move the sprite on the X axis. The pointers to these are at $07FBF3 and $07FC13."},{"address":"$07FBF3","length":"32 bytes. Ends at $07FC12.","beginsAt":523251,"endsAt":523282,"type":"Pointer","descriptio":"Low byte of pointer to line-guided sprite speed table, indexed by the Map16 tile number (76-95). The high bytes are at $07FC13, and the bank byte is 07."},{"address":"$07FC13","length":"32 bytes. Ends at $07FC32.","beginsAt":523283,"endsAt":523314,"type":"Pointer","descriptio":"High byte of pointer to line-guided sprite speed table, indexed by the Map16 tile number (76-95). The low bytes are at $07FBF3, and the bank byte is 07."},{"address":"$07FC33","length":"4 bytes. Ends at $07FC36.","beginsAt":523315,"endsAt":523318,"type":"Sprite Misc.","descriptio":"X speeds for the 4 stars in the spin kill animation. Format: Upper left, upper right, bottom left, bottom right."},{"address":"$07FC37","length":"4 bytes. Ends at $07FC3A.","beginsAt":523319,"endsAt":523322,"type":"Sprite Misc.","descriptio":"Y speeds for the 4 stars in the spin kill animation. Format: Upper left, upper right, bottom left, bottom right."},{"address":"$07FC3B","length":"85 bytes. Ends at $07FC8F.","beginsAt":523323,"endsAt":523407,"type":"ASM","descriptio":"Spin Jump Star GFX Subroutine\n$07FC53 is 4 objects to use for spin jump stars"},{"address":"$07FC90","length":"880 bytes. Ends at $07FFFF.","beginsAt":523408,"endsAt":524287,"type":"Empty","descriptio":"Unused data."},{"address":"$088000","length":"130317 bytes. Ends at $0BFD0C.","beginsAt":557056,"endsAt":785676,"type":"Graphics","descriptio":"Graphics (compressed)"},{"address":"$0BFD0D","length":"755 bytes. Ends at $0BFFFF.","beginsAt":785677,"endsAt":786431,"type":"Empty","descriptio":"Empty space."},{"address":"$0C8000","length":"3328 bytes. Ends at $0C8CFF.","beginsAt":819200,"endsAt":822527,"type":"Overworld","descriptio":"Tiles for layer 2 events. The first 0x900 bytes are for 6x6 blocks of 8x8 tiles, the last 0x400 bytes are for 2x2 blocks of 8x8 tiles."},{"address":"$0C8D00","length":"1642 bytes. Ends at $0C9369.","beginsAt":822528,"endsAt":824169,"type":"Misc.","descriptio":"Overworld layer 2 event data's tilemap data: Tile properties (YXPCCCTT).\n\n(Layer 2 events are what you see on the right of the overworld editor, in those blue X area)\n\nTable is compressed in the LC_RLE1 format.\n\n[FF FF] marks the end of the compressed table."},{"address":"$0C93B6","length":"1 byte","beginsAt":824246,"endsAt":824246,"type":"ASM","descriptio":"Change to 0B to make Mario able to play the Yoshi's House level after the Yoshi's House scene of the credits gets over."},{"address":"$0C93C1","length":"14 bytes. Ends at $0C93CE.","beginsAt":824257,"endsAt":824270,"type":"Pointer","descriptio":"Table indexed by $1928*2, which is used to indicate the cutscene number in the beginning of the credits (as in, castle = #$00, chocolate island BG = #$01, etc.). Points to BG image to use. All images are in bank $0C."},{"address":"$0C93CF","length":"14 bytes. Ends at $0C93DC.","beginsAt":824271,"endsAt":824284,"type":"Misc.","descriptio":"Table indexed by $1928*2. Is used to clear certain bits of the loaded BG tile out, specifically, but not necessarily, the properties byte (YXPCCCTT) of the BG tile.\nSome BG images in the credits require bit 8 to be clear ($FEFF)."},{"address":"$0C9447","length":"1 byte","beginsAt":824391,"endsAt":824391,"type":"Music","descriptio":"Music used for the first part of the Ending."},{"address":"$0C9567","length":"96 bytes. Ends at $0C95C6.","beginsAt":824679,"endsAt":824774,"type":"Subroutine (JSL)","descriptio":"The DMA routine for updating the backgrounds during the credits walking sequence."},{"address":"$0C95C7","length":"2280 bytes. Ends at $0C9EAE.","beginsAt":824775,"endsAt":827054,"type":"Layer 3","descriptio":"Credits text data."},{"address":"$0C9EB1","length":"171 bytes. Ends at $0C9F5B.","beginsAt":827057,"endsAt":827227,"type":"Subroutine (JSR)","descriptio":"The subroutine that uploads the credits tilemap."},{"address":"$0C9F6F","length":"2 bytes. Ends at $0C9F70.","beginsAt":827247,"endsAt":827248,"type":"Misc.","descriptio":"Speed at which the Layer 2 background in the credits roll moves. [80] [FF]. It's actually a word address (#$FF80). Anything from #$8000-#$FFFF is left speed, anything from #$0001-#$7FFF is right speed."},{"address":"$0C9F89","length":"2 bytes. Ends at $0C9F8A.","beginsAt":827273,"endsAt":827274,"type":"Layer 3","descriptio":"How fast the credits scroll upwards. Word value. Default value is $0040 $0000-$7FFF is upward while $8000-$FFFF is downward.\n(Note, when the credits end the situation will warp to Yoshi's House)"},{"address":"$0C9FE7","length":"3 bytes. Ends at $0C9FE9.","beginsAt":827367,"endsAt":827369,"type":"Coordinate","descriptio":"Princess's Y position on Yoshi during the staff roll, relative to absolute value #$85. Each byte represents a Y position."},{"address":"$0C9FED","length":"2 bytes. Ends at $0C9FEE.","beginsAt":827373,"endsAt":827374,"type":"Coordinate","descriptio":"Mario's absolute X position during the staff roll in the credits."},{"address":"$0C9FF2","length":"2 bytes. Ends at $0C9FF3.","beginsAt":827378,"endsAt":827379,"type":"Coordinate","descriptio":"Mario's absolute Y position during the staff roll in the credits."},{"address":"$0C9FF8","length":"2 bytes. Ends at $0C9FF9.","beginsAt":827384,"endsAt":827385,"type":"ASM","descriptio":"Mario's powerup status during the staff roll in the credits.\nChange to A9 00 for Small Mario,\nA9 01 for Big Mario,\nA9 02 for Cape Mario,\nA9 03 for Fiery Mario,\nA5 19 to keep the same powerup after Bowser's Battle."},{"address":"$0C9FFD","length":"1 byte","beginsAt":827389,"endsAt":827389,"type":"Mario physics","descriptio":"How fast Mario walks during the staff roll. Doesn't actually affect the walking speed, but his walking animation speed."},{"address":"$0CA005","length":"1 byte","beginsAt":827397,"endsAt":827397,"type":"Coordinate","descriptio":"X-position of Yoshi (Credits)"},{"address":"$0CA00C","length":"1 byte","beginsAt":827404,"endsAt":827404,"type":"Coordinate","descriptio":"Y-position of Yoshi (Credits)"},{"address":"$0CA01E","length":"1 byte","beginsAt":827422,"endsAt":827422,"type":"Coordinate","descriptio":"X-position of Peach (Credits)"},{"address":"$0CA035","length":"1 byte","beginsAt":827445,"endsAt":827445,"type":"Coordinate","descriptio":"Y-position of eggs (Credits)"},{"address":"$0CA08F","length":"42 bytes. Ends at $0CA0B8.","beginsAt":827535,"endsAt":827576,"type":"Sprite tilemap related","descriptio":"Yoshi's House decoration tiles (Ending)"},{"address":"$0CA0B9","length":"42 bytes. Ends at $0CA0E2.","beginsAt":827577,"endsAt":827618,"type":"Sprite tilemap related","descriptio":"Yoshi's House decoration palettes (Ending)"},{"address":"$0CA0EA","length":"1 byte","beginsAt":827626,"endsAt":827626,"type":"Coordinate","descriptio":"Y-position of Yoshi's House decorations (Ending)"},{"address":"$0CA136","length":"16 bytes. Ends at $0CA145.","beginsAt":827702,"endsAt":827717,"type":"Sprite tilemap related","descriptio":"\"THANK YOU!\" text tiles (Yoshi’s House)."},{"address":"$0CA149","length":"2 bytes. Ends at $0CA14A.","beginsAt":827721,"endsAt":827722,"type":"Sprite Misc.","descriptio":"Y position of the right half of the \"THANK YOU!\" text after it finishes scrolling in.\nIts Y position as it scrolls is located at $0CA687. (Yoshi's House)"},{"address":"$0CA17B","length":"2 bytes. Ends at $0CA17C.","beginsAt":827771,"endsAt":827772,"type":"Sprite Misc.","descriptio":"Y position of the left half of the \"THANK YOU!\" text. (Yoshi's House)"},{"address":"$0CA18E","length":"1 byte","beginsAt":827790,"endsAt":827790,"type":"Sprite tilemap related","descriptio":"\"THANK YOU!\" text palette (Yoshi’s House)"},{"address":"$0CA20B","length":"1 byte","beginsAt":827915,"endsAt":827915,"type":"Mario tilemap","descriptio":"Which frame for Mario ($13E0) at the Yoshi House (credits), when he stops walking to the left."},{"address":"$0CA40C","length":"1 byte","beginsAt":828428,"endsAt":828428,"type":"Music","descriptio":"Music used for the second part of the ending. (Yoshi's House)"},{"address":"$0CA5C2","length":"1 byte","beginsAt":828866,"endsAt":828866,"type":"Music","descriptio":"Music used for the third part of the ending. (Thank You Music)"},{"address":"$0CA662","length":"1 byte","beginsAt":829026,"endsAt":829026,"type":"Sprite Misc.","descriptio":"Acceleration of the \"THANK YOU!\" text. Setting above 04 will usually cause the text to bounce due to its speed being signed. (Yoshi's House)"},{"address":"$0CA687","length":"1 byte","beginsAt":829063,"endsAt":829063,"type":"Sprite Misc.","descriptio":"Y position of the right half of the \"THANK YOU!\" text as it scrolls in.\nIts Y position after it finishes scrolling is at $0CA687. (Yoshi's House)"},{"address":"$0CA6C5","length":"1 byte","beginsAt":829125,"endsAt":829125,"type":"Mario tilemap","descriptio":"Mario's pose ($13E0) after the Yoshis start jumping. (Yoshi's House)"},{"address":"$0CA6F0","length":"1 byte","beginsAt":829168,"endsAt":829168,"type":"Coordinate","descriptio":"X offset of Peach from Mario after the eggs hatch. (Yoshi's House)"},{"address":"$0CA6FB","length":"1 byte","beginsAt":829179,"endsAt":829179,"type":"Coordinate","descriptio":"Y-position of Peach waving after eggs hatch (Ending)"},{"address":"$0CA792","length":"1 byte","beginsAt":829330,"endsAt":829330,"type":"Misc.","descriptio":"Direction Yoshi faces in Credits"},{"address":"$0CA7B0","length":"1 byte","beginsAt":829360,"endsAt":829360,"type":"Misc.","descriptio":"Change to 00 to make Yoshi invisible for the credits sequence"},{"address":"$0CA7D5","length":"12 bytes. Ends at $0CA7E0.","beginsAt":829397,"endsAt":829408,"type":"Sprite tilemap related","descriptio":"Red Yoshi Cheering Tiles (Ending)"},{"address":"$0CA7E1","length":"12 bytes. Ends at $0CA7EC.","beginsAt":829409,"endsAt":829420,"type":"Sprite tilemap related","descriptio":"Yellow Yoshi Cheering Tiles (Ending)"},{"address":"$0CA809","length":"12 bytes. Ends at $0CA814.","beginsAt":829449,"endsAt":829460,"type":"Sprite tilemap related","descriptio":"Red Yoshi Cheering Palettes (Ending)"},{"address":"$0CA815","length":"12 bytes. Ends at $0CA820.","beginsAt":829461,"endsAt":829472,"type":"Sprite tilemap related","descriptio":"Yellow Yoshi Cheering Palettes (ending)"},{"address":"$0CA8D8","length":"7 bytes. Ends at $0CA8DE.","beginsAt":829656,"endsAt":829662,"type":"Sprite tilemap related","descriptio":"Palettes of Baby Yoshis (Ending)"},{"address":"$0CA906","length":"1 byte","beginsAt":829702,"endsAt":829702,"type":"Sprite tilemap related","descriptio":"Tile used by Eggs (Ending)"},{"address":"$0CA90B","length":"1 byte","beginsAt":829707,"endsAt":829707,"type":"Sprite tilemap related","descriptio":"Palette of eggs (ending)"},{"address":"$0CA918","length":"1 byte","beginsAt":829720,"endsAt":829720,"type":"Sprite tilemap related","descriptio":"Tile used by Baby Yoshis (Ending)"},{"address":"$0CA93A","length":"12 bytes. Ends at $0CA945.","beginsAt":829754,"endsAt":829765,"type":"Sprite tilemap related","descriptio":"Red Yoshi Watching Tiles (Ending)"},{"address":"$0CA946","length":"12 bytes. Ends at $0CA951.","beginsAt":829766,"endsAt":829777,"type":"Sprite tilemap related","descriptio":"Yellow Yoshi Watching Tiles (Ending)"},{"address":"$0CA952","length":"12 bytes. Ends at $0CA95D.","beginsAt":829778,"endsAt":829789,"type":"Misc.","descriptio":"Red Yoshi Watching Palettes (Ending)"},{"address":"$0CA95E","length":"12 bytes. Ends at $0CA969.","beginsAt":829790,"endsAt":829801,"type":"Sprite tilemap related","descriptio":"Yellow Yoshi Watching Palettes (Ending)"},{"address":"$0CA96A","length":"12 bytes. Ends at $0CA975.","beginsAt":829802,"endsAt":829813,"type":"Misc.","descriptio":"Red Yoshi Watching Tile X-coords (Ending)"},{"address":"$0CA976","length":"12 bytes. Ends at $0CA981.","beginsAt":829814,"endsAt":829825,"type":"Misc.","descriptio":"Yellow Yoshi Watching Tile X-coords (Ending)"},{"address":"$0CA982","length":"12 bytes. Ends at $0CA98D.","beginsAt":829826,"endsAt":829837,"type":"Misc.","descriptio":"Red Yoshi Watching Tile Y-coords (Ending)"},{"address":"$0CA98E","length":"12 bytes. Ends at $0CA999.","beginsAt":829838,"endsAt":829849,"type":"Sprite tilemap related","descriptio":"Yellow Yoshi Watching Tile Y-coords (Ending)"},{"address":"$0CA9F5","length":"1 byte","beginsAt":829941,"endsAt":829941,"type":"Misc.","descriptio":"Tile size of 8x8 tiles (Red/Yellow Yoshi watching)"},{"address":"$0CAA0B","length":"6 bytes. Ends at $0CAA10.","beginsAt":829963,"endsAt":829968,"type":"Sprite tilemap related","descriptio":"Blue/Green Yoshi Tiles (Ending)"},{"address":"$0CAA11","length":"2 bytes. Ends at $0CAA12.","beginsAt":829969,"endsAt":829970,"type":"Sprite tilemap related","descriptio":"Blue Yoshi Palettes (Ending)"},{"address":"$0CAA13","length":"1 byte","beginsAt":829971,"endsAt":829971,"type":"Sprite tilemap related","descriptio":"Green Yoshi Palettes (Ending)"},{"address":"$0CAA53","length":"140 bytes. Ends at $0CAADE.","beginsAt":830035,"endsAt":830174,"type":"Sprite tilemap related","descriptio":"Mario, Luigi and Peach ending image tilemap"},{"address":"$0CABA4","length":"7 bytes. Ends at $0CABAA.","beginsAt":830372,"endsAt":830378,"type":"Palette","descriptio":"Points to BG colour to use at the cutscenes in the beginning of the credits.\nFirst value not used?"},{"address":"$0CAC29","length":"21 bytes. Ends at $0CAC3D.","beginsAt":830505,"endsAt":830525,"type":"Level data","descriptio":"Ending sequence level data (Scene 1)"},{"address":"$0CAC3E","length":"21 bytes. Ends at $0CAC52.","beginsAt":830526,"endsAt":830546,"type":"Level data","descriptio":"Ending sequence level data (Scene 2)"},{"address":"$0CAC53","length":"36 bytes. Ends at $0CAC76.","beginsAt":830547,"endsAt":830582,"type":"Level data","descriptio":"Ending sequence level data (Scene 3)"},{"address":"$0CAC77","length":"39 bytes. Ends at $0CAC9D.","beginsAt":830583,"endsAt":830621,"type":"Level data","descriptio":"Ending sequence level data (Scene 4)"},{"address":"$0CAC9E","length":"42 bytes. Ends at $0CACC7.","beginsAt":830622,"endsAt":830663,"type":"Level data","descriptio":"Ending sequence level data (Scene 5)"},{"address":"$0CACC8","length":"18 bytes. Ends at $0CACD9.","beginsAt":830664,"endsAt":830681,"type":"Level data","descriptio":"Ending sequence level data (Scene 6)"},{"address":"$0CACDA","length":"21 bytes. Ends at $0CACEE.","beginsAt":830682,"endsAt":830702,"type":"Level data","descriptio":"Ending sequence level data (Scene 7)"},{"address":"$0CACEF","length":"21 bytes. Ends at $0CAD03.","beginsAt":830703,"endsAt":830723,"type":"Level data","descriptio":"Ending sequence level data (Scene 8)"},{"address":"$0CAD04","length":"27 bytes. Ends at $0CAD1E.","beginsAt":830724,"endsAt":830750,"type":"Level data","descriptio":"Ending sequence level data (Scene 9)"},{"address":"$0CAD1F","length":"18 bytes. Ends at $0CAD30.","beginsAt":830751,"endsAt":830768,"type":"Level data","descriptio":"Ending sequence level data (Scene 10)"},{"address":"$0CAD31","length":"12 bytes. Ends at $0CAD3C.","beginsAt":830769,"endsAt":830780,"type":"Level data","descriptio":"Ending sequence level data (Scene 11)"},{"address":"$0CAD3D","length":"20 bytes. Ends at $0CAD50.","beginsAt":830781,"endsAt":830800,"type":"Level data","descriptio":"Ending sequence level data (Scene 12)"},{"address":"$0CAD52","length":"6 bytes. Ends at $0CAD57.","beginsAt":830802,"endsAt":830807,"type":"Level data","descriptio":"Ending sequence level data (Scene 13)"},{"address":"$0CAD58","length":"26 bytes. Ends at $0CAD71.","beginsAt":830808,"endsAt":830833,"type":"Pointer","descriptio":"Ending sequence level data (Pointer table)"},{"address":"$0CAF11","length":"69 bytes. Ends at $0CAF55.","beginsAt":831249,"endsAt":831317,"type":"Sprite tilemap related","descriptio":"Ending sequence sprites (Scene 5)"},{"address":"$0CAF56","length":"92 bytes. Ends at $0CAFB1.","beginsAt":831318,"endsAt":831409,"type":"Sprite tilemap related","descriptio":"Ending sequence sprites (Scene 6)"},{"address":"$0CAFB2","length":"70 bytes. Ends at $0CAFF7.","beginsAt":831410,"endsAt":831479,"type":"Sprite tilemap related","descriptio":"Ending sequence sprites (Scene 9)"},{"address":"$0CAFF8","length":"53 bytes. Ends at $0CB02C.","beginsAt":831480,"endsAt":831532,"type":"Sprite tilemap related","descriptio":"Ending sequence sprites (Scene 12)"},{"address":"$0CB02D","length":"165 bytes. Ends at $0CB0D1.","beginsAt":831533,"endsAt":831697,"type":"Sprite tilemap related","descriptio":"Ending sequence sprites (Scene 2)"},{"address":"$0CB0D2","length":"97 bytes. Ends at $0CB132.","beginsAt":831698,"endsAt":831794,"type":"Sprite tilemap related","descriptio":"Ending sequence sprites (Scene 3)"},{"address":"$0CB133","length":"105 bytes. Ends at $0CB19B.","beginsAt":831795,"endsAt":831899,"type":"Sprite tilemap related","descriptio":"Ending sequence sprites (Scene 4)"},{"address":"$0CB19C","length":"113 bytes. Ends at $0CB20C.","beginsAt":831900,"endsAt":832012,"type":"Sprite tilemap related","descriptio":"Ending sequence sprites (Scene 7)"},{"address":"$0CB20D","length":"153 bytes. Ends at $0CB2A5.","beginsAt":832013,"endsAt":832165,"type":"Sprite tilemap related","descriptio":"Ending sequence sprites (Scene 1)"},{"address":"$0CB2A6","length":"149 bytes. Ends at $0CB33A.","beginsAt":832166,"endsAt":832314,"type":"Sprite tilemap related","descriptio":"Ending sequence sprites (Scene 8)"},{"address":"$0CB33B","length":"105 bytes. Ends at $0CB3A3.","beginsAt":832315,"endsAt":832419,"type":"Sprite tilemap related","descriptio":"Ending sequence sprites (Scene 10)"},{"address":"$0CB3A4","length":"105 bytes. Ends at $0CB40C.","beginsAt":832420,"endsAt":832524,"type":"Sprite tilemap related","descriptio":"Ending sequence sprites (Scene 11)"},{"address":"$0CB40D","length":"405 bytes. Ends at $0CB5A1.","beginsAt":832525,"endsAt":832929,"type":"Sprite tilemap related","descriptio":"Ending sequence sprites (Scene 13)"},{"address":"$0CB63A","length":"53 bytes. Ends at $0CB66E.","beginsAt":833082,"endsAt":833134,"type":"Misc.","descriptio":"The End text data, (with Mario, Peach and Luigi.)"},{"address":"$0CB66F","length":"401 bytes. Ends at $0CB7FF.","beginsAt":833135,"endsAt":833535,"type":"Empty","descriptio":"Unused data. Used by GPS as pointers for the shared routines. Note that some versions of GPS incorrectly start at $0CB66E instead."},{"address":"$0CB800","length":"447 bytes. Ends at $0CB9BE.","beginsAt":833536,"endsAt":833982,"type":"Misc.","descriptio":"World 4 Castle Destruction Scene Layer 2 Tilemap"},{"address":"$0CB9BF","length":"151 bytes. Ends at $0CBA55.","beginsAt":833983,"endsAt":834133,"type":"Misc.","descriptio":"Castle Destruction Scene Layer 1 Tilemap (Castle)"},{"address":"$0CBA56","length":"355 bytes. Ends at $0CBBB8.","beginsAt":834134,"endsAt":834488,"type":"Misc.","descriptio":"World 3/7 Castle Destruction Scene Layer 2 Tilemap"},{"address":"$0CBBB9","length":"329 bytes. Ends at $0CBD01.","beginsAt":834489,"endsAt":834817,"type":"Misc.","descriptio":"World 6 Castle Destruction Scene Layer 2 Tilemap"},{"address":"$0CBD02","length":"387 bytes. Ends at $0CBE84.","beginsAt":834818,"endsAt":835204,"type":"Misc.","descriptio":"World 1/2/5 Castle Destruction Scene Layer 2 Tilemap"},{"address":"$0CBE85","length":"365 bytes. Ends at $0CBFF1.","beginsAt":835205,"endsAt":835569,"type":"Layer 3","descriptio":"Castle destruction sequence 1 text."},{"address":"$0CBFF2","length":"414 bytes. Ends at $0CC18F.","beginsAt":835570,"endsAt":835983,"type":"Layer 3","descriptio":"Castle destruction sequence 2 text."},{"address":"$0CC190","length":"361 bytes. Ends at $0CC2F8.","beginsAt":835984,"endsAt":836344,"type":"Layer 3","descriptio":"Castle destruction sequence 3 text."},{"address":"$0CC2F9","length":"422 bytes. Ends at $0CC49E.","beginsAt":836345,"endsAt":836766,"type":"Layer 3","descriptio":"Castle destruction sequence 4 text."},{"address":"$0CC49F","length":"371 bytes. Ends at $0CC611.","beginsAt":836767,"endsAt":837137,"type":"Layer 3","descriptio":"Castle destruction sequence 5 text."},{"address":"$0CC612","length":"424 bytes. Ends at $0CC7B9.","beginsAt":837138,"endsAt":837561,"type":"Layer 3","descriptio":"Castle destruction sequence 6 text."},{"address":"$0CC7BA","length":"404 bytes. Ends at $0CC94D.","beginsAt":837562,"endsAt":837965,"type":"Layer 3","descriptio":"Castle destruction sequence 7 text."},{"address":"$0CCA83","length":"12 bytes. Ends at $0CCA8E.","beginsAt":838275,"endsAt":838286,"type":"Sprite tilemap related","descriptio":"Positions and tilemap for the castle destruction scene's \"Thank you!\" text bubble.\n\nAlmost in the standard OAM format (xxxxxxxx yyyyyyyy tttttttt YXPPCCCT), except the YXPPCCCT is actually formatted as \"YX-SCCCT\", where the S bit is the size (8x8 or 16s16); the PP bits are always set to 10."},{"address":"$0CD1A7","length":"41 bytes. Ends at $0CD1CF.","beginsAt":840103,"endsAt":840143,"type":"Misc.","descriptio":"Castle Destruction Scene Layer 1 Tilemap (Destroyed castle)"},{"address":"$0CD296","length":"1 byte","beginsAt":840342,"endsAt":840342,"type":"Sound effect","descriptio":"Bomb Explosion (Castle Destruction Sequence) Sound Effect."},{"address":"$0CD2A0","length":"1 byte","beginsAt":840352,"endsAt":840352,"type":"Timer","descriptio":"how long \"BOMB\" stays on castle destruction sequence. The highest possible value is 80, 81-FF will make the BOMB never appear."},{"address":"$0CD2B3","length":"1 byte","beginsAt":840371,"endsAt":840371,"type":"Sound effect","descriptio":"Castle Crumbling sound effect. (Castle Destruction Sequence)"},{"address":"$0CD2BE","length":"1 byte","beginsAt":840382,"endsAt":840382,"type":"Sound effect","descriptio":"Castle Launch (Castle Destruction Sequence #4) Sound Effect."},{"address":"$0CD3E8","length":"1 byte","beginsAt":840680,"endsAt":840680,"type":"Sound effect","descriptio":"Mario Hammering (Castle Destruction Sequence #3) sound effect."},{"address":"$0CD5CF","length":"1 byte","beginsAt":841167,"endsAt":841167,"type":"Timer","descriptio":"Number of frames, divided by 4, to disable pressing a button to end the castle destruction scene after the text finishes appearing."},{"address":"$0CD5D4","length":"1 byte","beginsAt":841172,"endsAt":841172,"type":"Music","descriptio":"Music to play after destruction of castle. (Castle Destruction Sequence)"},{"address":"$0CD7D9","length":"1 byte","beginsAt":841689,"endsAt":841689,"type":"Sound effect","descriptio":"Castle Painting (Castle Destruction Sequence #6) Sound Effect."},{"address":"$0CD86F","length":"145 bytes. Ends at $0CD8FF.","beginsAt":841839,"endsAt":841983,"type":"Empty","descriptio":"Unused data."},{"address":"$0CD900","length":"441 bytes. Ends at $0CDAB8.","beginsAt":841984,"endsAt":842424,"type":"Overworld border","descriptio":"Tilemap of the oblong hill background (the one that appears in, e.g., level 105), in LC_RLE1 format."},{"address":"$0CDAB9","length":"440 bytes. Ends at $0CDC70.","beginsAt":842425,"endsAt":842864,"type":"Overworld border","descriptio":"Tilemap of the underwater background (the one that appears in, e.g., level A), in LC_RLE1 format."},{"address":"$0CDC71","length":"211 bytes. Ends at $0CDD43.","beginsAt":842865,"endsAt":843075,"type":"Overworld border","descriptio":"Tilemap of the cloud/mountain background (the one that appears in level 125), in LC_RLE1 format."},{"address":"$0CDD44","length":"272 bytes. Ends at $0CDE53.","beginsAt":843076,"endsAt":843347,"type":"Overworld border","descriptio":"Tilemap of the cloud background (the one that appears in, e.g., level 1), in LC_RLE1 format."},{"address":"$0CDE54","length":"261 bytes. Ends at $0CDF58.","beginsAt":843348,"endsAt":843608,"type":"Overworld border","descriptio":"Tilemap of the shallow hills background (the one that appears in, e.g., level 15), in LC_RLE1 format."},{"address":"$0CDF59","length":"426 bytes. Ends at $0CE102.","beginsAt":843609,"endsAt":844034,"type":"Overworld border","descriptio":"Tilemap of the \"odd land formations with clouds\" background (the one that appears in, e.g., level 102), in LC_RLE1 format."},{"address":"$0CE103","length":"879 bytes. Ends at $0CE471.","beginsAt":844035,"endsAt":844913,"type":"Overworld border","descriptio":"Tilemap of the castle background with pillars (the one that appears in, e.g., level 1F), in LC_RLE1 format."},{"address":"$0CE472","length":"514 bytes. Ends at $0CE673.","beginsAt":844914,"endsAt":845427,"type":"Overworld border","descriptio":"Tilemap of the large mountain background (the one that appears in, e.g., level 12B), in LC_RLE1 format."},{"address":"$0CE674","length":"16 bytes. Ends at $0CE683.","beginsAt":845428,"endsAt":845443,"type":"Overworld border","descriptio":"Tilemap of the switch palace background (the one that appears in, e.g., level 14), in LC_RLE1 format."},{"address":"$0CE684","length":"316 bytes. Ends at $0CE7BF.","beginsAt":845444,"endsAt":845759,"type":"Overworld border","descriptio":"Tilemap of the starry night background (the one that appears in, e.g., level 119), in LC_RLE1 format."},{"address":"$0CE7C0","length":"302 bytes. Ends at $0CE8ED.","beginsAt":845760,"endsAt":846061,"type":"Overworld border","descriptio":"Tilemap of the \"pointy land formations\" background (the one that appears in, e.g., level 23), in LC_RLE1 format."},{"address":"$0CE8EE","length":"16 bytes. Ends at $0CE8FD.","beginsAt":846062,"endsAt":846077,"type":"Overworld border","descriptio":"Tilemap of the blank background (the one that appears in level F7), in LC_RLE1 format."},{"address":"$0CE8FE","length":"900 bytes. Ends at $0CEC81.","beginsAt":846078,"endsAt":846977,"type":"Overworld border","descriptio":"Tilemap of the underground background (the one that appears in, e.g., level 11A), in LC_RLE1 format."},{"address":"$0CEC82","length":"766 bytes. Ends at $0CEF7F.","beginsAt":846978,"endsAt":847743,"type":"Overworld border","descriptio":"Tilemap of the forest background (the one that appears in, e.g., level 106), in LC_RLE1 format."},{"address":"$0CEF80","length":"501 bytes. Ends at $0CF174.","beginsAt":847744,"endsAt":848244,"type":"Overworld border","descriptio":"Tilemap of the ghost house background (the one that appears in, e.g., level 4), in LC_RLE1 format."},{"address":"$0CF175","length":"741 bytes. Ends at $0CF459.","beginsAt":848245,"endsAt":848985,"type":"Overworld border","descriptio":"Tilemap of the sunken ship background (the one that appears in level F8), in LC_RLE1 format."},{"address":"$0CF45A","length":"901 bytes. Ends at $0CF7DE.","beginsAt":848986,"endsAt":849886,"type":"Overworld border","descriptio":"Tilemap of the castle background with windows (the one that appears in, e.g., level 7), in LC_RLE1 format."},{"address":"$0CF7DF","length":"2048 bytes. Ends at $0CFFDE.","beginsAt":849887,"endsAt":851934,"type":"Misc.","descriptio":"Layer 1 data on the overworld. Numbers are the same as in LM's \"map16 editor\".\nThe YI submap starts at $0CFBDE and is a simple format: One row of tiles at the time, 16 bytes for one line.\nLevel numbers are a little trickier, though:\nLevel numbers aren't anywhere in the rom. The loading routine assigns them when it runs. If you remove or add a level tile, you'll shift all of the levels after it. And the order of the tiles in the other submaps is even weirder, but if you look at the OW as 16x16 blocks and ignore submap borders, it'll start making sense."},{"address":"$0CFFE1","length":"31 bytes. Ends at $0CFFFF.","beginsAt":851937,"endsAt":851967,"type":"Empty","descriptio":"Unused data"},{"address":"$0D8000","length":"920 bytes. Ends at $0D8397.","beginsAt":884736,"endsAt":885655,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 000-072. Shared by all tilesets. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0D8398","length":"56 bytes. Ends at $0D83CF.","beginsAt":885656,"endsAt":885711,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 100-106. Shared by all tilesets. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0D83D0","length":"528 bytes. Ends at $0D85DF.","beginsAt":885712,"endsAt":886239,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 111-152. Shared by all tilesets. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0D85E0","length":"688 bytes. Ends at $0D888F.","beginsAt":886240,"endsAt":886927,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 16E-1C3. Shared by all tilesets. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0D8890","length":"32 bytes. Ends at $0D88AF.","beginsAt":886928,"endsAt":886959,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 1C4-1C7. Used in every tileset, but not when using GFX header 0 or 7. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0D88B0","length":"288 bytes. Ends at $0D89CF.","beginsAt":886960,"endsAt":887247,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 1C8-1EB. Shared by all tilesets. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0D89D0","length":"32 bytes. Ends at $0D89EF.","beginsAt":887248,"endsAt":887279,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 1EC-1EF. Used in every tileset, but not when using GFX header 0 or 7. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0D89F0","length":"128 bytes. Ends at $0D8A6F.","beginsAt":887280,"endsAt":887407,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 1F0-1FF. Shared by all tilesets. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0D8A70","length":"32 bytes. Ends at $0D8A8F.","beginsAt":887408,"endsAt":887439,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 1C4-1C7. Only used in GFX header 0 and 7. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0D8A90","length":"32 bytes. Ends at $0D8AAF.","beginsAt":887440,"endsAt":887471,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 1EC-1EF. Only used when using GFX header 0 or 7. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0D8AB0","length":"192 bytes. Ends at $0D8B6F.","beginsAt":887472,"endsAt":887663,"type":"Graphics","descriptio":"Graphic data for the Map16 tiles used by multicolour pipes (besides the default green pipe). 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0D8B70","length":"1128 bytes. Ends at $0D8FD7.","beginsAt":887664,"endsAt":888791,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 073-0FF. Used by tileset 0 only. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0D8FD8","length":"80 bytes. Ends at $0D9027.","beginsAt":888792,"endsAt":888871,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 107-110. Used by tileset 0 only. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0D9028","length":"216 bytes. Ends at $0D90FF.","beginsAt":888872,"endsAt":889087,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 153-16D. Used by tileset 0 only. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0D9100","length":"4096 bytes. Ends at $0DA0FF.","beginsAt":889088,"endsAt":893183,"type":"Graphics","descriptio":"Background Map16 tiles (pages 0x80 and 0x81 in LM) in TTTTTTTT YXPCCCTT format."},{"address":"$0DA10F","length":"768 bytes. Ends at $0DA40E.","beginsAt":893199,"endsAt":893966,"type":"Objects","descriptio":"Pointers to extended objects, 3 bytes per pointer, although the bank byte is always 0D. Extended objects 02-0F and 98-FF are unused, so they could be repointed (which is essentially what Extended Objects +14 and ObjecTool do)."},{"address":"$0DA40F","length":"60 bytes. Ends at $0DA44A.","beginsAt":893967,"endsAt":894026,"type":"Objects","descriptio":"The routine that loads normal (i.e. not extended) objects. $0DA41E-$0DA44A (45 bytes) are the pointers to the main object routines for each tileset. (Even though not all objects are tileset-specific, SMW's code treats them as if they all were.)"},{"address":"$0DA455","length":"189 bytes. Ends at $0DA511.","beginsAt":894037,"endsAt":894225,"type":"Objects","descriptio":"Pointers to normal (i.e. not extended) objects, for tilesets 0, 7, and C. Object 00 is not included (because normal object 00 is simply *all* extended objects); these pointers are for objects 01-3F."},{"address":"$0DA548","length":"51 bytes. Ends at $0DA57A.","beginsAt":894280,"endsAt":894330,"type":"Objects","descriptio":"Map16 data for extended objects 10-40, low byte. They are in order of object number, but the 8th byte is unused (it would be used for object 17, but the final byte in the table is used instead). The high byte of the first 19 tiles is 00, while the high byte of the rest of the tiles is 01."},{"address":"$0DA57B","length":"210 bytes. Ends at $0DA64C.","beginsAt":894331,"endsAt":894540,"type":"Objects","descriptio":"Main creation code for extended objects 10-40. (Extended object 17 uses a different pointer, but it jumps to the same routine.)"},{"address":"$0DA64D","length":"5 bytes. Ends at $0DA651.","beginsAt":894541,"endsAt":894545,"type":"Objects","descriptio":"The start of the routine for extended object 17, the green star block. It loads a hardcoded index to the table at $0DA548."},{"address":"$0DA6B1","length":"9 bytes. Ends at $0DA6B9.","beginsAt":894641,"endsAt":894649,"type":"Subroutine (JSR)","descriptio":"A routine that backs up the low and high bytes of the Map16 data pointers. It stores $6B and $6C in $04 and $05."},{"address":"$0DA6BA","length":"19 bytes. Ends at $0DA6CC.","beginsAt":894650,"endsAt":894668,"type":"Subroutine (JSR)","descriptio":"A routine that restores the low and high bytes of the Map16 pointers [$6B] and [$6E] from scratch RAM. Used in conjunction with $0DA6B1."},{"address":"$0DA6CD","length":"4 bytes. Ends at $0DA6D0.","beginsAt":894669,"endsAt":894672,"type":"Objects","descriptio":"Map16 data for the door and P-switch-activated door. In order: Top tile of normal door, top tile of P-switch door, bottom tile of normal door, bottom tile of P-switch door."},{"address":"$0DA6D1","length":"29 bytes. Ends at $0DA6ED.","beginsAt":894673,"endsAt":894701,"type":"Objects","descriptio":"Main creation code for extended objects 47 and 48, the normal door and P-switch-activated door.\n\nThis is also the routine that unused extended objects 98-FF point to (they just pull garbage tiles)."},{"address":"$0DA6EE","length":"45 bytes. Ends at $0DA71A.","beginsAt":894702,"endsAt":894746,"type":"Misc.","descriptio":"Map16 data for the big bush"},{"address":"$0DA71B","length":"45 bytes. Ends at $0DA747.","beginsAt":894747,"endsAt":894791,"type":"Objects","descriptio":"Main creation code for extended object 82 (the larger of the two big bushes).\n$0DA71E is the width, minus one.\n$0DA722 is the height, minus one.\n$0DA732 is the pointer to Map16 tile array (only contains low bytes)."},{"address":"$0DA748","length":"24 bytes. Ends at $0DA75F.","beginsAt":894792,"endsAt":894815,"type":"Objects","descriptio":"Map16 data for the small bush"},{"address":"$0DA760","length":"45 bytes. Ends at $0DA78C.","beginsAt":894816,"endsAt":894860,"type":"Objects","descriptio":"Main creation code for extended object 83 (the smaller of the two big bushes).\n$0DA763 is the width, minus one.\n$0DA767 is the height, minus one.\n$0DA777 is the pointer to Map16 tile array (only contains low bytes)."},{"address":"$0DA78D","length":"33 bytes. Ends at $0DA7AD.","beginsAt":894861,"endsAt":894893,"type":"ASM","descriptio":"Part of bush object decoding routine."},{"address":"$0DA7E3","length":"4 bytes. Ends at $0DA7E6.","beginsAt":894947,"endsAt":894950,"type":"Objects","descriptio":"Goal Arrow sign: MAP16 tiles"},{"address":"$0DA8A6","length":"8 bytes. Ends at $0DA8AD.","beginsAt":895142,"endsAt":895149,"type":"ASM","descriptio":"Bitmasking table. Contains the values $80,$40,$20,$10,$08,$04,$02,$01\nSo masking can be simply done by AND.l $0DA8A6,x"},{"address":"$0DA8B4","length":"15 bytes. Ends at $0DA8C2.","beginsAt":895156,"endsAt":895170,"type":"Objects","descriptio":"Map16 data for objects 01-0E, low bytes of tile numbers. The last byte is actually used for tileset-specific object 31 when it forms ice-blue turn blocks."},{"address":"$0DA8C3","length":"152 bytes. Ends at $0DA95A.","beginsAt":895171,"endsAt":895322,"type":"Objects","descriptio":"Main creation code for the objects that are made up of only one Map16 tile and can be extended both horizontally and vertically, i.e., objects 01-0E and tileset-specific object 31 when it forms ice-blue turn blocks."},{"address":"$0DA95B","length":"34 bytes. Ends at $0DA97C.","beginsAt":895323,"endsAt":895356,"type":"Objects","descriptio":"The subroutine that enables most objects to go across screen boundaries in horizontal levels without glitching. (It doesn't work in vertical levels.) It also stores the value of A to [$6B],y. (Forgot to include that info before.)"},{"address":"$0DA97D","length":"21 bytes. Ends at $0DA991.","beginsAt":895357,"endsAt":895377,"type":"Objects","descriptio":"The subroutine that allows objects to go across subscreen boundaries in horizontal levels without glitching."},{"address":"$0DAA12","length":"20 bytes. Ends at $0DAA25.","beginsAt":895506,"endsAt":895525,"type":"Objects","descriptio":"Map16 data for vertical pipe ends. There are four 5-byte tables here. The first two are for the top of a pipe (the last two bytes are unused), and the second two are for the bottom of a pipe (the first two bytes are unused)."},{"address":"$0DAA26","length":"126 bytes. Ends at $0DAAA3.","beginsAt":895526,"endsAt":895651,"type":"Objects","descriptio":"Main creation code for the vertical pipe objects.\n$0DAA5A - The Map16 tile number (low byte) for the left side of the vertical pipe with no end.\n$0DAA62 - The Map16 tile number (low byte) for the right side of the vertical pipe with no end.\n$0DAA6C - The Map16 tile number (low byte) for the left side of all non-vertical pipes except the one without ends.\n$0DAA74 - The Map16 tile number (low byte) for the right side of all non-vertical pipes except the one without ends."},{"address":"$0DAAA4","length":"16 bytes. Ends at $0DAAB3.","beginsAt":895652,"endsAt":895667,"type":"Objects","descriptio":"Map16 data for the horizontal pipes. There are two tables here, each containing the low bytes of the tile numbers and both in order; the first two bytes of each table are for the left-facing non-exit-enabled pipe, the next two are for the left-facing exit-enabled pipe, the next two are for the right-facing non-exit-enabled pipe, and the last two are for the right-facing exit-enabled pipe."},{"address":"$0DAAB4","length":"89 bytes. Ends at $0DAB0C.","beginsAt":895668,"endsAt":895756,"type":"Objects","descriptio":"Main creation code for the horizontal pipe objects."},{"address":"$0DAB0D","length":"49 bytes. Ends at $0DAB3D.","beginsAt":895757,"endsAt":895805,"type":"Objects","descriptio":"Main creation code for the Bullet Bill shooter object. $0DAB1A, $0DAB27, and $0DAB34 control which three Map16 tiles make up the object."},{"address":"$0DAB3E","length":"48 bytes. Ends at $0DAB6D.","beginsAt":895806,"endsAt":895853,"type":"Objects","descriptio":"Main creation code for the slope objects (object 12), minus the code for each individual slope. $0DAB50-$0DAB6D are the pointers to the individual slope objects."},{"address":"$0DABFD","length":"36 bytes. Ends at $0DAC20.","beginsAt":895997,"endsAt":896032,"type":"Objects","descriptio":"The routine that allows slopes to overlap with dirt tiles. It checks the Map16 tile below the current one for certain numbers and adds values to the current tile number to change it into the one with dirt behind it."},{"address":"$0DB075","length":"123 bytes. Ends at $0DB0EF.","beginsAt":897141,"endsAt":897263,"type":"Objects","descriptio":"Main creation code for object 13 (vine and edge objects)."},{"address":"$0DB1C8","length":"74 bytes. Ends at $0DB211.","beginsAt":897480,"endsAt":897553,"type":"Objects","descriptio":"Main creation code for objects 14 and 21, the normal ledge and wide ground ledge. They share most of their code, but the wide ledge begins at $0DB1C8, while the normal one begins at $0DB1D4.\n\n$0DB1CE - Height of the wide ground ledge - 1. The top tile is 100, the rest is 03F."},{"address":"$0DB212","length":"18 bytes. Ends at $0DB223.","beginsAt":897554,"endsAt":897571,"type":"Objects","descriptio":"The Map16 tiles that make up the midway point and goal point objects. There are 6 3-byte tables here that are, in order: Top tiles of midway point, middle tiles of midway point, bottom tiles of midway point, top tiles of goal point, middle tiles of goal point, bottom tiles of goal point. You can change $0DB221 to 3A and $0DB223 to 3D to fix the glitched tiles at the bottom of the goal point. (They will just appear the same as the middle tiles.)"},{"address":"$0DB224","length":"166 bytes. Ends at $0DB2C9.","beginsAt":897572,"endsAt":897737,"type":"Objects","descriptio":"Main creation code for the midway point/goal point object."},{"address":"$0DB2CA","length":"108 bytes. Ends at $0DB335.","beginsAt":897738,"endsAt":897845,"type":"Objects","descriptio":"Dragon Coin creation routine.\n$0DB2DF - Change to 00 to prevent Dragon Coins from vanishing when at least 5 have been collected.\n$0DB328 - Map16 tile for the upper half of a Yoshi/Dragon Coin.\n$0DB329 - Change to EA EA to make only the lower half of Yoshi/Dragon Coins appear.\n$0DB332 - Map16 tile for the lower half of a Yoshi/Dragon Coin.\n$0DB333 - Change to EA EA to make only the upper half of Yoshi/Dragon Coins appear."},{"address":"$0DB336","length":"133 bytes. Ends at $0DB3BA.","beginsAt":897846,"endsAt":897978,"type":"Objects","descriptio":"Main creation code for the purple coins. This is very similar to the code at $0DA8C3."},{"address":"$0DB3BB","length":"1 byte","beginsAt":897979,"endsAt":897979,"type":"Objects","descriptio":"Rope: MAP16 block"},{"address":"$0DB3BC","length":"1 byte","beginsAt":897980,"endsAt":897980,"type":"Objects","descriptio":"Clouds: MAP16 block"},{"address":"$0DB3BD","length":"30 bytes. Ends at $0DB3DA.","beginsAt":897981,"endsAt":898010,"type":"Objects","descriptio":"Main creation code for the rope and cloud objects."},{"address":"$0DB3DB","length":"1 byte","beginsAt":898011,"endsAt":898011,"type":"Objects","descriptio":"Water with animated surface: MAP16 block (Top)"},{"address":"$0DB3DC","length":"1 byte","beginsAt":898012,"endsAt":898012,"type":"Objects","descriptio":"Water with normal surface: MAP16 block (Top)"},{"address":"$0DB3DD","length":"1 byte","beginsAt":898013,"endsAt":898013,"type":"Objects","descriptio":"Lava with animated surface: MAP16 block (Top)"},{"address":"$0DB3DE","length":"1 byte","beginsAt":898014,"endsAt":898014,"type":"Objects","descriptio":"Climbing net with top edge: MAP16 block (Top)"},{"address":"$0DB3DF","length":"1 byte","beginsAt":898015,"endsAt":898015,"type":"Objects","descriptio":"Water with animated surface: MAP16 block (Bottom)"},{"address":"$0DB3E0","length":"1 byte","beginsAt":898016,"endsAt":898016,"type":"Objects","descriptio":"Water with normal surface: MAP16 block (Bottom)"},{"address":"$0DB3E1","length":"1 byte","beginsAt":898017,"endsAt":898017,"type":"Objects","descriptio":"Lava with animated surface: MAP16 block (Bottom)"},{"address":"$0DB3E2","length":"1 byte","beginsAt":898018,"endsAt":898018,"type":"Objects","descriptio":"Climbing net with top edge: MAP16 block (Bottom)"},{"address":"$0DB3E3","length":"72 bytes. Ends at $0DB42A.","beginsAt":898019,"endsAt":898090,"type":"Objects","descriptio":"Main creation subroutine for objects 18-1B (water with and without animated surface, lava, climbing net with top edge). It is also used as the default routine for unused objects 22-2D."},{"address":"$0DB42B","length":"1 byte","beginsAt":898091,"endsAt":898091,"type":"Objects","descriptio":"Donut bridge: MAP16 block (Top)"},{"address":"$0DB42C","length":"1 byte","beginsAt":898092,"endsAt":898092,"type":"Objects","descriptio":"Donut bridge: MAP16 block (Bottom)"},{"address":"$0DB42D","length":"52 bytes. Ends at $0DB460.","beginsAt":898093,"endsAt":898144,"type":"Objects","descriptio":"Main creation code for the donut bridge (object 1C)."},{"address":"$0DB51F","length":"40 bytes. Ends at $0DB546.","beginsAt":898335,"endsAt":898374,"type":"Objects","descriptio":"Vertical pipe/bone/log object creation subroutine. $0DB52E, $0DB536, and $0DB543 determine which three Map16 tiles make up the object."},{"address":"$0DB547","length":"34 bytes. Ends at $0DB568.","beginsAt":898375,"endsAt":898408,"type":"Objects","descriptio":"Horizontal pipe/bone/log object creation subroutine. $0DB552, $0DB55A, and $0DB565 determine which three Map16 tiles make up the object."},{"address":"$0DB583","length":"37 bytes. Ends at $0DB5A7.","beginsAt":898435,"endsAt":898471,"type":"Objects","descriptio":"Main creation code for the yellow and green switch blocks.\n\n$0DB583 - Start of the code for the green block.\n$0DB587 - Map16 tiles (on page 1) for the filled-in blocks.\n$0DB589 - Map16 tiles (on page 0) for the outline blocks.\n$0DB58B - Start of the code for the yellow block.\n$0DB592 - Change F0 to D0, to invert the Green and Yellow Switch Palace blocks (solid before the Switch Palce, passable afterwards)."},{"address":"$0DB5A8","length":"15 bytes. Ends at $0DB5B6.","beginsAt":898472,"endsAt":898486,"type":"Objects","descriptio":"Tiles the Bushes 1-5 is made up of, in order of Left-Middle-right (five bytes per part)"},{"address":"$0DB5B7","length":"1 byte","beginsAt":898487,"endsAt":898487,"type":"Misc.","descriptio":"6A-Green Switch Palace Block after you beat its Palace (always Map16 page 1)"},{"address":"$0DB5B8","length":"1 byte","beginsAt":898488,"endsAt":898488,"type":"Misc.","descriptio":"6B-Yellow Switch Palace Block after you beat its Palace (always Map16 page 1)"},{"address":"$0DB5B9","length":"1 byte","beginsAt":898489,"endsAt":898489,"type":"Misc.","descriptio":"6A-Green Switch Palace Block after you beat its Palace (always Map16 page 0)"},{"address":"$0DB5BA","length":"1 byte","beginsAt":898490,"endsAt":898490,"type":"Misc.","descriptio":"6B-Yellow Switch Palace Block after you beat its Palace (always Map16 page 0)"},{"address":"$0DB72F","length":"16 bytes. Ends at $0DB73E.","beginsAt":898863,"endsAt":898878,"type":"Objects","descriptio":"Map16 data for the diagonal pipe (low bytes only)."},{"address":"$0DB73F","length":"107 bytes. Ends at $0DB7A9.","beginsAt":898879,"endsAt":898985,"type":"Objects","descriptio":"Main creation code for the diagonal pipe object.\n$0DB7A6 - The Map16 tile (on page 1) at the bottom of the diagonal pipe object. (Default: $EB.)"},{"address":"$0DB7AA","length":"185 bytes. Ends at $0DB862.","beginsAt":898986,"endsAt":899170,"type":"Objects","descriptio":"Main creation code for the left-facing diagonal ledge."},{"address":"$0DB863","length":"179 bytes. Ends at $0DB915.","beginsAt":899171,"endsAt":899349,"type":"Objects","descriptio":"Main creation code for the right-facing diagonal ledge."},{"address":"$0DB916","length":"76 bytes. Ends at $0DB961.","beginsAt":899350,"endsAt":899425,"type":"Objects","descriptio":"Main creation code for the red and blue switch blocks. Note that the actual object number varies per tileset. (It was really dumb that Nintendo did that...oh well.)\n\n$0DB916 - Start of the code for the blue block.\n$0DB91A - Map16 tiles (on page 0) for the outline blocks.\n$0DB91C - Map16 tiles (on page 1) for the filled-in blocks.\n$0DB91E - Start of the code for the red block.\n$0DB943 - Change F0 to D0 to invert the Blue and Red Switch Palace blocks."},{"address":"$0DBA7C","length":"96 bytes. Ends at $0DBADB.","beginsAt":899708,"endsAt":899803,"type":"Objects","descriptio":"Forest treetop tilemap (repeated a few times)"},{"address":"$0DBB68","length":"152 bytes. Ends at $0DBBFF.","beginsAt":899944,"endsAt":900095,"type":"Empty","descriptio":"Unused data"},{"address":"$0DBC00","length":"1128 bytes. Ends at $0DC067.","beginsAt":900096,"endsAt":901223,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 073-0FF. Used by tileset 1 only. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0DC068","length":"80 bytes. Ends at $0DC0B7.","beginsAt":901224,"endsAt":901303,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 107-110. Used by tileset 1 only. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0DC0B8","length":"216 bytes. Ends at $0DC18F.","beginsAt":901304,"endsAt":901519,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 153-16D. Used by tileset 1 only. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0DC19A","length":"189 bytes. Ends at $0DC256.","beginsAt":901530,"endsAt":901718,"type":"Objects","descriptio":"Pointers to normal (i.e. not extended) objects, for tileset 1. Object 00 is not included (because normal object 00 is simply *all* extended objects); these pointers are for objects 01-3F."},{"address":"$0DC26B","length":"126 bytes. Ends at $0DC2E8.","beginsAt":901739,"endsAt":901864,"type":"Objects","descriptio":"Castle entrance: MAP16 blocks"},{"address":"$0DC46F","length":"3 bytes. Ends at $0DC471.","beginsAt":902255,"endsAt":902257,"type":"Objects","descriptio":"The three Map16 tiles that make up the left side of the large stone castle block (tileset-specific object 3C in tileset 1). These are low bytes; the tiles are on page 1."},{"address":"$0DC472","length":"3 bytes. Ends at $0DC474.","beginsAt":902258,"endsAt":902260,"type":"Objects","descriptio":"The three Map16 tiles that make up the middle columns of the large stone castle block (tileset-specific object 3C in tileset 1). These are low bytes; the tiles are on page 1."},{"address":"$0DC475","length":"3 bytes. Ends at $0DC477.","beginsAt":902261,"endsAt":902263,"type":"Objects","descriptio":"The three Map16 tiles that make up the right side of the large stone castle block (tileset-specific object 3C in tileset 1). These are low bytes; the tiles are on page 1."},{"address":"$0DC478","length":"81 bytes. Ends at $0DC4C8.","beginsAt":902264,"endsAt":902344,"type":"Objects","descriptio":"Main creation code for the large stone castle block (tileset-specific object 3C in tileset 1)."},{"address":"$0DC620","length":"480 bytes. Ends at $0DC7FF.","beginsAt":902688,"endsAt":903167,"type":"Empty","descriptio":"Unused data."},{"address":"$0DC800","length":"1128 bytes. Ends at $0DCC67.","beginsAt":903168,"endsAt":904295,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 073-0FF. Used by tileset 2 only. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0DCC68","length":"80 bytes. Ends at $0DCCB7.","beginsAt":904296,"endsAt":904375,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 107-110. Used by tileset 2 only. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0DCCB8","length":"216 bytes. Ends at $0DCD8F.","beginsAt":904376,"endsAt":904591,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 153-16D. Used by tileset 2 only. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0DCD9A","length":"189 bytes. Ends at $0DCE56.","beginsAt":904602,"endsAt":904790,"type":"Objects","descriptio":"Pointers to normal (i.e. not extended) objects, for tilesets 2, 6, and 8. Object 00 is not included (because normal object 00 is simply *all* extended objects); these pointers are for objects 01-3F."},{"address":"$0DCE57","length":"16 bytes. Ends at $0DCE66.","beginsAt":904791,"endsAt":904806,"type":"Objects","descriptio":"Map16 data for the large circular line guide pieces (low bytes only)."},{"address":"$0DCE67","length":"41 bytes. Ends at $0DCE8F.","beginsAt":904807,"endsAt":904847,"type":"Objects","descriptio":"Main creation code for the large circular line guide pieces."},{"address":"$0DCE90","length":"4 bytes. Ends at $0DCE93.","beginsAt":904848,"endsAt":904851,"type":"Objects","descriptio":"Map16 data for the small circular line guide pieces (low bytes)."},{"address":"$0DCE94","length":"18 bytes. Ends at $0DCEA5.","beginsAt":904852,"endsAt":904869,"type":"Objects","descriptio":"Main creation code for the small circular line guide pieces."},{"address":"$0DCEBE","length":"2 bytes. Ends at $0DCEBF.","beginsAt":904894,"endsAt":904895,"type":"Objects","descriptio":"Map16 data for the horizontal line guide end (extended object 55)."},{"address":"$0DCEC0","length":"24 bytes. Ends at $0DCED7.","beginsAt":904896,"endsAt":904919,"type":"Objects","descriptio":"Main creation code for the horizontal line guide end (extended object 55)."},{"address":"$0DCED8","length":"2 bytes. Ends at $0DCED9.","beginsAt":904920,"endsAt":904921,"type":"Objects","descriptio":"Map16 data for the vertical line guide end (extended object 56)."},{"address":"$0DCEDA","length":"22 bytes. Ends at $0DCEEF.","beginsAt":904922,"endsAt":904943,"type":"Objects","descriptio":"Main creation code for the vertical line guide end (extended object 56)."},{"address":"$0DD282","length":"382 bytes. Ends at $0DD3FF.","beginsAt":905858,"endsAt":906239,"type":"Empty","descriptio":"Unused data"},{"address":"$0DD400","length":"1128 bytes. Ends at $0DD867.","beginsAt":906240,"endsAt":907367,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 073-0FF. Used by tileset 3 only. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0DD868","length":"80 bytes. Ends at $0DD8B7.","beginsAt":907368,"endsAt":907447,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 107-110. Used by tileset 3 only. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0DD8B8","length":"216 bytes. Ends at $0DD98F.","beginsAt":907448,"endsAt":907663,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 153-16D. Used by tileset 3 only. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0DD99A","length":"189 bytes. Ends at $0DDA56.","beginsAt":907674,"endsAt":907862,"type":"Objects","descriptio":"Pointers to normal (i.e. not extended) objects, for tilesets 3, 9, A, B, and E. Object 00 is not included (because normal object 00 is simply *all* extended objects); these pointers are for objects 01-3F."},{"address":"$0DDA9E","length":"4 bytes. Ends at $0DDAA1.","beginsAt":907934,"endsAt":907937,"type":"Objects","descriptio":"Torpedo Ted Launcher: MAP16 tiles"},{"address":"$0DE186","length":"378 bytes. Ends at $0DE2FF.","beginsAt":909702,"endsAt":910079,"type":"Empty","descriptio":"Unused data"},{"address":"$0DE300","length":"1128 bytes. Ends at $0DE767.","beginsAt":910080,"endsAt":911207,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 073-0FF. Used by tileset 4 only. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0DE768","length":"80 bytes. Ends at $0DE7B7.","beginsAt":911208,"endsAt":911287,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 107-110. Used by tileset 4 only. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0DE7B8","length":"216 bytes. Ends at $0DE88F.","beginsAt":911288,"endsAt":911503,"type":"Graphics","descriptio":"Graphic data for Map16 tiles 153-16D. Used by tileset 4 only. 8 bytes per tile, upper left, lower left, upper right, lower right. TTTTTTTT YXPCCCTT format."},{"address":"$0DE89A","length":"189 bytes. Ends at $0DE956.","beginsAt":911514,"endsAt":911702,"type":"Objects","descriptio":"Pointers to normal (i.e. not extended) objects, for tilesets 4, 5, and D. Object 00 is not included (because normal object 00 is simply *all* extended objects); these pointers are for objects 01-3F."},{"address":"$0DEADE","length":"140 bytes. Ends at $0DEB69.","beginsAt":912094,"endsAt":912233,"type":"Objects","descriptio":"Ghost House entrance: MAP16 blocks"},{"address":"$0DEB93","length":"160 bytes. Ends at $0DEC32.","beginsAt":912275,"endsAt":912434,"type":"Objects","descriptio":"Tilemap of Yoshi's House. Change EB to D3 at $0DEB85, $0DEB89, $0DEBBE, $0DEBC6, $0DEBCC, $0DEBD0 and $0DEBDA to remove Berries from Yoshi's House, or to 45 to make them work without placing berry objects on top of them."},{"address":"$0DEC7E","length":"4 bytes. Ends at $0DEC81.","beginsAt":912510,"endsAt":912513,"type":"Objects","descriptio":"Green Switch: MAP16 blocks"},{"address":"$0DEC82","length":"4 bytes. Ends at $0DEC85.","beginsAt":912514,"endsAt":912517,"type":"Objects","descriptio":"Yellow Switch: MAP16 blocks"},{"address":"$0DEC86","length":"4 bytes. Ends at $0DEC89.","beginsAt":912518,"endsAt":912521,"type":"Objects","descriptio":"Blue Switch: MAP16 blocks"},{"address":"$0DEC8A","length":"4 bytes. Ends at $0DEC8D.","beginsAt":912522,"endsAt":912525,"type":"Objects","descriptio":"Red Switch: MAP16 blocks"},{"address":"$0DEC8E","length":"51 bytes. Ends at $0DECC0.","beginsAt":912526,"endsAt":912576,"type":"Objects","descriptio":"Main creation code for the four switch palace switches."},{"address":"$0DF08A","length":"630 bytes. Ends at $0DF2FF.","beginsAt":913546,"endsAt":914175,"type":"Empty","descriptio":"Unused data."},{"address":"$0DF3A0","length":"26 bytes. Ends at $0DF3B9.","beginsAt":914336,"endsAt":914361,"type":"Layer 3","descriptio":"FISHIN'LAKITU and attributes (sprite name)"},{"address":"$0DF3BE","length":"18 bytes. Ends at $0DF3CF.","beginsAt":914366,"endsAt":914383,"type":"Layer 3","descriptio":"PARA-BOMB and attributes (sprite name)"},{"address":"$0DF3D4","length":"22 bytes. Ends at $0DF3E9.","beginsAt":914388,"endsAt":914409,"type":"Layer 3","descriptio":"PARA-GOOMBA and attributes (sprite name)"},{"address":"$0DF3EE","length":"12 bytes. Ends at $0DF3F9.","beginsAt":914414,"endsAt":914425,"type":"Layer 3","descriptio":"LAKITU and attributes (sprite name)"},{"address":"$0DF3FE","length":"10 bytes. Ends at $0DF407.","beginsAt":914430,"endsAt":914439,"type":"Layer 3","descriptio":"SPINY and attributes (sprite name)"},{"address":"$0DF40C","length":"14 bytes. Ends at $0DF419.","beginsAt":914444,"endsAt":914457,"type":"Layer 3","descriptio":"WIGGLER and attributes (sprite name)"},{"address":"$0DF41E","length":"14 bytes. Ends at $0DF42B.","beginsAt":914462,"endsAt":914475,"type":"Layer 3","descriptio":"BOB-OMB and attributes (sprite name)"},{"address":"$0DF4A9","length":"28 bytes. Ends at $0DF4C4.","beginsAt":914601,"endsAt":914628,"type":"Layer 3","descriptio":"AMAZING FLYIN' and attributes (sprite name)"},{"address":"$0DF4C9","length":"28 bytes. Ends at $0DF4E4.","beginsAt":914633,"endsAt":914660,"type":"Layer 3","descriptio":"AMAZING FLYIN' HAMMER BROTHER and attributes (sprite name)"},{"address":"$0DF4E9","length":"22 bytes. Ends at $0DF4FE.","beginsAt":914665,"endsAt":914686,"type":"Layer 3","descriptio":"SUPER KOOPA and attributes (sprite name)"},{"address":"$0DF503","length":"16 bytes. Ends at $0DF512.","beginsAt":914691,"endsAt":914706,"type":"Layer 3","descriptio":"CHARGIN' and attributes (sprite name)"},{"address":"$0DF517","length":"10 bytes. Ends at $0DF520.","beginsAt":914711,"endsAt":914720,"type":"Layer 3","descriptio":"CHUCK and attributes (sprite name)"},{"address":"$0DF525","length":"48 bytes. Ends at $0DF554.","beginsAt":914725,"endsAt":914772,"type":"Layer 3","descriptio":"Layer 3 JUMPING PIRHANA PLANT and attributes (sprite name)"},{"address":"$0DF555","length":"29 bytes. Ends at $0DF571.","beginsAt":914773,"endsAt":914801,"type":"Layer 3","descriptio":"Layer 3 VOLCANO LOTUS and attributes (sprite name)"},{"address":"$0DF612","length":"28 bytes. Ends at $0DF62D.","beginsAt":914962,"endsAt":914989,"type":"Layer 3","descriptio":"Layer 3 SUMO BROTHER and attributes (sprite name)"},{"address":"$0DF62E","length":"24 bytes. Ends at $0DF645.","beginsAt":914990,"endsAt":915013,"type":"Layer 3","descriptio":"Layer 3 MONTY MOLE and attributes (sprite name)"},{"address":"$0DF646","length":"14 bytes. Ends at $0DF653.","beginsAt":915014,"endsAt":915027,"type":"Layer 3","descriptio":"Layer 3 POKEY and attributes (sprite name)"},{"address":"$0DF654","length":"23 bytes. Ends at $0DF66A.","beginsAt":915028,"endsAt":915050,"type":"Layer 3","descriptio":"Layer 3 BULLET BILL and attributes (sprite name)"},{"address":"$0DF70B","length":"10 bytes. Ends at $0DF714.","beginsAt":915211,"endsAt":915220,"type":"Layer 3","descriptio":"Layer 3 REX and attributes (sprite name)"},{"address":"$0DF715","length":"22 bytes. Ends at $0DF72A.","beginsAt":915221,"endsAt":915242,"type":"Layer 3","descriptio":"Layer 3 MEGA MOLE and attributes (sprite name)"},{"address":"$0DF72B","length":"23 bytes. Ends at $0DF741.","beginsAt":915243,"endsAt":915265,"type":"Layer 3","descriptio":"Layer 3 BANZAI BILL and attributes (sprite name)"},{"address":"$0DF7FA","length":"24 bytes. Ends at $0DF811.","beginsAt":915450,"endsAt":915473,"type":"Layer 3","descriptio":"Layer 3 DINO RHINO and attributes (sprite name)"},{"address":"$0DF812","length":"24 bytes. Ends at $0DF829.","beginsAt":915474,"endsAt":915497,"type":"Layer 3","descriptio":"Layer 3 DINO TORCH and attributes (sprite name)"},{"address":"$0DF82A","length":"13 bytes. Ends at $0DF836.","beginsAt":915498,"endsAt":915510,"type":"Layer 3","descriptio":"Layer 3 KOOPAS and attributes (sprite name)"},{"address":"$0DF8A7","length":"22 bytes. Ends at $0DF8BC.","beginsAt":915623,"endsAt":915644,"type":"Layer 3","descriptio":"Layer 3 SPIKE TOP and attributes (sprite name)"},{"address":"$0DF8BD","length":"20 bytes. Ends at $0DF8D0.","beginsAt":915645,"endsAt":915664,"type":"Layer 3","descriptio":"Layer 3 SWOOPERS and attributes (sprite name)"},{"address":"$0DF8D1","length":"28 bytes. Ends at $0DF8EC.","beginsAt":915665,"endsAt":915692,"type":"Layer 3","descriptio":"Layer 3 BUZZY BEETLE and attributes (sprite name)"},{"address":"$0DF8ED","length":"13 bytes. Ends at $0DF8F9.","beginsAt":915693,"endsAt":915705,"type":"Layer 3","descriptio":"Layer 3 BLARGG and attributes (sprite name)"},{"address":"$0DF95E","length":"16 bytes. Ends at $0DF96D.","beginsAt":915806,"endsAt":915821,"type":"Layer 3","descriptio":"Layer 3 BLURPS and attributes (sprite name)"},{"address":"$0DF96E","length":"16 bytes. Ends at $0DF97D.","beginsAt":915822,"endsAt":915837,"type":"Layer 3","descriptio":"Layer 3 URCHIN and attributes (sprite name)"},{"address":"$0DF97E","length":"28 bytes. Ends at $0DF999.","beginsAt":915838,"endsAt":915865,"type":"Layer 3","descriptio":"Layer 3 PORCU-PUFFER and attributes (sprite name)"},{"address":"$0DF99A","length":"26 bytes. Ends at $0DF9B3.","beginsAt":915866,"endsAt":915891,"type":"Layer 3","descriptio":"Layer 3 TORPEDO TED and attributes (sprite name)"},{"address":"$0DF9B4","length":"25 bytes. Ends at $0DF9CC.","beginsAt":915892,"endsAt":915916,"type":"Layer 3","descriptio":"Layer 3 RIP VAN FISH and attributes (sprite name)"},{"address":"$0DFA37","length":"30 bytes. Ends at $0DFA54.","beginsAt":916023,"endsAt":916052,"type":"Layer 3","descriptio":"Layer 3 \"BOO\" BUDDIES and attributes (sprite name)"},{"address":"$0DFA55","length":"24 bytes. Ends at $0DFA6C.","beginsAt":916053,"endsAt":916076,"type":"Layer 3","descriptio":"Layer 3 FISHIN' BOO and attributes (sprite name)"},{"address":"$0DFA6D","length":"30 bytes. Ends at $0DFA8A.","beginsAt":916077,"endsAt":916106,"type":"Layer 3","descriptio":"Layer 3 THE BIG \"BOO\" and attributes (sprite name)"},{"address":"$0DFA8B","length":"13 bytes. Ends at $0DFA97.","beginsAt":916107,"endsAt":916119,"type":"Layer 3","descriptio":"Layer 3 EERIES and attributes (sprite name)"},{"address":"$0DFAFC","length":"24 bytes. Ends at $0DFB13.","beginsAt":916220,"endsAt":916243,"type":"Layer 3","descriptio":"Layer 3 LIL SPARKY and attributes (sprite name)"},{"address":"$0DFB14","length":"26 bytes. Ends at $0DFB2D.","beginsAt":916244,"endsAt":916269,"type":"Layer 3","descriptio":"Layer 3 BONY BEETLE and attributes (sprite name)"},{"address":"$0DFB2E","length":"22 bytes. Ends at $0DFB43.","beginsAt":916270,"endsAt":916291,"type":"Layer 3","descriptio":"Layer 3 DRY BONES and attributes (sprite name)"},{"address":"$0DFB44","length":"16 bytes. Ends at $0DFB53.","beginsAt":916292,"endsAt":916307,"type":"Layer 3","descriptio":"Layer 3 THWOMP and attributes (sprite name)"},{"address":"$0DFB54","length":"16 bytes. Ends at $0DFB63.","beginsAt":916308,"endsAt":916323,"type":"Layer 3","descriptio":"Layer 3 THWIMP and attributes (sprite name)"},{"address":"$0DFB64","length":"15 bytes. Ends at $0DFB72.","beginsAt":916324,"endsAt":916338,"type":"Layer 3","descriptio":"Layer 3 HOTHEAD and attributes (sprite name)"},{"address":"$0DFC19","length":"18 bytes. Ends at $0DFC2A.","beginsAt":916505,"endsAt":916522,"type":"Layer 3","descriptio":"Layer 3 GRINDER and attributes (sprite name)"},{"address":"$0DFC2B","length":"28 bytes. Ends at $0DFC46.","beginsAt":916523,"endsAt":916550,"type":"Layer 3","descriptio":"Layer 3 BALL'N'CHAIN and attributes (sprite name)"},{"address":"$0DFC47","length":"17 bytes. Ends at $0DFC57.","beginsAt":916551,"endsAt":916567,"type":"Layer 3","descriptio":"Layer 3 FISHBONE and attributes (sprite name)"},{"address":"$0DFCC8","length":"13 bytes. Ends at $0DFCD4.","beginsAt":916680,"endsAt":916692,"type":"Layer 3","descriptio":"Layer 3 REZNOR and attributes (sprite name)"},{"address":"$0DFD45","length":"23 bytes. Ends at $0DFD5B.","beginsAt":916805,"endsAt":916827,"type":"Layer 3","descriptio":"Layer 3 MECHAKOOPAS and attributes (sprite name)"},{"address":"$0DFD66","length":"38 bytes. Ends at $0DFD8B.","beginsAt":916838,"endsAt":916875,"type":"Layer 3","descriptio":"Layer 3 MORTON KOOPA JR and attributes (sprite name)"},{"address":"$0DFD8C","length":"24 bytes. Ends at $0DFDA3.","beginsAt":916876,"endsAt":916899,"type":"Layer 3","descriptio":"Layer 3 ROY KOOPA and attributes (sprite name)"},{"address":"$0DFDA4","length":"16 bytes. Ends at $0DFDB3.","beginsAt":916900,"endsAt":916915,"type":"Layer 3","descriptio":"Layer 3 BOWSER and attributes (sprite name)"},{"address":"$0DFDB4","length":"28 bytes. Ends at $0DFDCF.","beginsAt":916916,"endsAt":916943,"type":"Layer 3","descriptio":"Layer 3 LEMMY KOOPA and attributes (sprite name)"},{"address":"$0DFDD0","length":"32 bytes. Ends at $0DFDEF.","beginsAt":916944,"endsAt":916975,"type":"Layer 3","descriptio":"Layer 3 WENDY O.KOOPA and attributes (sprite name)"},{"address":"$0DFDF0","length":"26 bytes. Ends at $0DFE09.","beginsAt":916976,"endsAt":917001,"type":"Layer 3","descriptio":"Layer 3 IGGY KOOPA and attributes (sprite name)"},{"address":"$0DFE0A","length":"28 bytes. Ends at $0DFE25.","beginsAt":917002,"endsAt":917029,"type":"Layer 3","descriptio":"Layer 3 LARRY KOOPA and attributes (sprite name)"},{"address":"$0DFE26","length":"35 bytes. Ends at $0DFE48.","beginsAt":917030,"endsAt":917064,"type":"Layer 3","descriptio":"Layer 3 LUDWIG VON KOOPA and attributes (sprite name)"},{"address":"$0DFE4F","length":"16 bytes. Ends at $0DFE5E.","beginsAt":917071,"endsAt":917086,"type":"Layer 3","descriptio":"Layer 3 PUMPKIN and attributes (sprite name)"},{"address":"$0DFE63","length":"16 bytes. Ends at $0DFE72.","beginsAt":917091,"endsAt":917106,"type":"Layer 3","descriptio":"Layer 3 PIDGIT and attributes (sprite name)"},{"address":"$0DFE77","length":"25 bytes. Ends at $0DFE8F.","beginsAt":917111,"endsAt":917135,"type":"Layer 3","descriptio":"Layer 3 MASK KOOPAS and attributes (sprite name)"},{"address":"$0DFE9F","length":"353 bytes. Ends at $0DFFFF.","beginsAt":917151,"endsAt":917503,"type":"Empty","descriptio":"Unused data. Warning: the 0x12 FF bytes before this are NOT unused data (used in credits)."},{"address":"$0E8D99","length":"2 bytes. Ends at $0E8D9A.","beginsAt":953753,"endsAt":953754,"type":"Misc.","descriptio":"SPC Main Volume. Default is $7F,$7F"},{"address":"$0E8D9E","length":"1 byte","beginsAt":953758,"endsAt":953758,"type":"Misc.","descriptio":"High byte of the address that the echo buffer will be placed at in audio ram. The low byte is ignored. Default is $60 = ($6000 in audio RAM)"},{"address":"$0E8DB1","length":"16 bytes. Ends at $0E8DC0.","beginsAt":953777,"endsAt":953792,"type":"Misc.","descriptio":"SPC FIR Filter.\nx70FB1 - FIR Filter 1, like $F1 $XX $YY $00\nx70FB9 - FIR Filter 2, like $F1 $XX $YY $01"},{"address":"$0E98C5","length":"1 byte","beginsAt":956613,"endsAt":956613,"type":"Music","descriptio":"Special World overworld music - Change to 76 to start right at the beginning of the SMB theme, or 74 to include the short drum intro normally at the beginning of the loop."},{"address":"$0EF0F0","length":"3856 bytes. Ends at $0EFFFF.","beginsAt":979184,"endsAt":983039,"type":"Empty","descriptio":"Empty"},{"address":"$0F8000","length":"28560 bytes. Ends at $0FEF8F.","beginsAt":1015808,"endsAt":1044367,"type":"Music","descriptio":"Instrument data."},{"address":"$0FEF90","length":"4208 bytes. Ends at $0FFFFF.","beginsAt":1044368,"endsAt":1048575,"type":"Empty","descriptio":"Empty"}]