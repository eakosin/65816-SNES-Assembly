/*

[...temp1.rows].filter((d) => d.cells[1].children[0] != undefined || d.cells[1].innerHTML == "1 byte")

*/

export var HIJACK = [{"address":"$008023","length":"4 bytes. Ends at $008026.","beginsAt":32803,"endsAt":32806,"type":"Jump (JML/JSL)","descriptio":"Modified by ZSNES incompatibility notice. Jumps to the main code."},{"address":"$00804D","length":"1 byte","beginsAt":32845,"endsAt":32845,"type":"Opcode","descriptio":"Not modified, however is used by Lunar Magic as an RTL for calling routines that end in RTS in bank 0 with a JSL via stack magic. So don't modify it."},{"address":"$008070","length":"4 bytes. Ends at $008073.","beginsAt":32880,"endsAt":32883,"type":"Jump (JML/JSL)","descriptio":"Modified by 16-bit frame counter. Jump to code that increases both $13 and 16-bit frame counters."},{"address":"$008072","length":"3 bytes. Ends at $008074.","beginsAt":32882,"endsAt":32884,"type":"Jump (JMP/JSR)","descriptio":"Modified by the CPU Usage Meter patch. Jumps to the main code of the patch in a free area at $00FF9C."},{"address":"$0081AA","length":"8 bytes. Ends at $0081B1.","beginsAt":33194,"endsAt":33201,"type":"Jump (JML/JSL)","descriptio":"Modified by Ice Man's 'HDMA v3.5' patch. Hijacks NMI and calls the main routine. [JSL : BRA : NOP #2]"},{"address":"$0081E2","length":"4 bytes. Ends at $0081E5.","beginsAt":33250,"endsAt":33253,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$0081EC","length":"4 bytes. Ends at $0081EF.","beginsAt":33260,"endsAt":33263,"type":"Jump (JML/JSL)","descriptio":"Hijacked by multiple patches.\nOverworld Counters hijacks this to upload the various counters during NMI.\nOverworld Border Plus hijacks this to upload the border tiles during NMI."},{"address":"$008209","length":"4 bytes. Ends at $00820C.","beginsAt":33289,"endsAt":33292,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic.\n\nPart of Lunar Magic's VRAM modification patch."},{"address":"$00823D","length":"6 bytes. Ends at $008242.","beginsAt":33341,"endsAt":33346,"type":"Jump (JML/JSL)","descriptio":"Dynamic Z Main Hijack 1.\n\nIs used for the main features of Dynamic Z since V3.5 (dynamic sprites, graphics change and palette changes).\n\nThis hijack points to a call where is called the routine \"LoadScrnImage\" and happend after MarioGFXDMA Routine (the dma routine of mario, yoshi and podoboos)."},{"address":"$008275","length":"4 bytes. Ends at $008278.","beginsAt":33397,"endsAt":33400,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lui37's 'Move Layer 3 to Subscreen Fix' patch. It changes part of NMI. [JML]"},{"address":"$008292","length":"1 byte","beginsAt":33426,"endsAt":33426,"type":"Code","descriptio":"Modified by the Super Status Bar patch by GreenHammerBro and Kaijyuu. This is the scanline at which the status bar IRQ will fire in normal levels."},{"address":"$0082DA","length":"5 bytes. Ends at $0082DE.","beginsAt":33498,"endsAt":33502,"type":"Jump (JML/JSL)","descriptio":"Dynamic Z Main Hijack 2.\n\nIs used for the main features of Dynamic Z since V3.5 (dynamic sprites, graphics change and palette changes).\n\nThis hijack points to a place is detected if the current escene is the bowser stage or reznor stage and happend after MarioGFXDMA Routine (the dma routine of mario, yoshi and podoboos)."},{"address":"$00835C","length":"1 byte","beginsAt":33628,"endsAt":33628,"type":"Code","descriptio":"Modified by the Super Status Bar patch by GreenHammerBro and Kaijyuu. This is the scanline at which the status bar IRQ will fire in mode 7 boss levels."},{"address":"$00838F","length":"2 bytes. Ends at $008390.","beginsAt":33679,"endsAt":33680,"type":"Code","descriptio":"Modified by Lui37's 'Move Layer 3 to Subscreen Fix' patch. [LDY #$1E]"},{"address":"$008394","length":"4 bytes. Ends at $008397.","beginsAt":33684,"endsAt":33687,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lui37's 'Move Layer 3 to Subscreen Fix' patch. It modifies IRQ. [JML]"},{"address":"$0083ED","length":"2 bytes. Ends at $0083EE.","beginsAt":33773,"endsAt":33774,"type":"Code","descriptio":"(BCC $04)\nModified by Minimalist Course Clear so it always branches, thus layers won't get disabled after you beat a boss."},{"address":"$008751","length":"4 bytes. Ends at $008754.","beginsAt":34641,"endsAt":34644,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic.\n\nLunar Magic's stripe image upload routine. It only gets executed during gamemodes 05, 07, 13 and 14."},{"address":"$008A4E","length":"5 bytes. Ends at $008A52.","beginsAt":35406,"endsAt":35410,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$008CCD","length":"4 bytes. Ends at $008CD0.","beginsAt":36045,"endsAt":36048,"type":"Data","descriptio":"Modified by Course Clear Coins, by MarioFanGamer.\n\nChanges the bonus star \"★x\" tiles on the status bar into blank tiles. Conditionally enabled."},{"address":"$008D8A","length":"5 bytes. Ends at $008D8E.","beginsAt":36234,"endsAt":36238,"type":"Jump (JML/JSL)","descriptio":"Modified by the Super Status Bar patch by GreenHammerBro and Kaijyuu. Jumps to a status bar initialization routine during level load."},{"address":"$008DB6","length":"2 bytes. Ends at $008DB7.","beginsAt":36278,"endsAt":36279,"type":"Code","descriptio":"Modified by the Super Status Bar patch by GreenHammerBro and Kaijyuu. This is an unconditional branch which skips over DrawStatusBar ($008DAC) and calls the main patch code at $008DE2."},{"address":"$008DE2","length":"5 bytes. Ends at $008DE6.","beginsAt":36322,"endsAt":36326,"type":"Jump (JML/JSL)","descriptio":"Modified by the Super Status Bar patch by GreenHammerBro and Kaijyuu. Calls the main patch code and returns from DrawStatusBar ($008DAC). Branched to from $008DB6.\n\nIn the vanilla game, this address is not aligned to an instruction and is instead in the middle of an LDA at $008DE1."},{"address":"$008E1A","length":"5 bytes. Ends at $008E1E.","beginsAt":36378,"endsAt":36382,"type":"Jump (JML/JSL)","descriptio":"Modified by Spin Jump to Super Jump, by HuFlungDu.\n\nJSL : NOP, hijacks a portion of the status bar routine to run spinjump-altering code every frame."},{"address":"$008E1F","length":"4 bytes. Ends at $008E22.","beginsAt":36383,"endsAt":36386,"type":"Jump (JML/JSL)","descriptio":"Modified by the Advanced version of the Super Status Bar patch by GreenHammerBro and Kaijyuu. Repoints the status bar update routine to freespace."},{"address":"$008E21","length":"4 bytes. Ends at $008E24.","beginsAt":36385,"endsAt":36388,"type":"Jump (JML/JSL)","descriptio":"Modified by Time Up Fix, by Alcaro.\n\nJML, prevents the timer frame counter from ticking down if set to a special \"death from time up\" value."},{"address":"$008E4F","length":"2 bytes. Ends at $008E50.","beginsAt":36431,"endsAt":36432,"type":"Code","descriptio":"Modified by Time Up Fix, by Alcaro.\n\nBNE $1E, skips past the \"check if timer ran out\" routine if the timer hundreds digit is nonzero."},{"address":"$008E5B","length":"5 bytes. Ends at $008E5F.","beginsAt":36443,"endsAt":36447,"type":"Jump (JML/JSL)","descriptio":"Modified by Speed up Music Fix. Jumps to the main code."},{"address":"$008E60","length":"15 bytes. Ends at $008E6E.","beginsAt":36448,"endsAt":36462,"type":"Jump (JML/JSL)","descriptio":"Modified by Time Up Fix, by Alcaro.\n\nSets the timer frame counter to a special \"death from time up\" value and calls the death routine if 1) the timer is now zero and 2) the timer was not zero initially. Note that this hijack uses a JSL to custom code that ends with a JML to the death routine; the corresponding RTL utilized is thus that of the death routine, at $00F628."},{"address":"$008EA4","length":"3 bytes. Ends at $008EA6.","beginsAt":36516,"endsAt":36518,"type":"Code","descriptio":"Modified by the Score+9 patch, by Alcaro.\n\nSBC #$4240, tweaks maximum score calculation to allow detection of \"over 9999990 points\" state."},{"address":"$008EB0","length":"2 bytes. Ends at $008EB1.","beginsAt":36528,"endsAt":36529,"type":"Code","descriptio":"Modified by the Score+9 patch, by Alcaro.\n\nLDA #$10, tweaks maximum score calculation to allow detection of \"over 9999990 points\" state."},{"address":"$008EC6","length":"5 bytes. Ends at $008ECA.","beginsAt":36550,"endsAt":36554,"type":"Jump (JML/JSL)","descriptio":"Modified by the Score+9 patch, by Alcaro.\n\nJSL : NOP, checks for \"Mario's score greater than 9999990 points\" state and switches the final digit to 9 if so."},{"address":"$008EF4","length":"5 bytes. Ends at $008EF8.","beginsAt":36596,"endsAt":36600,"type":"Jump (JML/JSL)","descriptio":"Modified by the Score+9 patch, by Alcaro.\n\nJSL : NOP, checks for \"Luigi's score greater than 9999990 points\" state and switches the final digit to 9 if so."},{"address":"$008F2F","length":"6 bytes. Ends at $008F34.","beginsAt":36655,"endsAt":36660,"type":"Jump (JML/JSL)","descriptio":"Modified by 100 Coin Prize, by wiiqwertyuiop.\n\nJSL : BRA $06, bypasses the default life-gain at 100 coins to implement custom rewards."},{"address":"$008F3B","length":"4 bytes. Ends at $008F3E.","beginsAt":36667,"endsAt":36670,"type":"Jump (JML/JSL)","descriptio":"Modified by 999 lives, handles the lives' code during the level (status bar included)."},{"address":"$008F49","length":"6 bytes. Ends at $008F4E.","beginsAt":36681,"endsAt":36686,"type":"Jump (JML/JSL)","descriptio":"Hijack for the left aligned life counter.\n\nModified also by the \"Press R to switch characters\" patch (4 bytes). It jumps to the main patch code."},{"address":"$008F5B","length":"6 bytes. Ends at $008F60.","beginsAt":36699,"endsAt":36704,"type":"Jump (JML/JSL)","descriptio":"Modified by Power Jumps, by HuFlungDu/Major Flare.\n\nJSL : NOP #2, hijacks a portion of the status bar routine to run gravity-altering code every frame."},{"address":"$008F70","length":"20 bytes. Ends at $008F83.","beginsAt":36720,"endsAt":36739,"type":"Code","descriptio":"Modified by Nimono's '3 digit coin counter' patch. Gets rid of part of the code that writes coins to the status bar. [BRA : NOP #18]"},{"address":"$008F73","length":"6 bytes. Ends at $008F78.","beginsAt":36723,"endsAt":36728,"type":"Jump (JML/JSL)","descriptio":"Hijack for the left aligned coin counter."},{"address":"$008F86","length":"3 bytes. Ends at $008F88.","beginsAt":36742,"endsAt":36744,"type":"Jump (JMP/JSR)","descriptio":"Modified by Course Clear Coins, by MarioFanGamer.\n\nJMP, bypasses the routine that draws the large bonus star numbers on the status bar. Conditionally enabled."},{"address":"$008FD8","length":"5 bytes. Ends at $008FDC.","beginsAt":36824,"endsAt":36828,"type":"Jump (JML/JSL)","descriptio":"Modified by Fire Power Timer patch. Handles fire power timer.\n\nModified also by Nimono's '3 digit coin counter' patch (5 bytes). Jumps to the main routine. [JSL : NOP]"},{"address":"$008FF9","length":"1 byte","beginsAt":36857,"endsAt":36857,"type":"Opcode","descriptio":"Used by the Advanced version of the Super Status Bar patch by GreenHammerBro and Kaijyuu. Not modified, but the patch expects an RTS opcode at this location."},{"address":"$00907A","length":"1 byte","beginsAt":36986,"endsAt":36986,"type":"Data","descriptio":"Modified by $02xx OAM Remapper. This is the table with the OAM index for the item box's sprite."},{"address":"$009095","length":"4 bytes. Ends at $009098.","beginsAt":37013,"endsAt":37016,"type":"Jump (JML/JSL)","descriptio":"Modified by Item Box GFX Fix, by Kenny3900.\n\nJML, bypasses the default \"draw item box GFX\" routine to utilize expanded properties table."},{"address":"$0090AE","length":"1 byte","beginsAt":37038,"endsAt":37038,"type":"Hex Edit","descriptio":"Modified by the Advanced version of the Super Status Bar patch by GreenHammerBro and Kaijyuu. This is the X position of the item in the item box. It's set according to the !ITEM_X define in the patch, whose default value is the vanilla X position."},{"address":"$0090B3","length":"1 byte","beginsAt":37043,"endsAt":37043,"type":"Hex Edit","descriptio":"Modified by the Advanced version of the Super Status Bar patch by GreenHammerBro and Kaijyuu. This is the Y position of the item in the item box. It's set according to the !ITEM_Y define in the patch, whose default value is the vanilla Y position."},{"address":"$0090B8","length":"1 byte","beginsAt":37048,"endsAt":37048,"type":"Hex Edit","descriptio":"Modified by the Advanced version of the Super Status Bar patch by GreenHammerBro and Kaijyuu. This is the YXPPCCCT property byte of the item in the item box. It's set according to the !ITEM_PRIORITY define in the patch, whose default value is the vanilla property byte."},{"address":"$0090CC","length":"1 byte","beginsAt":37068,"endsAt":37068,"type":"Hex Edit","descriptio":"Modified by the Advanced version of the Super Status Bar patch by GreenHammerBro and Kaijyuu. This is the size of the item in the item box. It's set according to the !ITEM_SIZE define in the patch, whose default value is the vanilla size."},{"address":"$0090D0","length":"1 byte","beginsAt":37072,"endsAt":37072,"type":"Opcode","descriptio":"Modified by the Advanced version of the Super Status Bar patch by GreenHammerBro and Kaijyuu. This is the return instruction of the status bar item drawing routine, which is converted to a JSL routine."},{"address":"$009216","length":"9 bytes. Ends at $00921E.","beginsAt":37398,"endsAt":37406,"type":"Jump (JML/JSL)","descriptio":"Modified by undefinied3's New Super Mario Bros Wii - Level Intro patch. It calls the main code through JSL, NOP once, then jumps to a conditional check through JML."},{"address":"$009322","length":"4 bytes. Ends at $009325.","beginsAt":37666,"endsAt":37669,"type":"Jump (JML/JSL)","descriptio":"UberASM tool and patch's Game Mode hijack."},{"address":"$00939A","length":"8 bytes. Ends at $0093A1.","beginsAt":37786,"endsAt":37793,"type":"Jump (JML/JSL)","descriptio":"First hijack of Roy & ghettoyouth's 'Nintendo Presents Logo Expansion' patch (LDY #$3C : LDX #$0F before the JML)."},{"address":"$0093B4","length":"12 bytes. Ends at $0093BF.","beginsAt":37812,"endsAt":37823,"type":"Code","descriptio":"Second hijack of Roy & ghettoyouth's 'Nintendo Presents Logo Expansion' patch. Handles an OAM loop before the JML."},{"address":"$0093D7","length":"9 bytes. Ends at $0093DF.","beginsAt":37847,"endsAt":37855,"type":"Jump (JML/JSL)","descriptio":"Modified by Nintendo Presents Custom Palette, by Roy.\n\nJSL : NOP #5, replaces the palette load and background color settings for the \"Nintendo Presents\" object.\n\nHijacked also by undefinied3's New Super Mario Bros Wii Level Intro. It calls a routine that determines when to upload custom palettes for the level intro preview. Two NOPs are written after the JSL. [JSL : NOP #2]"},{"address":"$0093F7","length":"5 bytes. Ends at $0093FB.","beginsAt":37879,"endsAt":37883,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$009471","length":"5 bytes. Ends at $009475.","beginsAt":38001,"endsAt":38005,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$0095B6","length":"3 bytes. Ends at $0095B8.","beginsAt":38326,"endsAt":38328,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$0095E9","length":"13 bytes. Ends at $0095F5.","beginsAt":38377,"endsAt":38389,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$0096A1","length":"4 bytes. Ends at $0096A4.","beginsAt":38561,"endsAt":38564,"type":"Jump (JML/JSL)","descriptio":"Modified by undefinied3's New Super Mario Bros Wii - Level Intro patch. Jumps to a Yoshi's house check to determine if the intro screen should appear or not."},{"address":"$0096BE","length":"4 bytes. Ends at $0096C1.","beginsAt":38590,"endsAt":38593,"type":"Jump (JML/JSL)","descriptio":"Modified by the Overworld Indicators patch. A hijack is placed here to clear the SRAM/BW-RAM entries the patch uses. [JML]"},{"address":"$0096E9","length":"6 bytes. Ends at $0096EE.","beginsAt":38633,"endsAt":38638,"type":"Jump (JML/JSL)","descriptio":"Hijacked by NSMB Star Coins: This one transfers the star coins into a local backup when loading a level (either from overworld or from a different level)"},{"address":"$009708","length":"4 bytes. Ends at $00970B.","beginsAt":38664,"endsAt":38667,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic. Points to the Horizontal Scroll Fix patch."},{"address":"$009712","length":"4 bytes. Ends at $009715.","beginsAt":38674,"endsAt":38677,"type":"Jump (JML/JSL)","descriptio":"Modified by undefinied3's New Super Mario Bros Wii - Level Intro patch. Calls a \"time waste\" loop that is used to keep the intro preview on screen for longer."},{"address":"$009712","length":"4 bytes. Ends at $009715.","beginsAt":38674,"endsAt":38677,"type":"Jump (JML/JSL)","descriptio":"Modified by Horizontal Scroll Fix v1.1. Jumps to the main code."},{"address":"$009B1C","length":"3 bytes. Ends at $009B1E.","beginsAt":39708,"endsAt":39710,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$009B43","length":"4 bytes. Ends at $009B46.","beginsAt":39747,"endsAt":39750,"type":"Jump (JML/JSL)","descriptio":"Modified by the Overworld Indicators patch. This hijacks the \"Erase Game\" routine to also clear the SRAM/BW-RAM addresses the patch uses. [JML]"},{"address":"$009BCC","length":"7 bytes. Ends at $009BD2.","beginsAt":39884,"endsAt":39890,"type":"Jump (JML/JSL)","descriptio":"Modified by the Overworld Indicators patch. Modifies a load of 010A and then hacks the save game routine to synchronize the values from SRAM to their backup. [JSL]"},{"address":"$009BD2","length":"4 bytes. Ends at $009BD5.","beginsAt":39890,"endsAt":39893,"type":"Jump (JML/JSL)","descriptio":"Modified by the BW-RAM Plus patch. Jumps to the save handling routine."},{"address":"$009C6F","length":"17 bytes. Ends at $009C7F.","beginsAt":40047,"endsAt":40063,"type":"Code","descriptio":"Modified by Lunar Magic.\n\nHandles the custom title screen movement."},{"address":"$009CD3","length":"3 bytes. Ends at $009CD5.","beginsAt":40147,"endsAt":40149,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$009CF5","length":"6 bytes. Ends at $009CFA.","beginsAt":40181,"endsAt":40186,"type":"Jump (JML/JSL)","descriptio":"Modified by the BW-RAM Plus patch. Jumps to the init save files routine."},{"address":"$009CFB","length":"4 bytes. Ends at $009CFE.","beginsAt":40187,"endsAt":40190,"type":"Jump (JML/JSL)","descriptio":"Modified by the Overworld Indicators patch. Modifies the load game routine to restore the SRAM backup. [JML]\n\nNOTE: this hijacks read3($009CF8)+33 instead if using Ragey's Overworld Expansion."},{"address":"$009D6C","length":"8 bytes. Ends at $009D73.","beginsAt":40300,"endsAt":40307,"type":"Code","descriptio":"Modified by Alcaro's '100 Exits' patch - it changes the amount of exits required for displaying the *96 at the title screen, as well as what tiles form the *96."},{"address":"$009D7C","length":"4 bytes. Ends at $009D7F.","beginsAt":40316,"endsAt":40319,"type":"Code","descriptio":"Modified by Alcaro's '100 Exits' patch - it remaps the position of ones digit of the number of exits gotten in the title screen stripe image."},{"address":"$009D86","length":"4 bytes. Ends at $009D89.","beginsAt":40326,"endsAt":40329,"type":"Jump (JML/JSL)","descriptio":"Main hijack of Alcaro's '100 Exits' patch. [JML]"},{"address":"$009D96","length":"2 bytes. Ends at $009D97.","beginsAt":40342,"endsAt":40343,"type":"Code","descriptio":"Modified by Alcaro's '100 Exits' patch - it changes the amount of blank tiles to be written to the title screen stripe image."},{"address":"$009D9B","length":"4 bytes. Ends at $009D9E.","beginsAt":40347,"endsAt":40350,"type":"Code","descriptio":"Modified by Alcaro's '100 Exits' patch - it remaps the position of a blank tile used in the title screen stripe image."},{"address":"$009F19","length":"4 bytes. Ends at $009F1C.","beginsAt":40729,"endsAt":40732,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$00A01F","length":"6 bytes. Ends at $00A024.","beginsAt":40991,"endsAt":40996,"type":"Code","descriptio":"Modified by Lunar Magic.\n\nJumps to a routine that handles Layer 3 movement."},{"address":"$00A045","length":"4 bytes. Ends at $00A048.","beginsAt":41029,"endsAt":41032,"type":"Jump (JML/JSL)","descriptio":"Modified by the Per-level Layer 3 Tides Act-like Settings patch. Jumps to the main code."},{"address":"$00A0A0","length":"3 bytes. Ends at $00A0A2.","beginsAt":41120,"endsAt":41122,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00A0BF","length":"4 bytes. Ends at $00A0C2.","beginsAt":41151,"endsAt":41154,"type":"Jump (JML/JSL)","descriptio":"Modified by the Free $7F0000 patch. Main hijack of the patch; forces event restore when beating a level in game mode 0C. [JML]"},{"address":"$00A140","length":"4 bytes. Ends at $00A143.","beginsAt":41280,"endsAt":41283,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$00A149","length":"4 bytes. Ends at $00A14C.","beginsAt":41289,"endsAt":41292,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00A153","length":"4 bytes. Ends at $00A156.","beginsAt":41299,"endsAt":41302,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$00A1C7","length":"4 bytes. Ends at $00A1CA.","beginsAt":41415,"endsAt":41418,"type":"Jump (JML/JSL)","descriptio":"Hijacked by NSMB Star Coins: This one loads the current translevel number and stores the current level's star coins into the star coin counter."},{"address":"$00A1DA","length":"10 bytes. Ends at $00A1E3.","beginsAt":41434,"endsAt":41443,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00A21B","length":"4 bytes. Ends at $00A21E.","beginsAt":41499,"endsAt":41502,"type":"Jump (JML/JSL)","descriptio":"Modified by Running SFX patch. Jumps to the main code."},{"address":"$00A267","length":"1 byte","beginsAt":41575,"endsAt":41575,"type":"Opcode","descriptio":"Modified by Lunar Magic."},{"address":"$00A269","length":"11 bytes. Ends at $00A273.","beginsAt":41577,"endsAt":41587,"type":"Jump (JML/JSL)","descriptio":"Hijacked by NSMB Star Coins: This one saves all collected coins through Start+Select."},{"address":"$00A284","length":"4 bytes. Ends at $00A287.","beginsAt":41604,"endsAt":41607,"type":"Jump (JML/JSL)","descriptio":"Modified by Start+Select SFX, jumps to main code (plays SFX, changes game mode and returns)."},{"address":"$00A299","length":"4 bytes. Ends at $00A29C.","beginsAt":41625,"endsAt":41628,"type":"Jump (JML/JSL)","descriptio":"Hijacked by No running patch. Adds speed limit."},{"address":"$00A2A1","length":"4 bytes. Ends at $00A2A4.","beginsAt":41633,"endsAt":41636,"type":"Jump (JML/JSL)","descriptio":"Modified by the Wall Kick patch, by MarioE.\n\nJSL, jumps to the main patch code."},{"address":"$00A2A5","length":"4 bytes. Ends at $00A2A8.","beginsAt":41637,"endsAt":41640,"type":"Jump (JML/JSL)","descriptio":"The patch known as \"Allow mario to pass his gas\" made by SMWCentral user shao, has it's main and only hijack spot here. This hijack installs the function that the patch realizes, which is allow the player, whoever it might be, to realize the process of expelling a flatulence. [JSL]"},{"address":"$00A2A6","length":"3 bytes. Ends at $00A2A8.","beginsAt":41638,"endsAt":41640,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00A2AF","length":"38 bytes. Ends at $00A2D4.","beginsAt":41647,"endsAt":41684,"type":"Code","descriptio":"Modified by Lunar Magic ($00A2AF-$00A2D4 modified, on version 3.00 when adjusting the level dimensions via “Change Properties in Header”).\n\nThis is originally the code that displaces layer 1 during a shaking effect when $1887 is a nonzero value. It is modified for how layer 1 tiles are loaded.\n\n"},{"address":"$00A2D8","length":"4 bytes. Ends at $00A2DB.","beginsAt":41688,"endsAt":41691,"type":"Jump (JML/JSL)","descriptio":"Modified by the (Specter of Torment-Styled) Wallclimb and Walljump patch, by Erik/Maarfy.\n\nJSL, overwrites the player graphics drawing routine to run the main code every frame. Note that the code ends with a JML to said routine ($00E2BD), and the latter's RTL is ultimately used to return."},{"address":"$00A300","length":"2 bytes. Ends at $00A301.","beginsAt":41728,"endsAt":41729,"type":"Code","descriptio":"Dynamic Z hijack used for features related to Mario graphics change or palette change, Since V3.5.\n\nOn the original game is used for the dma routine for mario, yoshi and podoboos, but when you use Dynamic Z V3.5 or more with mario features activated, this is only a RTS (basically do nothing).\n"},{"address":"$00A300","length":"4 bytes. Ends at $00A303.","beginsAt":41728,"endsAt":41731,"type":"Jump (JML/JSL)","descriptio":"Mario's 8x8 Tiles DMA-er hijack.\n\nUploads Mario's palette, Mario, Yoshi and Podoboo graphics. Basically a rewrite of the original $00A300 plus the upload of the 8x8 tiles to VRAM."},{"address":"$00A300","length":"4 bytes. Ends at $00A303.","beginsAt":41728,"endsAt":41731,"type":"Jump (JML/JSL)","descriptio":"32x32 Character Tilemap Kit hijack.\n\nUploads Mario's palette, Mario, Yoshi and Podoboo graphics. Basically a rewrite of the original $00A300, except that this uploads a 32x32 Mario GFX instead of 16x32."},{"address":"$00A31A","length":"4 bytes. Ends at $00A31D.","beginsAt":41754,"endsAt":41757,"type":"Jump (JML/JSL)","descriptio":"Modified by Custom Mario Palettes. Jumps to a routine that makes the bank used in a DMA transfer to depend on a FreeRAM."},{"address":"$00A390","length":"5 bytes. Ends at $00A394.","beginsAt":41872,"endsAt":41876,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00A418","length":"4 bytes. Ends at $00A41B.","beginsAt":42008,"endsAt":42011,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic. Obsolete in LM 1.70+"},{"address":"$00A439","length":"1 byte","beginsAt":42041,"endsAt":42041,"type":"Opcode","descriptio":"Modified by Lunar Magic."},{"address":"$00A4D1","length":"3 bytes. Ends at $00A4D3.","beginsAt":42193,"endsAt":42195,"type":"Jump (JMP/JSR)","descriptio":"Hijacked by the Fixed Color Data NMI Optimizer patch to change the destination of the routine to store the background color in $2132."},{"address":"$00A4E3","length":"5 bytes. Ends at $00A4E7.","beginsAt":42211,"endsAt":42215,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00A4EB","length":"2 bytes. Ends at $00A4EC.","beginsAt":42219,"endsAt":42220,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00A5A2","length":"4 bytes. Ends at $00A5A5.","beginsAt":42402,"endsAt":42405,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$00A5BF","length":"4 bytes. Ends at $00A5C2.","beginsAt":42431,"endsAt":42434,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic.\n\nLoads the custom palette of a level depending on the value of $FE. That RAM address is immediately cleared after that, possibly to avoid a custom palette from being uploaded twice."},{"address":"$00A5E1","length":"6 bytes. Ends at $00A5E6.","beginsAt":42465,"endsAt":42470,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00A5FE","length":"3 bytes. Ends at $00A600.","beginsAt":42494,"endsAt":42496,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00A6B8","length":"4 bytes. Ends at $00A6BB.","beginsAt":42680,"endsAt":42683,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$00A6CC","length":"4 bytes. Ends at $00A6CF.","beginsAt":42700,"endsAt":42703,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$00A873","length":"4 bytes. Ends at $00A876.","beginsAt":43123,"endsAt":43126,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00AA06","length":"2 bytes. Ends at $00AA07.","beginsAt":43526,"endsAt":43527,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00AA47","length":"2 bytes. Ends at $00AA48.","beginsAt":43591,"endsAt":43592,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00AA50","length":"5 bytes. Ends at $00AA54.","beginsAt":43600,"endsAt":43604,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00AA6B","length":"4 bytes. Ends at $00AA6E.","beginsAt":43627,"endsAt":43630,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$00AA74","length":"2 bytes. Ends at $00AA75.","beginsAt":43636,"endsAt":43637,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00AA8D","length":"1 byte","beginsAt":43661,"endsAt":43661,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00AA91","length":"1 byte","beginsAt":43665,"endsAt":43665,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00AACD","length":"21 bytes. Ends at $00AAE1.","beginsAt":43725,"endsAt":43745,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00AB02","length":"64 bytes. Ends at $00AB41.","beginsAt":43778,"endsAt":43841,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00AD2B","length":"2 bytes. Ends at $00AD2C.","beginsAt":44331,"endsAt":44332,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00AD32","length":"5 bytes. Ends at $00AD36.","beginsAt":44338,"endsAt":44342,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00AE41","length":"26 bytes. Ends at $00AE5A.","beginsAt":44609,"endsAt":44634,"type":"Code","descriptio":"The Fixed Color Data NMI Optimizer patch entirely rewrites this routine, which stores the background color to $2132."},{"address":"$00AF2D","length":"63 bytes. Ends at $00AF6B.","beginsAt":44845,"endsAt":44907,"type":"Code","descriptio":"Modified by Minimalist Course Clear.\n\nFrom 00AF2D to 00AF34, if !enable_scorecard is clear, then it will skip SMW's card tilemap drawing code. Else SMW's code is written. The rest of code is SMW's code ending early so it gives freespace for fixing a bug related to Reznors and hijack the \"after peace pose\" routine."},{"address":"$00AF4C","length":"1 byte","beginsAt":44876,"endsAt":44876,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00AF4F","length":"1 byte","beginsAt":44879,"endsAt":44879,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00AF6C","length":"1 byte","beginsAt":44908,"endsAt":44908,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00AF71","length":"6 bytes. Ends at $00AF76.","beginsAt":44913,"endsAt":44918,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00B048","length":"4 bytes. Ends at $00B04B.","beginsAt":45128,"endsAt":45131,"type":"Jump (JML/JSL)","descriptio":"Modified by Custom Mario Palettes. Saves the Free RAM used into a scratch RAM."},{"address":"$00B88B","length":"2 bytes. Ends at $00B88C.","beginsAt":47243,"endsAt":47244,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00B890","length":"1 byte","beginsAt":47248,"endsAt":47248,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00B893","length":"22 bytes. Ends at $00B8A8.","beginsAt":47251,"endsAt":47272,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00B8D8","length":"2 bytes. Ends at $00B8D9.","beginsAt":47320,"endsAt":47321,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00B8DE","length":"5 bytes. Ends at $00B8E2.","beginsAt":47326,"endsAt":47330,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00B8E3","length":"5 bytes. Ends at $00B8E7.","beginsAt":47331,"endsAt":47335,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00BDA8","length":"256 bytes. Ends at $00BEA7.","beginsAt":48552,"endsAt":48807,"type":"Table","descriptio":"Modified by Lunar Magic. Level mode indexing tables for Layer 1 low byte, Layer 2 low byte, Layer 1 high byte and Layer 2 high byte, each entry 2 bytes big, total 32 entries per item.\n\nNot all of the table is modified, but all of the horizontal level ones are remapped to the RAM addresses, to make it possible to dynamically modify the table depending on the level height. See implementation for full details."},{"address":"$00BEE8","length":"4 bytes. Ends at $00BEEB.","beginsAt":48872,"endsAt":48875,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Adds a bypass for always checking Y against #$0200 instead of $13D7-8 for vertical levels."},{"address":"$00BEEC","length":"3 bytes. Ends at $00BEEE.","beginsAt":48876,"endsAt":48878,"type":"Opcode","descriptio":"Modified by Lunar Magic. Changes CPY #$0200 to CPY $13D7, where $13D7-8 is the current level height in pixels."},{"address":"$00BF35","length":"2 bytes. Ends at $00BF36.","beginsAt":48949,"endsAt":48950,"type":"Opcode","descriptio":"Modified by Lunar Magic. Changes \"BEQ CODE_00BF41\" to \"BEQ CODE_00BF3F\""},{"address":"$00BF3C","length":"13 bytes. Ends at $00BF48.","beginsAt":48956,"endsAt":48968,"type":"Code","descriptio":"Modified by Lunar Magic. Adjusts the VRAM offset calculation for working with dynamic levels as well."},{"address":"$00BF81","length":"26 bytes. Ends at $00BF9A.","beginsAt":49025,"endsAt":49050,"type":"Code","descriptio":"Modified by Lunar Magic. This section is rewritten so the stripe image uploader always checks both tilemap directions instead of only the x-axis for horizontal levels."},{"address":"$00C058","length":"5 bytes. Ends at $00C05C.","beginsAt":49240,"endsAt":49244,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00C07B","length":"3 bytes. Ends at $00C07D.","beginsAt":49275,"endsAt":49277,"type":"Opcode","descriptio":"Modified by Lunar Magic. Changes \"AND.W #$01F0\" to \"AND.W #$3FF0\"."},{"address":"$00C097","length":"1 byte","beginsAt":49303,"endsAt":49303,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00C0C8","length":"3 bytes. Ends at $00C0CA.","beginsAt":49352,"endsAt":49354,"type":"Opcode","descriptio":"Modified by Lunar Magic. Changes \"AND.W #$01F0\" to \"AND.W #$3FF0\"."},{"address":"$00C0E7","length":"1 byte","beginsAt":49383,"endsAt":49383,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00C116","length":"2 bytes. Ends at $00C117.","beginsAt":49430,"endsAt":49431,"type":"Opcode","descriptio":"Modified by Lunar Magic. Changes \"BEQ CODE_00C13E\" to \"BEQ CODE_00C127\", for checking both tilemap directions instead of just horizontal when deciding or not to upload a tile to VRAM after changing a map16 tile on horizontal levels."},{"address":"$00C122","length":"2 bytes. Ends at $00C123.","beginsAt":49442,"endsAt":49443,"type":"Opcode","descriptio":"Modified by Lunar Magic. Changes \"BCS CODE_00C13E\" to \"BCS CODE_00C127\", for checking both tilemap directions instead of just horizontal when deciding or not to upload a tile to VRAM after changing a map16 tile on horizontal levels."},{"address":"$00C17A","length":"5 bytes. Ends at $00C17E.","beginsAt":49530,"endsAt":49534,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00C1B3","length":"3 bytes. Ends at $00C1B5.","beginsAt":49587,"endsAt":49589,"type":"Opcode","descriptio":"Modified by Lunar Magic. Changes \"AND.W #$01F0\" to \"AND.W #$3FF0\"."},{"address":"$00C25C","length":"5 bytes. Ends at $00C260.","beginsAt":49756,"endsAt":49760,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00C3D5","length":"3 bytes. Ends at $00C3D7.","beginsAt":50133,"endsAt":50135,"type":"Opcode","descriptio":"Modified by Lunar Magic. Changes \"AND.W #$01F0\" to \"AND.W #$3FF0\"."},{"address":"$00C4AE","length":"4 bytes. Ends at $00C4B1.","beginsAt":50350,"endsAt":50353,"type":"Jump (JML/JSL)","descriptio":"Hijacked by NSMB Star Coins: This one saves all collected coins through beating a level with a key hole."},{"address":"$00C4F8","length":"5 bytes. Ends at $00C4FC.","beginsAt":50424,"endsAt":50428,"type":"Jump (JML/JSL)","descriptio":"Modified by $13FB Game Crash Fix. Jumps to the main code."},{"address":"$00C599","length":"2 bytes. Ends at $00C59A.","beginsAt":50585,"endsAt":50586,"type":"16-bit Pointer","descriptio":"Modified by the (Specter of Torment-Styled) Wallclimb and Walljump patch, by Erik/Maarfy.\n\ndw $CC86, repoints the start of animation state $00 ($71 = #$00) to part of a debug routine in order to copy the contents of RAM address $77 before it is updated.\n\nThe UberASM version of this patch includes a helper patch that applies this exact code."},{"address":"$00C944","length":"6 bytes. Ends at $00C949.","beginsAt":51524,"endsAt":51529,"type":"Code","descriptio":"Modified by Minimalist Course Clear.\n\nHandles showing (or not) the card tilemap drawing and freezing sprites, all after beating a boss."},{"address":"$00C977","length":"1 byte","beginsAt":51575,"endsAt":51575,"type":"Opcode","descriptio":"Modified by Lunar Magic.\n\nLunar Magic 2.53+ changes this to 0x38 in non-SA-1 ROMs to fix the timing on the victory animation during the goal walk so it matches up with the original goal music."},{"address":"$00C9B7","length":"5 bytes. Ends at $00C9BB.","beginsAt":51639,"endsAt":51643,"type":"Jump (JMP/JSR)","descriptio":"Modified by Minimalist Course Clear. This jump handles the circle effect after the peace sign pose."},{"address":"$00C9C2","length":"3 bytes. Ends at $00C9C4.","beginsAt":51650,"endsAt":51652,"type":"Opcode","descriptio":"Modified by Minimalist Course Clear.\n\nIf !enable_circle is set, it calls the \"Level Ending Circle\" routine. Else it just decrements the timer after going to the overworld."},{"address":"$00C9D7","length":"1 byte","beginsAt":51671,"endsAt":51671,"type":"Opcode","descriptio":"Modified by Lunar Magic."},{"address":"$00C9DF","length":"2 bytes. Ends at $00C9E0.","beginsAt":51679,"endsAt":51680,"type":"Opcode","descriptio":"Modified by Minimalist Course Clear to make the screen after beating a level fade out, THEN load overworld."},{"address":"$00C9F8","length":"6 bytes. Ends at $00C9FD.","beginsAt":51704,"endsAt":51709,"type":"Code","descriptio":"Modified by Minimalist Course Clear. Skips handling the mosaic/brightness settings when beating a level."},{"address":"$00CA0C","length":"1 byte","beginsAt":51724,"endsAt":51724,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00CA13","length":"1 byte","beginsAt":51731,"endsAt":51731,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00CC86","length":"19 bytes. Ends at $00CC98.","beginsAt":52358,"endsAt":52376,"type":"Code","descriptio":"Modified by the (Specter of Torment-Styled) Wallclimb and Walljump patch, by Erik/Maarfy.\n\nPart of the free-roaming debug routine. Overwritten in order to copy the contents of RAM address $77 before it is updated. See details for code. Note that 19 bytes is the maximum size - !RAM_77BU is 16-bit by default, and size becomes 17 bytes if changed to 8-bit (long addresses not supported).\n\nThe UberASM version of this patch includes a helper patch that applies this exact code."},{"address":"$00CFCD","length":"5 bytes. Ends at $00CFD1.","beginsAt":53197,"endsAt":53201,"type":"Jump (JML/JSL)","descriptio":"Modified by Disable Looking Up Via RAM Flag, by GreenHammerBro.\n\nJSL : NOP, jumps to code to check a custom RAM flag to variably disable the player's ability to look up."},{"address":"$00D058","length":"4 bytes. Ends at $00D05B.","beginsAt":53336,"endsAt":53339,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. Fixes cape interaction when in reversed gravity mode."},{"address":"$00D062","length":"4 bytes. Ends at $00D065.","beginsAt":53346,"endsAt":53349,"type":"Jump (JML/JSL)","descriptio":"Hijacked by the SMB2 Holding patch: This one disables shooting fireballs and spinning the cape when carrying a sprite."},{"address":"$00D08C","length":"4 bytes. Ends at $00D08F.","beginsAt":53388,"endsAt":53391,"type":"Jump (JML/JSL)","descriptio":"Modified by Yoshi Fireball Ability Patch. It jumps to the main function of the patch."},{"address":"$00D0E6","length":"5 bytes. Ends at $00D0EA.","beginsAt":53478,"endsAt":53482,"type":"Jump (JML/JSL)","descriptio":"Modified by Time Up Fix, by Alcaro.\n\nJSL : NOP, hijacks the end of the non-game-over death sequence to bypass the \"TIME UP\" message unless the timer frame counter is set to a special \"death from time up\" value."},{"address":"$00D2B2","length":"4 bytes. Ends at $00D2B5.","beginsAt":53938,"endsAt":53941,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$00D600","length":"4 bytes. Ends at $00D603.","beginsAt":54784,"endsAt":54787,"type":"Jump (JML/JSL)","descriptio":"Modified by Disable Ducking, by Iceguy/Meirdent.\n\nJSL, modifies the normal check for holding Down to duck to either factor in powerup status, or always disregard the ducking input."},{"address":"$00D630","length":"4 bytes. Ends at $00D633.","beginsAt":54832,"endsAt":54835,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Super Mario 64 Long & U-Jump patch. Adds Long and U-Jump abilities."},{"address":"$00D663","length":"5 bytes. Ends at $00D667.","beginsAt":54883,"endsAt":54887,"type":"Jump (JML/JSL)","descriptio":"Modified by GreenHammerBro's 'Player X Speed Fix' patch. It hijacks the jump speed table depending on the player's X speed. [JML : NOP]"},{"address":"$00D663","length":"5 bytes. Ends at $00D667.","beginsAt":54883,"endsAt":54887,"type":"Jump (JML/JSL)","descriptio":"Modified by Expensive Jump. Jumps to the main code."},{"address":"$00D706","length":"5 bytes. Ends at $00D70A.","beginsAt":55046,"endsAt":55050,"type":"Jump (JML/JSL)","descriptio":"Modified by Turning SFX. Plays sound effect when turning."},{"address":"$00D742","length":"4 bytes. Ends at $00D745.","beginsAt":55106,"endsAt":55109,"type":"Jump (JML/JSL)","descriptio":"Modified by GreenHammerBro's 'Player X Speed Fix' patch. Jumps to the main acceleration fix routine. [JML]"},{"address":"$00D904","length":"4 bytes. Ends at $00D907.","beginsAt":55556,"endsAt":55559,"type":"Jump (JML/JSL)","descriptio":"Modified by the Limited Yoshi Flying patch, by SkywinDragoon.\n\nJML, hijacks a portion of the player gravity routine to disable Yoshi flight after a custom counter has reached a certain limit."},{"address":"$00DA33","length":"4 bytes. Ends at $00DA36.","beginsAt":55859,"endsAt":55862,"type":"Jump (JML/JSL)","descriptio":"Modified by Disable Ducking, by Iceguy/Meirdent.\n\nJSL, modifies the underwater check for holding Down to duck to either factor in powerup status, or always disregard the ducking input."},{"address":"$00DAA9","length":"5 bytes. Ends at $00DAAD.","beginsAt":55977,"endsAt":55981,"type":"Jump (JML/JSL)","descriptio":"Modified by Spike Swim Fix, by yoshifanatic. Jumps to the hurt-fix routine when big Mario swims down to a muncher/spike."},{"address":"$00DC45","length":"5 bytes. Ends at $00DC49.","beginsAt":56389,"endsAt":56393,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. Inverts the player's Y speed."},{"address":"$00E31B","length":"4 bytes. Ends at $00E31E.","beginsAt":58139,"endsAt":58142,"type":"Jump (JML/JSL)","descriptio":"Modified by Custom Mario Palettes, handles the patch's main functions."},{"address":"$00E346","length":"6 bytes. Ends at $00E34B.","beginsAt":58182,"endsAt":58187,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. Seems to fix an interaction bug."},{"address":"$00E3CD","length":"5 bytes. Ends at $00E3D1.","beginsAt":58317,"endsAt":58321,"type":"Jump (JML/JSL)","descriptio":"Modified by Invincible Mario Palette Changer. Jumps to the main code."},{"address":"$00E46D","length":"4 bytes. Ends at $00E470.","beginsAt":58477,"endsAt":58480,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. Controls how the player's graphics should flip."},{"address":"$00E9F6","length":"5 bytes. Ends at $00E9FA.","beginsAt":59894,"endsAt":59898,"type":"Jump (JML/JSL)","descriptio":"Modified bt Walljump/Note Block Glitch Fix. Avoids clipping glitches at both sides of the screen/level's solid limits."},{"address":"$00EA16","length":"12 bytes. Ends at $00EA21.","beginsAt":59926,"endsAt":59937,"type":"Code","descriptio":"Modified by Walljump/Note Block Glitch Fix. It NOPs out the entire SMW anti-clipping code to run the patch's one later."},{"address":"$00EC10","length":"5 bytes. Ends at $00EC14.","beginsAt":60432,"endsAt":60436,"type":"Jump (JML/JSL)","descriptio":"Hijacked by NSMB Star Coins: This tells the game that we're entering a level from a sublevel, not from the overworld (doors)."},{"address":"$00EC7E","length":"5 bytes. Ends at $00EC82.","beginsAt":60542,"endsAt":60546,"type":"Jump (JML/JSL)","descriptio":"Modified by Walljump/Note Block Glitch Fix. Runs the patch's anti-clipping routine (fixes wall-jumping/clipping with note blocks included)."},{"address":"$00ED14","length":"4 bytes. Ends at $00ED17.","beginsAt":60692,"endsAt":60695,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. Fixes interaction with ceilings when in reversed gravity mode."},{"address":"$00ED1C","length":"8 bytes. Ends at $00ED23.","beginsAt":60700,"endsAt":60707,"type":"Jump (JML/JSL)","descriptio":"Modified by Walljump/Note Block Glitch Fix. Runs a clipping fix for Super Mario (big Mario) getting inside one-block high spaces."},{"address":"$00EE17","length":"4 bytes. Ends at $00EE1A.","beginsAt":60951,"endsAt":60954,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. It's a check placed before the interaction with ground fix."},{"address":"$00EED4","length":"5 bytes. Ends at $00EED8.","beginsAt":61140,"endsAt":61144,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. Fixes the interaction with ground when in reversed gravity mode."},{"address":"$00EF60","length":"2 bytes. Ends at $00EF61.","beginsAt":61280,"endsAt":61281,"type":"Hex Edit","descriptio":"Modified by SFX on Landing. Makes it so falling speed will trigger landing sound."},{"address":"$00EF6B","length":"4 bytes. Ends at $00EF6E.","beginsAt":61291,"endsAt":61294,"type":"Jump (JML/JSL)","descriptio":"Modified by Sound on Landing. Check for falling speed to play sound effect on landing."},{"address":"$00F18D","length":"6 bytes. Ends at $00F192.","beginsAt":61837,"endsAt":61842,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. Fixes bounce sprites."},{"address":"$00F2DB","length":"2 bytes. Ends at $00F2DC.","beginsAt":62171,"endsAt":62172,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00F2E8","length":"6 bytes. Ends at $00F2ED.","beginsAt":62184,"endsAt":62189,"type":"Jump (JML/JSL)","descriptio":"Hijacked by NSMB Star Coins: This one transfers the currently collected coins into the midway point buffer."},{"address":"$00F332","length":"53 bytes. Ends at $00F366.","beginsAt":62258,"endsAt":62310,"type":"Code","descriptio":"Modified by Yoshi Coin Fix, by imamelia.\n\nRestructures the Yoshi coin collection routine. Ends with a JML to custom code."},{"address":"$00F33F","length":"7 bytes. Ends at $00F345.","beginsAt":62271,"endsAt":62277,"type":"Jump (JML/JSL)","descriptio":"Modified by Yoshi Coin Score Fix. Swaps JSL and INC's places and turns INC $1422 to LDA $1420, so it's used for check in JSL routine."},{"address":"$00F358","length":"5 bytes. Ends at $00F35C.","beginsAt":62296,"endsAt":62300,"type":"Jump (JML/JSL)","descriptio":"Modified by the Dragon/Yoshi Coin Explanation Message patch, by Telinc1.\n\nJSL : NOP, hijacks playing the Yoshi coin collection sound effect to add message display functionality."},{"address":"$00F367","length":"4 bytes. Ends at $00F36A.","beginsAt":62311,"endsAt":62314,"type":"Jump (JML/JSL)","descriptio":"Modified by the \"Beat level by collecting all of the coins\" patch. Checks how many coins have been collected when a coin is picked up."},{"address":"$00F377","length":"15 bytes. Ends at $00F385.","beginsAt":62327,"endsAt":62341,"type":"Code","descriptio":"Modified by Yoshi Coin Score Fix. Replaces original Yoshi Coin's score giving routine, so it now checks number of yoshi coins being collected before increasing score value and necessary addresses."},{"address":"$00F439","length":"5 bytes. Ends at $00F43D.","beginsAt":62521,"endsAt":62525,"type":"Jump (JML/JSL)","descriptio":"Hijacked by NSMB Star Coins: This tells the game that we're entering a level from a sublevel, not from the overworld (pipes)."},{"address":"$00F44D","length":"4 bytes. Ends at $00F450.","beginsAt":62541,"endsAt":62544,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. Fixes interaction points for reversed gravity mode."},{"address":"$00F478","length":"3 bytes. Ends at $00F47A.","beginsAt":62584,"endsAt":62586,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps CMP.W #$01B0 to CMP.W $13D7."},{"address":"$00F47E","length":"1 byte","beginsAt":62590,"endsAt":62590,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00F488","length":"1 byte","beginsAt":62600,"endsAt":62600,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00F492","length":"4 bytes. Ends at $00F495.","beginsAt":62610,"endsAt":62613,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps ADC.L $00BA60,X to ADC.L $000CB6,X."},{"address":"$00F49A","length":"4 bytes. Ends at $00F49D.","beginsAt":62618,"endsAt":62621,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps ADC.L $00BA9C,X to ADC.L $000CD6,X."},{"address":"$00F4A0","length":"3 bytes. Ends at $00F4A2.","beginsAt":62624,"endsAt":62626,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00F4DE","length":"3 bytes. Ends at $00F4E0.","beginsAt":62686,"endsAt":62688,"type":"Miscellaneous","descriptio":"Modified by Lunar Magic.\n\nA modification of a JSL's address to jump to $06f660 (was originally JSL $00F545) handle custom map 16 for Mario's interaction with the blocks."},{"address":"$00F4EB","length":"1 byte","beginsAt":62699,"endsAt":62699,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$00F4F3","length":"3 bytes. Ends at $00F4F5.","beginsAt":62707,"endsAt":62709,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps CMP.W #$01B0 to CMP.W $13D7."},{"address":"$00F50D","length":"4 bytes. Ends at $00F510.","beginsAt":62733,"endsAt":62736,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps ADC.L $00BA70,X to ADC.L $000CC6,X."},{"address":"$00F515","length":"4 bytes. Ends at $00F518.","beginsAt":62741,"endsAt":62744,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps ADC.L $00BAAC,X to ADC.L $000CE6,X."},{"address":"$00F5A3","length":"7 bytes. Ends at $00F5A9.","beginsAt":62883,"endsAt":62889,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. Moves the death pit to above when in reverse gravity mode."},{"address":"$00F5C6","length":"6 bytes. Ends at $00F5CB.","beginsAt":62918,"endsAt":62923,"type":"Jump (JML/JSL)","descriptio":"Modified by Reset Coins on Hurt, by MovementThruPortals.\n\nJSL : BRA $00, modifies the hurt routine to reset current player coin count."},{"address":"$00F5D5","length":"4 bytes. Ends at $00F5D8.","beginsAt":62933,"endsAt":62936,"type":"Jump (JML/JSL)","descriptio":"Modified by Invincible Mario with KnockBack, by Kevinskie555.\n\nJML, modifies the hurt routine to avoid setting a powerdown state (or death if small) while giving speed to the player."},{"address":"$00F5F3","length":"5 bytes. Ends at $00F5F7.","beginsAt":62963,"endsAt":62967,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Better Powerdown to change the powerdown animation.\n(It also puts an RTL behind the JSL, therefore turning the rest of the hurt code obsolete.)"},{"address":"$00F60A","length":"5 bytes. Ends at $00F60E.","beginsAt":62986,"endsAt":62990,"type":"Jump (JML/JSL)","descriptio":"Modified by Alternate Death Music for Luigi patch. Jumps to the main code in order to decide which death music will be played, according to the active player."},{"address":"$00F614","length":"4 bytes. Ends at $00F617.","beginsAt":62996,"endsAt":62999,"type":"Jump (JML/JSL)","descriptio":"Hijacked by NSMB Star Coins: Mario loses all collected star coins unless they're backed up."},{"address":"$00F622","length":"4 bytes. Ends at $00F625.","beginsAt":63010,"endsAt":63013,"type":"Jump (JML/JSL)","descriptio":"Modified by Reset Coins on Hurt, by MovementThruPortals.\n\nJML, modifies the death routine to reset current player coin count."},{"address":"$00F636","length":"6 bytes. Ends at $00F63B.","beginsAt":63030,"endsAt":63035,"type":"Jump (JML/JSL)","descriptio":"Dynamic Z hijack, used only if features related to mario gfx and palettes changes is activate.\n\nOn the original game this section of the code is used to know the current graphic of yoshi or podoboos (basically select graphic pointers), on dynamic z, its change some things of the code to use custom graphic pointers (basically change the Bank and the start source position of the pointers)."},{"address":"$00F6E4","length":"4 bytes. Ends at $00F6E7.","beginsAt":63204,"endsAt":63207,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic.\n\nThis is the VRAM optimization patch."},{"address":"$00F70D","length":"4 bytes. Ends at $00F710.","beginsAt":63245,"endsAt":63248,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic (JML). Adjusts the maximum vertical scroll for horizontal levels depending on the level height and the “allow viewing bottom tiles” setting."},{"address":"$00F77B","length":"4 bytes. Ends at $00F77E.","beginsAt":63355,"endsAt":63358,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$00F79D","length":"4 bytes. Ends at $00F7A0.","beginsAt":63389,"endsAt":63392,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$00F7E8","length":"4 bytes. Ends at $00F7EB.","beginsAt":63464,"endsAt":63467,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$00F7FC","length":"175 bytes. Ends at $00F8AA.","beginsAt":63484,"endsAt":63658,"type":"Jump (JML/JSL)","descriptio":"Modified by Vertical Scroll Reprogrammed. Jumps to main code, and the rest is filled with NOPs."},{"address":"$00F871","length":"4 bytes. Ends at $00F874.","beginsAt":63601,"endsAt":63604,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$00F875","length":"4 bytes. Ends at $00F878.","beginsAt":63605,"endsAt":63608,"type":"Jump (JML/JSL)","descriptio":"Modified by the (Specter of Torment-Styled) Wallclimb and Walljump patch, by Erik/Maarfy.\n\nJML, hijacks a portion of the screen scrolling routine to add \"is wall climbing\" as a screen scrolling trigger.\n\nThe UberASM version of this patch includes a helper patch that applies this exact code."},{"address":"$00F9F5","length":"15 bytes. Ends at $00FA03.","beginsAt":63989,"endsAt":64003,"type":"Code","descriptio":"Modified by Disable Score: The new code only allow to run 1-up sprites in its code but removes score sprites."},{"address":"$00FA29","length":"4 bytes. Ends at $00FA2C.","beginsAt":64041,"endsAt":64044,"type":"Jump (JML/JSL)","descriptio":"Modified by Fireball Conveyor Fix, by Thomas. Jumps to a routine that fixes the Fireball teleport glitch when in contact with the castle moving stairs."},{"address":"$00FD4A","length":"5 bytes. Ends at $00FD4E.","beginsAt":64842,"endsAt":64846,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. Fixes Water Bubble's spawn position during reversed gravity mode."},{"address":"$00FDC3","length":"6 bytes. Ends at $00FDC8.","beginsAt":64963,"endsAt":64968,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. Fixes Water Splash's spawn position during reversed gravity mode."},{"address":"$00FE7E","length":"4 bytes. Ends at $00FE81.","beginsAt":65150,"endsAt":65153,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. Fixes Floor Dust's spawn position during reversed gravity mode."},{"address":"$00FEA8","length":"4 bytes. Ends at $00FEAB.","beginsAt":65192,"endsAt":65195,"type":"Jump (JML/JSL)","descriptio":"Hijacked by the fireball ammo patch to add an ammo counter for fireballs."},{"address":"$00FEA8","length":"5 bytes. Ends at $00FEAC.","beginsAt":65192,"endsAt":65196,"type":"Jump (JML/JSL)","descriptio":"Modified by No Fireballs in Water patch. Jumps to the main code."},{"address":"$00FEC4","length":"5 bytes. Ends at $00FEC8.","beginsAt":65220,"endsAt":65224,"type":"Jump (JML/JSL)","descriptio":"Modified by Upwards arc fireball patch. Jumps to the main code."},{"address":"$00FFD8","length":"1 byte","beginsAt":65496,"endsAt":65496,"type":"Hex Edit","descriptio":"Modified by the Overworld Indicators patch. This value is the SRAM size in the original game, and it's changed to $02 to expand to 4KB of SRAM in case Ragey's Overworld Expansion is enabled. (Only does this if SRAM is 2KB, e.g. default value)"},{"address":"$0180CA","length":"1 byte","beginsAt":98506,"endsAt":98506,"type":"Opcode","descriptio":"Not modified, however is used by Lunar Magic as an RTL for calling routines that end in RTS in bank 1 with stack magic. So don't modify it."},{"address":"$0180D2","length":"19 bytes. Ends at $0180E4.","beginsAt":98514,"endsAt":98532,"type":"Jump (JML/JSL)","descriptio":"Modified by No More Sprite Tile Limits. Replaces the old OAM slot search with the new one."},{"address":"$01817D","length":"2 bytes. Ends at $01817E.","beginsAt":98685,"endsAt":98686,"type":"16-bit Pointer","descriptio":"Modified by PIXI's poison mushroom patch.\nPointers to sprite init routines. Note that the actual hijack location depends on the sprite slot chosen*2. For example, if the sprite is inserted in slot $85, then the hijack location is ($01817D + ($85*2) = $018287). The poiner is relocated to the power-up routine."},{"address":"$018221","length":"2 bytes. Ends at $018222.","beginsAt":98849,"endsAt":98850,"type":"16-bit Pointer","descriptio":"Modified by Lunar Magic.\n\nLunar Magic 2.53+ changes sprite 52's (moving ledge hole) init pointer to $85B7 (part of the piranha plant's init routine) to fix an issue in the original SMW where this sprite would spawn in the wrong position if placed at the top of a subscreen."},{"address":"$018291","length":"2 bytes. Ends at $018292.","beginsAt":98961,"endsAt":98962,"type":"16-bit Pointer","descriptio":"Modified by Bird from Yoshi's House Fix. Changes Yoshi's House birds' pointer to Yoshi's egg's."},{"address":"$0182B3","length":"4 bytes. Ends at $0182B6.","beginsAt":98995,"endsAt":98998,"type":"16-bit Pointer","descriptio":"Modified by Hammer Bro Fix patch.\nThis remaps both sprite 9B and 9C's init routine pointers to $01AD54."},{"address":"$018326","length":"13 bytes. Ends at $018332.","beginsAt":99110,"endsAt":99122,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Roy's 'All Second Timed Lift' patch. Gets and checks the sprite's X-pos before doing a JSL to the main routine."},{"address":"$0183FF","length":"4 bytes. Ends at $018402.","beginsAt":99327,"endsAt":99330,"type":"Jump (JML/JSL)","descriptio":"Modified by Spike Top Ceiling Cling, by imamelia.\n\nHijacks the Spike Top init routine to alter its movement following a ceiling contact check."},{"address":"$0184E3","length":"5 bytes. Ends at $0184E7.","beginsAt":99555,"endsAt":99559,"type":"Jump (JML/JSL)","descriptio":"Modified by No Silent Bullet Bill, by Ramp202.\n\nJSL : NOP, modifies the Bullet Bill init routine to add a sound effect."},{"address":"$0185CC","length":"2 bytes. Ends at $0185CD.","beginsAt":99788,"endsAt":99789,"type":"16-bit Pointer","descriptio":"Modified by PIXI's poison mushroom patch.\nPointers to sprite main routines. Note that the actual hijack location depends on the sprite slot chosen*2. For example, if the sprite is inserted in slot $85, then the hijack location is ($0185CC + ($85*2) = $0186D6). The poiner is relocated to the power-up routine."},{"address":"$018648","length":"2 bytes. Ends at $018649.","beginsAt":99912,"endsAt":99913,"type":"16-bit Pointer","descriptio":"Modified by Item Box Sprite Fix, by Davros/Romi.\n\nOverwrites the pointer to the P-Switch Main routine to run custom blink-fall code."},{"address":"$018672","length":"2 bytes. Ends at $018673.","beginsAt":99954,"endsAt":99955,"type":"16-bit Pointer","descriptio":"Modified by Item Box Sprite Fix, by Davros/Romi.\n\nOverwrites the pointer to the Throw Block sprite Main routine to run custom blink-fall code."},{"address":"$0186CC","length":"2 bytes. Ends at $0186CD.","beginsAt":100044,"endsAt":100045,"type":"16-bit Pointer","descriptio":"Modified by Item Box Sprite Fix, by Davros/Romi.\n\nOverwrites the pointer to the Key sprite Main routine to run custom blink-fall code."},{"address":"$0187A7","length":"4 bytes. Ends at $0187AA.","beginsAt":100263,"endsAt":100266,"type":"Jump (JML/JSL)","descriptio":"Hijacked by sprite tool. This then jumps to freespace to initalize custom sprite tables."},{"address":"$018ED0","length":"10 bytes. Ends at $018ED9.","beginsAt":102096,"endsAt":102105,"type":"Jump (JML/JSL)","descriptio":"Modified by Proximity Wraparound fix. Replaces upsidedown/classic piranha plant's horizontal proximity check to 16-bit one for if it should come out of pipe."},{"address":"$018F0D","length":"4 bytes. Ends at $018F10.","beginsAt":102157,"endsAt":102160,"type":"Jump (JML/JSL)","descriptio":"Modified by No Sprite Interaction Fix, by chillyfox.\n\nJML, modifies the Hopping Flame main sprite routine to add a proper sprite interaction check."},{"address":"$019140","length":"6 bytes. Ends at $019145.","beginsAt":102720,"endsAt":102725,"type":"Jump (JML/JSL)","descriptio":"Modified by the No block interaction if sprite is falling off screen patch, by GreenHammerBro.\n\nJML : BRA $00, modifies the sprite/block interaction routine to terminate immediately if the processed sprite is in state $14C8 = #$02."},{"address":"$019162","length":"4 bytes. Ends at $019165.","beginsAt":102754,"endsAt":102757,"type":"Jump (JML/JSL)","descriptio":"Modified by the Tide Sprite Interaction Fix patch. Handles a part of the patch's functions."},{"address":"$019183","length":"4 bytes. Ends at $019186.","beginsAt":102787,"endsAt":102790,"type":"Jump (JML/JSL)","descriptio":"Modified by the Tide Sprite Interaction Fix patch. Handles a part of the patch's functions."},{"address":"$0194D6","length":"3 bytes. Ends at $0194D8.","beginsAt":103638,"endsAt":103640,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps CMP.W #$01B0 to CMP.W $13D7."},{"address":"$019500","length":"4 bytes. Ends at $019503.","beginsAt":103680,"endsAt":103683,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA60,X to LDA.L $000CB6,X."},{"address":"$019509","length":"4 bytes. Ends at $01950C.","beginsAt":103689,"endsAt":103692,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA70,X to LDA.L $000CC6,X."},{"address":"$019512","length":"4 bytes. Ends at $019515.","beginsAt":103698,"endsAt":103701,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA9C,X to LDA.L $000CD6,X."},{"address":"$01951B","length":"4 bytes. Ends at $01951E.","beginsAt":103707,"endsAt":103710,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BAAC,X to LDA.L $000CE6,X."},{"address":"$019534","length":"3 bytes. Ends at $019536.","beginsAt":103732,"endsAt":103734,"type":"Miscellaneous","descriptio":"Modified by Lunar Magic.\n\nA modification of a JSL's address to jump to $06f700 (was originally JSL $00F545) handle custom map 16 for sprite's interaction with the blocks."},{"address":"$01953C","length":"4 bytes. Ends at $01953F.","beginsAt":103740,"endsAt":103743,"type":"Jump (JML/JSL)","descriptio":"Modified by Shell-Collectable Coins and Yoshi/Dragon Coins. Allows for sprites that were thrown without being kicked, to collect coins and Yoshi/dragon coins."},{"address":"$019826","length":"2 bytes. Ends at $019827.","beginsAt":104486,"endsAt":104487,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$019949","length":"4 bytes. Ends at $01994C.","beginsAt":104777,"endsAt":104780,"type":"Jump (JML/JSL)","descriptio":"Modified by Shell-Collectable Coins and Yoshi/Dragon Coins. Allows for kicked sprites to collect coins and Yoshi/dragon coins."},{"address":"$019F77","length":"2 bytes. Ends at $019F78.","beginsAt":106359,"endsAt":106360,"type":"Opcode","descriptio":"Hijacked by the SMB2 Holding patch: This one puts carried sprites always above Mario."},{"address":"$01A00D","length":"4 bytes. Ends at $01A010.","beginsAt":106509,"endsAt":106512,"type":"Jump (JML/JSL)","descriptio":"Hijacked by the SMB2 Holding patch: This one controls how sprites a released."},{"address":"$01A0F6","length":"4 bytes. Ends at $01A0F9.","beginsAt":106742,"endsAt":106745,"type":"Jump (JML/JSL)","descriptio":"Hijacked by the SMB2 Holding patch: This one controls the position of the carried sprite."},{"address":"$01A11A","length":"5 bytes. Ends at $01A11E.","beginsAt":106778,"endsAt":106782,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. Fixes items being carried during reversed gravity mode."},{"address":"$01A22C","length":"4 bytes. Ends at $01A22F.","beginsAt":107052,"endsAt":107055,"type":"Jump (JML/JSL)","descriptio":"Modified by the Baby Yoshi & Yoshi Egg Fix patch, by Davros.\n\nJML, modifies the main baby Yoshi sprite routine to execute several fixes."},{"address":"$01A2B5","length":"4 bytes. Ends at $01A2B8.","beginsAt":107189,"endsAt":107192,"type":"Jump (JML/JSL)","descriptio":"Main hijack of TheBiob's 'Baby Yoshi grow flag' patch."},{"address":"$01A685","length":"4 bytes. Ends at $01A688.","beginsAt":108165,"endsAt":108168,"type":"Jump (JML/JSL)","descriptio":"Hijacked by the SMB2 Holding patch: This one hijacks the interaction between two sprites. Any goomba and a sprite acting like one (e.g. the SMB2 sprites) behave like a thrown sprite in SMB2."},{"address":"$01AA58","length":"4 bytes. Ends at $01AA5B.","beginsAt":109144,"endsAt":109147,"type":"Jump (JML/JSL)","descriptio":"Hijacked by the SMB2 Holding patch: This one is for picking up a sprite."},{"address":"$01AA5E","length":"6 bytes. Ends at $01AA63.","beginsAt":109150,"endsAt":109155,"type":"Jump (JML/JSL)","descriptio":"Modified by No Pressed P-Switch Carry patch. Extends checks for if p-switch can be carried to include check if it was pressed."},{"address":"$01AB07","length":"5 bytes. Ends at $01AB0B.","beginsAt":109319,"endsAt":109323,"type":"Jump (JML/JSL)","descriptio":"Modified by No P-Switch Music Reset. Jumps to the main code."},{"address":"$01AC40","length":"3 bytes. Ends at $01AC42.","beginsAt":109632,"endsAt":109634,"type":"Opcode","descriptio":"Modified by Lunar Magic. Changes to \"NOP : NOP : XBA\" for holding the Y low byte."},{"address":"$01AC46","length":"4 bytes. Ends at $01AC49.","beginsAt":109638,"endsAt":109641,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic.\n\nA modification to “SubOffscreen_Bank01” routine that handles despawning sprites when they go offscreen. It is modified to despawn sprites in horizontal levels when going off screen vertically (in the original game, it only erases most sprites when going below the level far enough for most sprites besides Bullet Bills, Spike Tops, Magikoopa's magic, etc.)"},{"address":"$01AD54","length":"4 bytes. Ends at $01AD57.","beginsAt":109908,"endsAt":109911,"type":"Code","descriptio":"Modified by Hammer Bro Fix patch. It's the new Hammer Bro init routine."},{"address":"$01AEB4","length":"5 bytes. Ends at $01AEB8.","beginsAt":110260,"endsAt":110264,"type":"Jump (JML/JSL)","descriptio":"Modified by No Sprite Interaction Fix, by chillyfox.\n\nJSL : NOP, modifies the Thwomp main sprite routine to add a proper sprite interaction check."},{"address":"$01AECB","length":"5 bytes. Ends at $01AECF.","beginsAt":110283,"endsAt":110287,"type":"Jump (JML/JSL)","descriptio":"Modified by Proximity Wraparound fix. Changes Thwomp's first SubHorzPos to 16-bit one, when it should change expression."},{"address":"$01AED7","length":"9 bytes. Ends at $01AEDF.","beginsAt":110295,"endsAt":110303,"type":"Jump (JML/JSL)","descriptio":"Modified by Proximity Wraparound fix. Replaces Thwomp's horizontal proximity check with 16-bit one if player's close enough to show glaring expression."},{"address":"$01AEE5","length":"9 bytes. Ends at $01AEED.","beginsAt":110309,"endsAt":110317,"type":"Jump (JML/JSL)","descriptio":"Modified by Proximity Wraparound fix. Replaces Thwomp's horizontal proximity check with 16-bit one for if it should fall."},{"address":"$01AF38","length":"4 bytes. Ends at $01AF3B.","beginsAt":110392,"endsAt":110395,"type":"Jump (JML/JSL)","descriptio":"Modified by Thwomp Ceiling Interaction patch. Adds ceiling interaction for thwomp."},{"address":"$01AF9F","length":"5 bytes. Ends at $01AFA3.","beginsAt":110495,"endsAt":110499,"type":"Jump (JML/JSL)","descriptio":"Modified by No Sprite Interaction Fix, by chillyfox.\n\nJSL : NOP, modifies the Thwimp main sprite routine to add a proper sprite interaction check."},{"address":"$01AFE9","length":"4 bytes. Ends at $01AFEC.","beginsAt":110569,"endsAt":110572,"type":"Jump (JML/JSL)","descriptio":"Modified by Thwimp + SFX Patch. Jump to code that handles sound effect when thwimp jumps (and Y-speed that is replaced with this hijack)."},{"address":"$01B9CD","length":"2 bytes. Ends at $01B9CE.","beginsAt":113101,"endsAt":113102,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$01BB33","length":"5 bytes. Ends at $01BB37.","beginsAt":113459,"endsAt":113463,"type":"Jump (JML/JSL)","descriptio":"Modified by No More Sprite Tile Limits. Disables net door from setting its own hardcoded OAM slot."},{"address":"$01BBFD","length":"2 bytes. Ends at $01BBFE.","beginsAt":113661,"endsAt":113662,"type":"Opcode","descriptio":"Modified by No More Sprite Tile Limits. Makes use of scratch ram that contains the OAM slot of the net door."},{"address":"$01C036","length":"4 bytes. Ends at $01C039.","beginsAt":114742,"endsAt":114745,"type":"Jump (JML/JSL)","descriptio":"Modified by Magikoopa Palette Editor patch. Changes the way palette is loaded for Magikoopa and allows per-level palettes."},{"address":"$01C08C","length":"8 bytes. Ends at $01C093.","beginsAt":114828,"endsAt":114835,"type":"Code","descriptio":"Modified by Lunar Magic. Entire region is filled with NOP.\nThis is made so the Y high byte of the Goal Tape ($14D4,x) is copied directly to $1534,x.\n\nMost sprite tools hijack this for storing extra bits and is expected to not change anymore, otherwise goal tapes will not work correctly."},{"address":"$01C0E1","length":"2 bytes. Ends at $01C0E2.","beginsAt":114913,"endsAt":114914,"type":"Opcode","descriptio":"Modified by Lunar Magic. Changes \"AND #$01\" to \"AND #$FF\".\nThis fixes the Goal Tape Point interaction (because $1534 no longer holds extra bits but the complete Y high byte)."},{"address":"$01C125","length":"3 bytes. Ends at $01C127.","beginsAt":114981,"endsAt":114983,"type":"Opcode","descriptio":"Modified by Goal Tape Gives Score patch. Disables coin if goal tape wasn't hit."},{"address":"$01C12D","length":"48 bytes. Ends at $01C15C.","beginsAt":114989,"endsAt":115036,"type":"Code","descriptio":"Rewritten by the 16x16 Goal Tape patch. This is the graphics routine of the goal tape."},{"address":"$01C175","length":"3 bytes. Ends at $01C177.","beginsAt":115061,"endsAt":115063,"type":"Code","descriptio":"Modified by Goal Tape Gives Score patch. Disables bonus stars showing when goal tape is hit."},{"address":"$01C22B","length":"4 bytes. Ends at $01C22E.","beginsAt":115243,"endsAt":115246,"type":"Jump (JML/JSL)","descriptio":"Modified by the Runaway Wing Patch. Handles the wings' movement if the coin/mushroom is collected."},{"address":"$01C2AA","length":"5 bytes. Ends at $01C2AE.","beginsAt":115370,"endsAt":115374,"type":"Jump (JML/JSL)","descriptio":"Modified by Flying Yellow 1-up Value Change, by Zeldara109\n\nJML : NOP, overwrites JSR to 1-up routine to set up custom reward."},{"address":"$01C30F","length":"4 bytes. Ends at $01C312.","beginsAt":115471,"endsAt":115474,"type":"Jump (JML/JSL)","descriptio":"Modified by the Runaway Wing Patch. Hijacks' the \"golden 1-up mushroom collected\" routine."},{"address":"$01C358","length":"8 bytes. Ends at $01C35F.","beginsAt":115544,"endsAt":115551,"type":"Jump (JML/JSL)","descriptio":"Modified by the Edible Blocks patch, by Thomas.\n\nJSR GetDrawInfo : JSL : RTS, hijacks the routine that draws an eaten berry-sprite to allow variable customized sprite tiles and properties."},{"address":"$01C39C","length":"4 bytes. Ends at $01C39F.","beginsAt":115612,"endsAt":115615,"type":"Jump (JML/JSL)","descriptio":"Modified by Item Block Priority Mask. Jumps to the main code."},{"address":"$01C545","length":"5 bytes. Ends at $01C549.","beginsAt":116037,"endsAt":116041,"type":"Jump (JML/JSL)","descriptio":"Modified by Item Box Mushroom Priority Fix. Jumps to the main code."},{"address":"$01C561","length":"4 bytes. Ends at $01C564.","beginsAt":116065,"endsAt":116068,"type":"Jump (JML/JSL)","descriptio":"Modified by Invulnerability on power-up. Makes mushroom give invulnerability on contact."},{"address":"$01C598","length":"4 bytes. Ends at $01C59B.","beginsAt":116120,"endsAt":116123,"type":"Jump (JML/JSL)","descriptio":"Modified by Invulnerability on power-up. Makes feather give invulnerability on contact."},{"address":"$01C5AE","length":"15 bytes. Ends at $01C5BC.","beginsAt":116142,"endsAt":116156,"type":"Code","descriptio":"Hijacked by Romi's Feather Autoscroll Freeze Fix patch. The whole code gets written at this position."},{"address":"$01C5EC","length":"5 bytes. Ends at $01C5F0.","beginsAt":116204,"endsAt":116208,"type":"Jump (JML/JSL)","descriptio":"Modified by Fire Power Timer patch. Modifies fireflower to set timer for fire power."},{"address":"$01C5EC","length":"4 bytes. Ends at $01C5EF.","beginsAt":116204,"endsAt":116207,"type":"Jump (JML/JSL)","descriptio":"Modified by Yoshi Fireball Ability Patch. This jumps to a piece of code that resets the cooldown timer for Yoshi Fireball shooting when the player gets a Fire Flower."},{"address":"$01C5F3","length":"4 bytes. Ends at $01C5F6.","beginsAt":116211,"endsAt":116214,"type":"Jump (JML/JSL)","descriptio":"Modified by Invulnerability on power-up. Makes fireflower give invulnerability on contact."},{"address":"$01C636","length":"4 bytes. Ends at $01C639.","beginsAt":116278,"endsAt":116281,"type":"Jump (JML/JSL)","descriptio":"Modified by the Runaway Wing Patch. Hijacks the \"powerup graphics\" routine."},{"address":"$01D6C4","length":"7 bytes. Ends at $01D6CA.","beginsAt":120516,"endsAt":120522,"type":"Code","descriptio":"Modified by Line-Guided Rope Length Fix, by imamelia.\n\nModifies the line-guided rope sprite init routine to set a custom table with even/odd X position data."},{"address":"$01D97B","length":"4 bytes. Ends at $01D97E.","beginsAt":121211,"endsAt":121214,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps ADC.L $00BA60,X to ADC.L $000CB6,X."},{"address":"$01D981","length":"4 bytes. Ends at $01D984.","beginsAt":121217,"endsAt":121220,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA9C,X to LDA.L $000CD6,X."},{"address":"$01D9E1","length":"4 bytes. Ends at $01D9E4.","beginsAt":121313,"endsAt":121316,"type":"Jump (JML/JSL)","descriptio":"Modified by Rope Fix. Jumps to the code that applies the line-guide fix."},{"address":"$01DA17","length":"5 bytes. Ends at $01DA1B.","beginsAt":121367,"endsAt":121371,"type":"Jump (JML/JSL)","descriptio":"Modified by Rope Fix. Jumps to the code that applies the ground fix."},{"address":"$01DC73","length":"7 bytes. Ends at $01DC79.","beginsAt":121971,"endsAt":121977,"type":"Code","descriptio":"Modified by Line-Guided Rope Length Fix, by imamelia.\n\nModifies the line-guided rope graphics routine to draw the long or short rope based on a custom table rather than slot/sprite memory settings."},{"address":"$01DCC3","length":"7 bytes. Ends at $01DCC9.","beginsAt":122051,"endsAt":122057,"type":"Code","descriptio":"Modified by Line-Guided Rope Length Fix, by imamelia.\n\nModifies the line-guided rope graphics routine to draw the long or short rope based on a custom table rather than slot/sprite memory settings."},{"address":"$01E1DB","length":"5 bytes. Ends at $01E1DF.","beginsAt":123355,"endsAt":123359,"type":"Jump (JML/JSL)","descriptio":"Modified by Keyhole Fix, by Davros.\n\nJML : NOP, modifies the Keyhole sprite routine to run \"sprites locked\" and \"offscreen\" checks."},{"address":"$01E2E0","length":"10 bytes. Ends at $01E2E9.","beginsAt":123616,"endsAt":123625,"type":"Jump (JML/JSL)","descriptio":"Modified by Proximity Wraparound fix. Replaces monty moles' horizontal proximity check with 16-bit one."},{"address":"$01E2F3","length":"4 bytes. Ends at $01E2F6.","beginsAt":123635,"endsAt":123638,"type":"Jump (JML/JSL)","descriptio":"Modified by Level specific speeds for Monty Moles and Hammers. Points to the monty mole routine."},{"address":"$01E2FB","length":"1 byte","beginsAt":123643,"endsAt":123643,"type":"Data","descriptio":"Modified by Level specific speeds for Monty Moles and Hammers. Monty Mole's timer, slow mode."},{"address":"$01E301","length":"1 byte","beginsAt":123649,"endsAt":123649,"type":"Data","descriptio":"Modified by Level specific speeds for Monty Moles and Hammers. Monty Mole's timer, fast mode."},{"address":"$01E6B5","length":"4 bytes. Ends at $01E6B8.","beginsAt":124597,"endsAt":124600,"type":"Jump (JML/JSL)","descriptio":"Hijacked by the SMB2 Holding patch: This one enables the function of $154C,x to the spring board so that it gets intangible after dropping or throwing it."},{"address":"$01E6CE","length":"4 bytes. Ends at $01E6D1.","beginsAt":124622,"endsAt":124625,"type":"Jump (JML/JSL)","descriptio":"Hijacked by the SMB2 Holding patch: This one is for picking up a springboard."},{"address":"$01E75B","length":"5 bytes. Ends at $01E75F.","beginsAt":124763,"endsAt":124767,"type":"Jump (JMP/JSR)","descriptio":"Modified by Item Box Sprite Fix, by Davros/Romi.\n\nJML : NOP, hijacks shared P-Switch/Display Text sprite main routine to execute custom blink-fall code for various sprites."},{"address":"$01E762","length":"6 bytes. Ends at $01E767.","beginsAt":124770,"endsAt":124775,"type":"Code","descriptio":"Modified by Lunar Magic.\nPart of the Sprite 19 fix. If that isn't installed, this is instead replaced with a JSL to $03BCA0, where the correct starting submap is set."},{"address":"$01EB16","length":"4 bytes. Ends at $01EB19.","beginsAt":125718,"endsAt":125721,"type":"Jump (JML/JSL)","descriptio":"Modified by Disable Ducking, by Iceguy/Meirdent.\n\nJSL, modifies the on-Yoshi check for holding Down to duck to either factor in powerup status, or always disregard the ducking input."},{"address":"$01EE8D","length":"5 bytes. Ends at $01EE91.","beginsAt":126605,"endsAt":126609,"type":"Jump (JML/JSL)","descriptio":"Modified by Yoshi Sparkles patch, by leod.\n\nJSL : NOP, hijacks a portion of Yoshi's run-every-frame code to generate cosmetic sparkles."},{"address":"$01F0D3","length":"42 bytes. Ends at $01F0FC.","beginsAt":127187,"endsAt":127228,"type":"Code","descriptio":"Modified by the Edible Blocks patch, by Thomas.\n\nOverwrites the default \"eaten berry\" routines with custom code. Contains a JSL to code that runs one of up to 255 custom eaten block routines. Overwrites and recreates the routine that awards a coin for eating a normal non-berry sprite."},{"address":"$01F3D6","length":"1 byte","beginsAt":127958,"endsAt":127958,"type":"Opcode","descriptio":"Modified by the Edible Blocks patch, by Thomas.\n\nRTS, bypass running the Yoshi tongue drawing and processing routines in situations in which neither should exert any effect. Optionally enabled."},{"address":"$01F3F4","length":"1 byte","beginsAt":127988,"endsAt":127988,"type":"Opcode","descriptio":"Modified by the Edible Blocks patch, by Thomas.\n\nRTS, bypass running the Yoshi tongue drawing and processing routines in situations in which neither should exert any effect. Optionally enabled."},{"address":"$01F3FA","length":"1 byte","beginsAt":127994,"endsAt":127994,"type":"Opcode","descriptio":"Modified by the Edible Blocks patch, by Thomas.\n\nRTS, bypass running the Yoshi tongue drawing and processing routines in situations in which neither should exert any effect. Optionally enabled."},{"address":"$01F469","length":"1 byte","beginsAt":128105,"endsAt":128105,"type":"Data","descriptio":"Modified by $02xx OAM Remapper. Remaps Yoshi tongue's OAM slots: it uses 5 slots in a row, starting from the one defined in the patch."},{"address":"$01F764","length":"5 bytes. Ends at $01F768.","beginsAt":128868,"endsAt":128872,"type":"Jump (JML/JSL)","descriptio":"Modified by the Baby Yoshi & Yoshi Egg Fix patch, by Davros.\n\nJML : NOP, modifies the main Yoshi egg sprite routine to execute several fixes."},{"address":"$01F76E","length":"12 bytes. Ends at $01F779.","beginsAt":128878,"endsAt":128889,"type":"Jump (JML/JSL)","descriptio":"Modified by Proximity Wraparound fix. Replaces Yoshi Egg's horizontal proximity check with 16-bit one."},{"address":"$01F83D","length":"5 bytes. Ends at $01F841.","beginsAt":129085,"endsAt":129089,"type":"Jump (JML/JSL)","descriptio":"Modified by the Yoshi Egg Block Fix patch, by yoshifanatic. Jumps to the main routine of the patch."},{"address":"$01FB28","length":"2 bytes. Ends at $01FB29.","beginsAt":129832,"endsAt":129833,"type":"Opcode","descriptio":"Modified by Minimalist Course Clear so it loads a custom waiting value that determines when to fade back to the overworld after beating a boss."},{"address":"$02808D","length":"4 bytes. Ends at $028090.","beginsAt":163981,"endsAt":163984,"type":"Jump (JML/JSL)","descriptio":"Modified by Bob-omb Cape Fix. Jumps to the main code."},{"address":"$028830","length":"5 bytes. Ends at $028834.","beginsAt":165936,"endsAt":165940,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. Fixes bounce sprites."},{"address":"$028893","length":"10 bytes. Ends at $02889C.","beginsAt":166035,"endsAt":166044,"type":"Jump (JML/JSL)","descriptio":"Modified by \"Multi Coin Block Reward\" patch. Modifies multi coin blocks to give set reward after hit set amount of times."},{"address":"$028A18","length":"4 bytes. Ends at $028A1B.","beginsAt":166424,"endsAt":166427,"type":"Jump (JML/JSL)","descriptio":"Modified by SMB3 Power-up Facing patch. Makes power-ups face away from player when spawned from block."},{"address":"$028B78","length":"12 bytes. Ends at $028B83.","beginsAt":166776,"endsAt":166787,"type":"Table","descriptio":"Modified by $02xx OAM Remapper. This is the table with the OAM indexes for the minor extended sprites."},{"address":"$0290E5","length":"4 bytes. Ends at $0290E8.","beginsAt":168165,"endsAt":168168,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. Fixes bounce sprites."},{"address":"$0290F9","length":"9 bytes. Ends at $029101.","beginsAt":168185,"endsAt":168193,"type":"Code","descriptio":"Modified by Reverse Gravity. Fixes bounce sprites."},{"address":"$02912B","length":"5 bytes. Ends at $02912F.","beginsAt":168235,"endsAt":168239,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. Fixes bounce sprites."},{"address":"$029163","length":"5 bytes. Ends at $029167.","beginsAt":168291,"endsAt":168295,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. Fixes bounce sprites."},{"address":"$0291ED","length":"4 bytes. Ends at $0291F0.","beginsAt":168429,"endsAt":168432,"type":"Table","descriptio":"Modified by $02xx OAM Remapper. This is the table with the OAM indexes for the block bounce sprites."},{"address":"$0292F9","length":"4 bytes. Ends at $0292FC.","beginsAt":168697,"endsAt":168700,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA60,X to LDA.L $000CB6,X."},{"address":"$029301","length":"4 bytes. Ends at $029304.","beginsAt":168705,"endsAt":168708,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA70,X to LDA.L $000CC6,X."},{"address":"$02930A","length":"4 bytes. Ends at $02930D.","beginsAt":168714,"endsAt":168717,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA9C,X to LDA.L $000CD6,X."},{"address":"$029312","length":"4 bytes. Ends at $029315.","beginsAt":168722,"endsAt":168725,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BAAC,X to LDA.L $000CE6,X."},{"address":"$0294C6","length":"3 bytes. Ends at $0294C8.","beginsAt":169158,"endsAt":169160,"type":"Opcode","descriptio":"Modified by Yoshi Fireball Ability Patch [BRA $01 : NOP]. This piece of code frees $14A9 so it can be used as a cooldown timer."},{"address":"$02950B","length":"5 bytes. Ends at $02950F.","beginsAt":169227,"endsAt":169231,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic (JML : NOP). Fixes cape interaction on Iggy/Larry battle."},{"address":"$0295BE","length":"4 bytes. Ends at $0295C1.","beginsAt":169406,"endsAt":169409,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Corrects cape interaction to work with dynamic levels."},{"address":"$0295EC","length":"4 bytes. Ends at $0295EF.","beginsAt":169452,"endsAt":169455,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA60,X to LDA.L $000CB6,X."},{"address":"$0295F4","length":"4 bytes. Ends at $0295F7.","beginsAt":169460,"endsAt":169463,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA70,X to LDA.L $000CC6,X."},{"address":"$0295FD","length":"4 bytes. Ends at $029600.","beginsAt":169469,"endsAt":169472,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA9C,X to LDA.L $000CD6,X."},{"address":"$029605","length":"4 bytes. Ends at $029608.","beginsAt":169477,"endsAt":169480,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BAAC,X to LDA.L $000CE6,X."},{"address":"$02961B","length":"3 bytes. Ends at $02961D.","beginsAt":169499,"endsAt":169501,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$02961B","length":"3 bytes. Ends at $02961D.","beginsAt":169499,"endsAt":169501,"type":"Miscellaneous","descriptio":"Modified by Lunar Magic.\n\nA modification of a JSL's address to jump to $06f760 (was originally JSL $00F545) handle custom map 16 for cape's interaction with the blocks."},{"address":"$0296B8","length":"4 bytes. Ends at $0296BB.","beginsAt":169656,"endsAt":169659,"type":"Table","descriptio":"Modified by $02xx OAM Remapper. This is the table with the OAM indexes for the smoke sprite 01 (puff of smoke)."},{"address":"$0297B3","length":"1 byte","beginsAt":169907,"endsAt":169907,"type":"Data","descriptio":"Modified by $02xx OAM Remapper. Determines the starting slot (it uses 4 in a row) for the contact sprite (smoke sprite 2) during non-mode 7 boss levels."},{"address":"$029839","length":"1 byte","beginsAt":170041,"endsAt":170041,"type":"Data","descriptio":"Modified by $02xx OAM Remapper. Determines the starting slot (it uses 4 in a row) for the contact sprite (smoke sprite 2) during mode 7 boss levels."},{"address":"$0299E9","length":"4 bytes. Ends at $0299EC.","beginsAt":170473,"endsAt":170476,"type":"Table","descriptio":"Modified by $02xx OAM Remapper. Remaps coin sprites from blocks' OAM slots."},{"address":"$029B16","length":"4 bytes. Ends at $029B19.","beginsAt":170774,"endsAt":170777,"type":"Jump (JML/JSL)","descriptio":"Used by the Reznor Fireball Fix patch to force non-existing Extended Sprites to clear the flag used by the fireballs, to maximize compatibility with existing sprites."},{"address":"$029F68","length":"4 bytes. Ends at $029F6B.","beginsAt":171880,"endsAt":171883,"type":"Jump (JML/JSL)","descriptio":"Modified by the Yoshi Fireball Block Interaction patch, by LX5.\n\nJML, modifies the Yoshi fireball extended sprite to detect Layer 1 tiles when the game is not locked."},{"address":"$029FAB","length":"2 bytes. Ends at $029FAC.","beginsAt":171947,"endsAt":171948,"type":"Table","descriptio":"Modified by $02xx OAM Remapper. This is the table with the OAM indexes for the player's fireballs."},{"address":"$02A0EE","length":"5 bytes. Ends at $02A0F2.","beginsAt":172270,"endsAt":172274,"type":"Jump (JML/JSL)","descriptio":"Modified by Bob-omb explodes on fireball patch. Changes fireball contact checks, so it checks for (para-)bomb before anything else."},{"address":"$02A0FC","length":"8 bytes. Ends at $02A103.","beginsAt":172284,"endsAt":172291,"type":"Jump (JML/JSL)","descriptio":"Modified by the \"Takes 5 fireballs to kill\" Work-around Patch.\n\nThis hijacks the \"fireball hit counter\" code that checks if a sprite with the tweak bit \"takes 5 fireballs to kill\" should be killed; instead of $1528,x, this hijack moves the sprite table containing the \"fireball hit counter\" to a freeRAM, 12 (or 22 if a SA-1 ROM) bytes of length (by default, $7F8900)."},{"address":"$02A129","length":"13 bytes. Ends at $02A135.","beginsAt":172329,"endsAt":172341,"type":"Code","descriptio":"Modified by Classic Fireball patch. Sets the sprite hit by a fireball to die by star, then jumps to the main code and sets the score."},{"address":"$02A129","length":"4 bytes. Ends at $02A12C.","beginsAt":172329,"endsAt":172332,"type":"Jump (JML/JSL)","descriptio":"Modified by the Prize by Fire Kills patch. Jumps to the main code."},{"address":"$02A153","length":"8 bytes. Ends at $02A15A.","beginsAt":172371,"endsAt":172378,"type":"Table","descriptio":"Modified by $02xx OAM Remapper. This is the table with the OAM indexes for extended sprites."},{"address":"$02A31D","length":"4 bytes. Ends at $02A320.","beginsAt":172829,"endsAt":172832,"type":"Jump (JML/JSL)","descriptio":"Used by the Reznor Fireball Fix patch to move the increment of $1765,x to the Hammer's animation routine."},{"address":"$02A519","length":"4 bytes. Ends at $02A51C.","beginsAt":173337,"endsAt":173340,"type":"Jump (JML/JSL)","descriptio":"Used by the Reznor Fireball Fix patch to update the clipping for the Reznor and Piranha fireball extended sprites when they are marked as 16x16."},{"address":"$02A679","length":"28 bytes. Ends at $02A694.","beginsAt":173689,"endsAt":173716,"type":"Code","descriptio":"Modified by Lunar Magic (v3.03 and later). This fixes a game freeze bug with the player bubble sprite's object interaction that would load invalid data as tile data outside the level boundaries (such as when the player swims above screen 0 in horizontal water levels).\n\nIts done by checking if the sprite is outside the level (if Ypos >= RAM_13D7), then don't search for blocks."},{"address":"$02A6BA","length":"4 bytes. Ends at $02A6BD.","beginsAt":173754,"endsAt":173757,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA60,X to LDA.L $000CB6,X."},{"address":"$02A6C2","length":"4 bytes. Ends at $02A6C5.","beginsAt":173762,"endsAt":173765,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA70,X to LDA.L $000CC6,X."},{"address":"$02A6CB","length":"4 bytes. Ends at $02A6CE.","beginsAt":173771,"endsAt":173774,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA9C,X to LDA.L $000CD6,X."},{"address":"$02A6D3","length":"4 bytes. Ends at $02A6D6.","beginsAt":173779,"endsAt":173782,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BAAC,X to LDA.L $000CE6,X."},{"address":"$02A6EC","length":"3 bytes. Ends at $02A6EE.","beginsAt":173804,"endsAt":173806,"type":"Miscellaneous","descriptio":"Modified by Lunar Magic.\n\nA modification of a JSL's address to jump to $06f7a0 (was originally JSL $00F545) handle custom map 16 for the player fireball's interaction with the blocks."},{"address":"$02A77B","length":"1 byte","beginsAt":173947,"endsAt":173947,"type":"Miscellaneous","descriptio":"Modified by No More Sprite Tile Limits. Highest sprite slot to spawn normal sprites in for the selected sprite memory index (only if !OldSpriteHeader is not enabled)."},{"address":"$02A78E","length":"1 byte","beginsAt":173966,"endsAt":173966,"type":"Miscellaneous","descriptio":"Modified by No More Sprite Tile Limits. Highest sprite slot for reserved sprite 1 in for the selected sprite memory index (only if !OldSpriteHeader is not enabled)."},{"address":"$02A7A1","length":"1 byte","beginsAt":173985,"endsAt":173985,"type":"Miscellaneous","descriptio":"Modified by No More Sprite Tile Limits. Highest sprite slot for reserved sprite 2 in for the selected sprite memory index (only if !OldSpriteHeader is not enabled)."},{"address":"$02A826","length":"6 bytes. Ends at $02A82B.","beginsAt":174118,"endsAt":174123,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Main hijack of the Enhanced Sprite Loader. Changes to \"JML start_load : NOP #2\"."},{"address":"$02A830","length":"4 bytes. Ends at $02A833.","beginsAt":174128,"endsAt":174131,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Used by Enhanced Sprite Loader to check for additional options when the loaded byte is #$FF."},{"address":"$02A834","length":"4 bytes. Ends at $02A837.","beginsAt":174132,"endsAt":174135,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic. Jumps to the sprite loader ending.\n\nNot a actual hijack because this section of code in particular is now unused by the $02A830 hijack."},{"address":"$02A838","length":"4 bytes. Ends at $02A83B.","beginsAt":174136,"endsAt":174139,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic. Jumps to the goal tape point extra bit hack (jumps from $02A9D7).\n\nNot a actual hijack because this section of code in particular is now unused by the $02A830 hijack."},{"address":"$02A846","length":"4 bytes. Ends at $02A849.","beginsAt":174150,"endsAt":174153,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Used by Enhanced Sprite Loader to check if Sprite Table needs to be adjusted, for allowing more than 84 sprites per level.\n\nIf a Sprite Tool hijacks this address, the job for checking for a \"page cross\" is up to them, for allowing more than 84 sprites."},{"address":"$02A84C","length":"2 bytes. Ends at $02A84D.","beginsAt":174156,"endsAt":174157,"type":"Code","descriptio":"Modified by Lunar Magic. Changes branch from \"BNE Return02A84B\" to \"BNE CODE_02A834\", which points to JML."},{"address":"$02A95B","length":"4 bytes. Ends at $02A95E.","beginsAt":174427,"endsAt":174430,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Sets upper bits of Y position for normal sprites."},{"address":"$02A968","length":"1 byte","beginsAt":174440,"endsAt":174440,"type":"Opcode","descriptio":"Modified by Lunar Magic. A 'RTL' is placed there. The hijack at $02A95B calls $02A960, which then runs though whatever hijack a sprite tool does (or the original game itself) and then it stops here to capture the loaded Y high byte value and corrects out the high bits by the current vertical jump value."},{"address":"$02A986","length":"2 bytes. Ends at $02A987.","beginsAt":174470,"endsAt":174471,"type":"Code","descriptio":"Modified by Lunar Magic (currently has special logic to detect and handle change by Vitor's SA-1 patch)."},{"address":"$02A9D7","length":"3 bytes. Ends at $02A9D9.","beginsAt":174551,"endsAt":174553,"type":"Jump (JMP/JSR)","descriptio":"Hijacked by Lunar Magic. Inserts a special check for copying the extra bits to the goal point, since the Y position bits can't be used anymore as temporary storage.\n\nNote that there was not enough space for putting a long jump, so this will jump to $02A838, which then contains the proper JML to verify to the goal tape point."},{"address":"$02AA61","length":"4 bytes. Ends at $02AA64.","beginsAt":174689,"endsAt":174692,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Sets upper bits of Y position for cluster sprites."},{"address":"$02AB54","length":"5 bytes. Ends at $02AB58.","beginsAt":174932,"endsAt":174936,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic (JML : NOP). Sets upper bits of Y position for boo ring."},{"address":"$02ABD0","length":"5 bytes. Ends at $02ABD4.","beginsAt":175056,"endsAt":175060,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic (JML : NOP). Sets upper bits of Y position for shooters."},{"address":"$02ABF3","length":"1 byte","beginsAt":175091,"endsAt":175091,"type":"Code","descriptio":"Modified by Lunar Magic.\n\nChanged from 3F to 7F to fix a bug where the sprite load (or permanently killed) status for sprite indexes 64 to 127 gets carried over to the next level."},{"address":"$02AC64","length":"4 bytes. Ends at $02AC67.","beginsAt":175204,"endsAt":175207,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Calls the Sprite Cacher/Accelerator while loading a vertical level."},{"address":"$02ACA4","length":"4 bytes. Ends at $02ACA7.","beginsAt":175268,"endsAt":175271,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Calls the Sprite Cacher/Accelerator while loading a horizontal level."},{"address":"$02AD34","length":"24 bytes. Ends at $02AD4B.","beginsAt":175412,"endsAt":175435,"type":"Code","descriptio":"Modified by Shell-Collectable Coins and Yoshi/Dragon Coins to fix some inconsistencies with the score sprite generation routine."},{"address":"$02AD9E","length":"6 bytes. Ends at $02ADA3.","beginsAt":175518,"endsAt":175523,"type":"Table","descriptio":"Modified by $02xx OAM Remapper. This is the table with the OAM indexes for score sprites."},{"address":"$02ADBD","length":"4 bytes. Ends at $02ADC0.","beginsAt":175549,"endsAt":175552,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Disable Score: The JML jumps to check whether the score sprite is an actual score sprite or a 1-up sprite."},{"address":"$02AF37","length":"4 bytes. Ends at $02AF3A.","beginsAt":175927,"endsAt":175930,"type":"Jump (JML/JSL)","descriptio":"Modified by Triple Ball'n Chain patch. Makes use of extra bit for sprite spawn."},{"address":"$02AF3D","length":"4 bytes. Ends at $02AF40.","beginsAt":175933,"endsAt":175936,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Sets upper bits of Y position for run-once sprites."},{"address":"$02AF51","length":"2 bytes. Ends at $02AF52.","beginsAt":175953,"endsAt":175954,"type":"Opcode","descriptio":"Modified by Triple Ball'n Chain patch (Non SA-1 only). Makes use of scratch ram to store sprite number."},{"address":"$02AF55","length":"4 bytes. Ends at $02AF58.","beginsAt":175957,"endsAt":175960,"type":"Jump (JML/JSL)","descriptio":"Modified by Triple Ball'n Chain patch (SA-1 only). Makes use of scratch ram to store sprite number."},{"address":"$02AFA7","length":"4 bytes. Ends at $02AFAA.","beginsAt":176039,"endsAt":176042,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Sets upper bits of Y position for run-once sprites."},{"address":"$02B889","length":"1 byte","beginsAt":178313,"endsAt":178313,"type":"Opcode","descriptio":"Not modified, however is used by Lunar Magic as an RTL for calling routines that end in RTS in bank 2 with stack magic. So don't modify it."},{"address":"$02BA4E","length":"4 bytes. Ends at $02BA51.","beginsAt":178766,"endsAt":178769,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Used for adding berry compatibility with dynamic levels, when eaten by Yoshi's tongue."},{"address":"$02BA71","length":"4 bytes. Ends at $02BA74.","beginsAt":178801,"endsAt":178804,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA60,X to LDA.L $000CB6,X."},{"address":"$02BA79","length":"4 bytes. Ends at $02BA7C.","beginsAt":178809,"endsAt":178812,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA70,X to LDA.L $000CC6,X."},{"address":"$02BA82","length":"4 bytes. Ends at $02BA85.","beginsAt":178818,"endsAt":178821,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA9C,X to LDA.L $000CD6,X."},{"address":"$02BA8A","length":"4 bytes. Ends at $02BA8D.","beginsAt":178826,"endsAt":178829,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BAAC,X to LDA.L $000CE6,X."},{"address":"$02BA9E","length":"4 bytes. Ends at $02BAA1.","beginsAt":178846,"endsAt":178849,"type":"Jump (JML/JSL)","descriptio":"Modified by the Edible Blocks patch, by Thomas.\n\nJML, hijacks baby Yoshi/Yoshi tongue block detection routine to check for custom tiles."},{"address":"$02BB01","length":"5 bytes. Ends at $02BB05.","beginsAt":178945,"endsAt":178949,"type":"Jump (JML/JSL)","descriptio":"Modified by the Edible Blocks patch, by Thomas.\n\nJSL : PLX, hijacks the routine that replaces an eaten berry tile with a bush tile to allow replacement with empty tiles."},{"address":"$02C05C","length":"11 bytes. Ends at $02C066.","beginsAt":180316,"endsAt":180326,"type":"Jump (JML/JSL)","descriptio":"Modified by Proximity Wraparound fix. Replaces Rip van fish's horizontal proximity check with 16-bit one for when it should wake up and chase player."},{"address":"$02C067","length":"11 bytes. Ends at $02C071.","beginsAt":180327,"endsAt":180337,"type":"Jump (JML/JSL)","descriptio":"Modified by Proximity Wraparound fix. Replaces Rip van fish's vertical proximity check with 16-bit one for when it should wake up and chase player."},{"address":"$02C360","length":"12 bytes. Ends at $02C36B.","beginsAt":181088,"endsAt":181099,"type":"Jump (JML/JSL)","descriptio":"Modified by Proximity Wraparound fix. Changes Whistling Chuck's horizontal proximity check to 16-bit one."},{"address":"$02C602","length":"16 bytes. Ends at $02C611.","beginsAt":181762,"endsAt":181777,"type":"Jump (JML/JSL)","descriptio":"Modified by Proximity Wraparound fix. Changes Splitting and bouncing chucks' horizontal proximity check to 16-bit one."},{"address":"$02C64A","length":"12 bytes. Ends at $02C655.","beginsAt":181834,"endsAt":181845,"type":"Jump (JML/JSL)","descriptio":"Modified by Proximity Wraparound fix. Replaces Changing Chuck's vertical proximity check to 16-bit one for when it's searching for player."},{"address":"$02C6BA","length":"12 bytes. Ends at $02C6C5.","beginsAt":181946,"endsAt":181957,"type":"Jump (JML/JSL)","descriptio":"Modified by Proximity Wraparound fix. Replaces Charging chuck's vertical proximity check for when it's charging."},{"address":"$02D03A","length":"3 bytes. Ends at $02D03C.","beginsAt":184378,"endsAt":184380,"type":"Opcode","descriptio":"Modified by Lunar Magic. Changes to \"NOP : NOP : XBA\" for holding the Y low byte."},{"address":"$02D040","length":"4 bytes. Ends at $02D043.","beginsAt":184384,"endsAt":184387,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Used to verify the Y range on the offscreen subroutine."},{"address":"$02D158","length":"4 bytes. Ends at $02D15B.","beginsAt":184664,"endsAt":184667,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Used for adding berry compatibility with dynamic levels, when eaten by Yoshi's mouth."},{"address":"$02D18C","length":"4 bytes. Ends at $02D18F.","beginsAt":184716,"endsAt":184719,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA60,X to LDA.L $000CB6,X."},{"address":"$02D194","length":"4 bytes. Ends at $02D197.","beginsAt":184724,"endsAt":184727,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA70,X to LDA.L $000CC6,X."},{"address":"$02D19D","length":"4 bytes. Ends at $02D1A0.","beginsAt":184733,"endsAt":184736,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BA9C,X to LDA.L $000CD6,X."},{"address":"$02D1A5","length":"4 bytes. Ends at $02D1A8.","beginsAt":184741,"endsAt":184744,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps LDA.L $00BAAC,X to LDA.L $000CE6,X."},{"address":"$02D1B9","length":"4 bytes. Ends at $02D1BC.","beginsAt":184761,"endsAt":184764,"type":"Jump (JML/JSL)","descriptio":"Modified by the Edible Blocks patch, by Thomas.\n\nJML, hijacks Yoshi head berry detection routine (eat berry by touching, as opposed to using the tongue) to check for custom tiles."},{"address":"$02D207","length":"4 bytes. Ends at $02D20A.","beginsAt":184839,"endsAt":184842,"type":"Jump (JML/JSL)","descriptio":"Modified by the Edible Blocks patch, by Thomas.\n\nJSL, hijacks the routine that replaces an eaten berry tile with a bush tile to allow replacement with empty tiles."},{"address":"$02D214","length":"4 bytes. Ends at $02D217.","beginsAt":184852,"endsAt":184855,"type":"Jump (JML/JSL)","descriptio":"Modified by Balloon Direction Fix. Jumps to the main code."},{"address":"$02DA67","length":"2 bytes. Ends at $02DA68.","beginsAt":186983,"endsAt":186984,"type":"Data","descriptio":"Modified by Level specific speeds for Monty Moles and Hammers. Hammer Brother's hammer throwing rates."},{"address":"$02DA79","length":"4 bytes. Ends at $02DA7C.","beginsAt":187001,"endsAt":187004,"type":"Jump (JML/JSL)","descriptio":"Modified by Level specific speeds for Monty Moles and Hammers. This handles the hammer brother's hammer throwing timer."},{"address":"$02DB5F","length":"4 bytes. Ends at $02DB62.","beginsAt":187231,"endsAt":187234,"type":"Jump (JML/JSL)","descriptio":"Modified by Hammer Bro Fix. Used to attach hammer bros to platforms correctly."},{"address":"$02DB82","length":"6 bytes. Ends at $02DB87.","beginsAt":187266,"endsAt":187271,"type":"Jump (JML/JSL)","descriptio":"Modified by No More Sprite Tile Limits. Corrects the Hammer Bro's OAM index."},{"address":"$02E143","length":"12 bytes. Ends at $02E14E.","beginsAt":188739,"endsAt":188750,"type":"Jump (JML/JSL)","descriptio":"Modified by Proximity Wraparound fix. Changes jumping piranha plant's horizontal proximity check to 16-bit one for if it should jump out of pipe."},{"address":"$02E1CD","length":"5 bytes. Ends at $02E1D1.","beginsAt":188877,"endsAt":188881,"type":"Jump (JML/JSL)","descriptio":"Modified by Fire-Spitting Jumping Piranha Plant SFX, by Ersanio. Plays a sound when the Fire-Spitting Piranha Plant spits fire."},{"address":"$02E44D","length":"10 bytes. Ends at $02E456.","beginsAt":189517,"endsAt":189526,"type":"Jump (JML/JSL)","descriptio":"Modified by Proximity Wraparound fix. Replaces Exploding Block's horizontal proximity check to 16-bit for if it should explode."},{"address":"$02E50A","length":"4 bytes. Ends at $02E50D.","beginsAt":189706,"endsAt":189709,"type":"Jump (JML/JSL)","descriptio":"Modified by Mushroom Scale Fix. Jumps to the main code."},{"address":"$02E5E8","length":"4 bytes. Ends at $02E5EB.","beginsAt":189928,"endsAt":189931,"type":"Jump (JML/JSL)","descriptio":"Modified by Moving ledge hole sprite fix, by Tattletale.\n\nJML, allows the moving ledge sprite to use a special GetSpriteClippingA routine customized for player interaction."},{"address":"$02E61F","length":"4 bytes. Ends at $02E622.","beginsAt":189983,"endsAt":189986,"type":"Jump (JML/JSL)","descriptio":"Modified by Moving ledge hole sprite fix, by Tattletale.\n\nJML, allows the moving ledge sprite to use a special GetSpriteClippingA routine customized for interaction with sprites."},{"address":"$02E6D3","length":"4 bytes. Ends at $02E6D6.","beginsAt":190163,"endsAt":190166,"type":"Jump (JML/JSL)","descriptio":"Modified by Fishin' Lakitu bug fix. Jumps to the main code."},{"address":"$02E6EC","length":"5 bytes. Ends at $02E6F0.","beginsAt":190188,"endsAt":190192,"type":"Jump (JML/JSL)","descriptio":"Modified by No More Sprite Tile Limits. Disables the Fishing Lakitu from setting hardcoded OAM slots for its fishing line."},{"address":"$02EA9B","length":"5 bytes. Ends at $02EA9F.","beginsAt":191131,"endsAt":191135,"type":"Jump (JML/JSL)","descriptio":"Modified by the Edible Blocks patch, by Thomas.\n\nJML : NOP, hijacks the multi-sprite processing portion of the baby Yoshi sprite eating routine to check for and prevent the double-eat glitch. Optionally enabled."},{"address":"$02F280","length":"6 bytes. Ends at $02F285.","beginsAt":193152,"endsAt":193157,"type":"Jump (JML/JSL)","descriptio":"Wiggler Score Glitch Fix hijack"},{"address":"$02F3EA","length":"51 bytes. Ends at $02F41C.","beginsAt":193514,"endsAt":193564,"type":"Code","descriptio":"Modified by Bird from Yoshi's House Fix. Fixes graphic wraparound and removes bird count limitation (LoROM)."},{"address":"$02F3EA","length":"52 bytes. Ends at $02F41D.","beginsAt":193514,"endsAt":193565,"type":"Code","descriptio":"Modified by Bird from Yoshi's House Fix. Fixes graphic wraparound and removes bird count limitation (SA-1)."},{"address":"$02FA0A","length":"4 bytes. Ends at $02FA0D.","beginsAt":195082,"endsAt":195085,"type":"Table","descriptio":"Modified by $02xx OAM Remapper. This is the table with the OAM indexes for the background candle flames. These are indexes into $0300, not $0200."},{"address":"$02FED6","length":"3 bytes. Ends at $02FED8.","beginsAt":196310,"endsAt":196312,"type":"Opcode","descriptio":"Modified by Lunar Magic. Changes to \"NOP : NOP : XBA\" for holding the Y low byte."},{"address":"$02FEDC","length":"4 bytes. Ends at $02FEDF.","beginsAt":196316,"endsAt":196319,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Used to verify the Y range on the offscreen subroutine."},{"address":"$02FF50","length":"20 bytes. Ends at $02FF63.","beginsAt":196432,"endsAt":196451,"type":"Table","descriptio":"Modified by $02xx OAM Remapper. This is the table with the OAM indexes for cluster sprite Boos, Sumo Brothers' flame, and the unused Swoopers (Death Bat Ceiling)."},{"address":"$02FF50","length":"20 bytes. Ends at $02FF63.","beginsAt":196432,"endsAt":196451,"type":"Table","descriptio":"Modified by No More Sprite Tile Limits. Changes the OAM slot table for cluster sprites."},{"address":"$02FF64","length":"8 bytes. Ends at $02FF6B.","beginsAt":196452,"endsAt":196459,"type":"Table","descriptio":"Modified by $02xx OAM Remapper. This is the table with the OAM indexes for the 1-up from bonus game."},{"address":"$02FFE2","length":"30 bytes. Ends at $02FFFF.","beginsAt":196578,"endsAt":196607,"type":"Data","descriptio":"PIXI Header containing header string, version and pointer tables for sprite data."},{"address":"$03800E","length":"4 bytes. Ends at $038011.","beginsAt":229390,"endsAt":229393,"type":"Data","descriptio":"Modified by Goodbye Football RNG, by Mandew.\n\nRestructures the football sprite bounce speed table to be read as \"low value/mid value/high value\" in sequence."},{"address":"$03805C","length":"4 bytes. Ends at $03805F.","beginsAt":229468,"endsAt":229471,"type":"Jump (JML/JSL)","descriptio":"Modified by Goodbye Football RNG, by Mandew.\n\nJSL, modifies the index to the football sprite bounce speed table to cycle across three values in sequence. Overwrites the retrieval of a random number."},{"address":"$038097","length":"2 bytes. Ends at $038098.","beginsAt":229527,"endsAt":229528,"type":"Opcode","descriptio":"Modified by Minimalist Course Clear so it loads a custom waiting value that determines when to fade back to the overworld after beating a boss."},{"address":"$038254","length":"4 bytes. Ends at $038257.","beginsAt":229972,"endsAt":229975,"type":"Jump (JML/JSL)","descriptio":"Modified by Big Boo Boss Palette Editor. Changes the way palette is loaded for big boo boss and allows per-level palettes."},{"address":"$0388E9","length":"10 bytes. Ends at $0388F2.","beginsAt":231657,"endsAt":231666,"type":"Jump (JML/JSL)","descriptio":"Modified by Proximity Wraparound fix. Changes Swooper Bat's horizontal proximity check to 16-bit one for if it should swoop at player."},{"address":"$038AAE","length":"4 bytes. Ends at $038AB1.","beginsAt":232110,"endsAt":232113,"type":"Jump (JML/JSL)","descriptio":"Modified by Bowser Statue Jumping SFX, by Yan.\n\nJML, modifies the routine that sets the golden Bowser statue's jumping speed to include a sound effect."},{"address":"$038D6F","length":"4 bytes. Ends at $038D72.","beginsAt":232815,"endsAt":232818,"type":"Jump (JML/JSL)","descriptio":"Modified by Item Box Sprite Fix, by Davros/Romi.\n\nJML, hijacks Info Box sprite Main routine to execute custom blink-fall + positioning code. Optionally disabled."},{"address":"$038E9A","length":"9 bytes. Ends at $038EA2.","beginsAt":233114,"endsAt":233122,"type":"Code","descriptio":"Modified by Moving Castle Block Offscreen Handling Fix. Calls SubOffScreen and then jumps to the main code."},{"address":"$03924E","length":"12 bytes. Ends at $039259.","beginsAt":234062,"endsAt":234073,"type":"Jump (JML/JSL)","descriptio":"Modified by Proximity Wraparound fix. Replaces Falling Spike's horizontal proximity check with 16-bit one."},{"address":"$039890","length":"3 bytes. Ends at $039892.","beginsAt":235664,"endsAt":235666,"type":"Opcode","descriptio":"Modified by No More Sprite Tile Limits. Fixes a bug with the Reznor fight where sprite tiles can briefly disappear due to variable overflow."},{"address":"$0398DE","length":"13 bytes. Ends at $0398EA.","beginsAt":235742,"endsAt":235754,"type":"Code","descriptio":"Modified by Minimalist Course Clear.\n\nWhen modified, this part of the \"Reznor defeated\" code handles freezing sprites if set in the patch's config, playing the SFX and fixing a bug if sprites aren't set to freeze (jumps to freespace made by hijack $00AF2D)."},{"address":"$039B03","length":"4 bytes. Ends at $039B06.","beginsAt":236291,"endsAt":236294,"type":"Jump (JML/JSL)","descriptio":"Used by the Reznor Fireball Fix patch to make the fireballs fired by Reznor use the new flag."},{"address":"$03B690","length":"5 bytes. Ends at $03B694.","beginsAt":243344,"endsAt":243348,"type":"Jump (JML/JSL)","descriptio":"Modified by Reverse Gravity. Fixes interaction with sprites when in reversed gravity mode (doesn't fixes sprites damaging the player when stomping them from below)."},{"address":"$03B6AA","length":"4 bytes. Ends at $03B6AD.","beginsAt":243370,"endsAt":243373,"type":"Jump (JML/JSL)","descriptio":"Part of 'Get Sprite A Clipping' routine hijacked by Custom Sprite Clipping patch so clippings 3C and 3D can be used."},{"address":"$03B6F0","length":"4 bytes. Ends at $03B6F3.","beginsAt":243440,"endsAt":243443,"type":"Jump (JML/JSL)","descriptio":"Part of 'Get Sprite B Clipping' routine hijacked by Custom Sprite Clipping patch so clippings 3C and 3D can be used."},{"address":"$03B86C","length":"3 bytes. Ends at $03B86E.","beginsAt":243820,"endsAt":243822,"type":"Opcode","descriptio":"Modified by Lunar Magic. Changes to \"NOP : NOP : XBA\" for holding the Y low byte."},{"address":"$03B872","length":"4 bytes. Ends at $03B875.","beginsAt":243826,"endsAt":243829,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Used to verify the Y range on the offscreen subroutine."},{"address":"$03B90C","length":"2 bytes. Ends at $03B90D.","beginsAt":243980,"endsAt":243981,"type":"Data","descriptio":"Modified by Magikoopa Palette Correction Patch, corrects Magikoopa's fading in/out palette."},{"address":"$03B91C","length":"2 bytes. Ends at $03B91D.","beginsAt":243996,"endsAt":243997,"type":"Data","descriptio":"Modified by Magikoopa Palette Correction Patch, corrects Magikoopa's fading in/out palette."},{"address":"$03B92C","length":"2 bytes. Ends at $03B92D.","beginsAt":244012,"endsAt":244013,"type":"Data","descriptio":"Modified by Magikoopa Palette Correction Patch, corrects Magikoopa's fading in/out palette."},{"address":"$03B93C","length":"2 bytes. Ends at $03B93D.","beginsAt":244028,"endsAt":244029,"type":"Data","descriptio":"Modified by Magikoopa Palette Correction Patch, corrects Magikoopa's fading in/out palette."},{"address":"$03B94C","length":"2 bytes. Ends at $03B94D.","beginsAt":244044,"endsAt":244045,"type":"Data","descriptio":"Modified by Magikoopa Palette Correction Patch, corrects Magikoopa's fading in/out palette."},{"address":"$03B95C","length":"2 bytes. Ends at $03B95D.","beginsAt":244060,"endsAt":244061,"type":"Data","descriptio":"Modified by Magikoopa Palette Correction Patch, corrects Magikoopa's fading in/out palette."},{"address":"$03B96C","length":"2 bytes. Ends at $03B96D.","beginsAt":244076,"endsAt":244077,"type":"Data","descriptio":"Modified by Magikoopa Palette Correction Patch, corrects Magikoopa's fading in/out palette."},{"address":"$03B97C","length":"2 bytes. Ends at $03B97D.","beginsAt":244092,"endsAt":244093,"type":"Data","descriptio":"Modified by Magikoopa Palette Correction Patch, corrects Magikoopa's fading in/out palette."},{"address":"$03BB20","length":"52 bytes. Ends at $03BB53.","beginsAt":244512,"endsAt":244563,"type":"Code","descriptio":"Modified by Lunar Magic.\nWrites the level name data into the stripe table ($7F837D) to be uploaded during NMI. The table that contains this data can be found using read3($03BB57). Each level there receives 19 bytes for the level name."},{"address":"$03BC7F","length":"16 bytes. Ends at $03BC8E.","beginsAt":244863,"endsAt":244878,"type":"Table","descriptio":"Used by Lunar Magic as a table of stripe headers (at least, the first two bytes of them) for each line of the message box."},{"address":"$03BE80","length":"384 bytes. Ends at $03BFFF.","beginsAt":245376,"endsAt":245759,"type":"Table","descriptio":"Used by Lunar Magic for its level names system. Specifically, this table contains 16-bit indices to the message data table at read3($03BC0B) for each message. This table is indexed as ((translevel number * 2) + message number) * 2.\n\nIf the overworld expansion hijack from LM v2.53 is applied, this table is moved to read3($03BBD9) and modified to contain direct 24-bit pointers for every message, while the index table at read3($03BC0B) is scrapped.\nIn its place, the first 256 bytes are used as the initial level flags (moved from $05DDA0), with the remaining bytes left unused."},{"address":"$03C05C","length":"1 byte","beginsAt":245852,"endsAt":245852,"type":"Hex Edit","descriptio":"Modified by TheBiob's 'Baby Yoshi grow flag' patch. An RTS is written there because originally the game has two routines that do basically the same thing."},{"address":"$03C09B","length":"1 byte","beginsAt":245915,"endsAt":245915,"type":"Hex Edit","descriptio":"Modified by TheBiob's 'Baby Yoshi grow flag' patch. An RTS is written there to fix the double eat glitch."},{"address":"$03C1F9","length":"4 bytes. Ends at $03C1FC.","beginsAt":246265,"endsAt":246268,"type":"Jump (JML/JSL)","descriptio":"Modified by Item Box Sprite Fix, by Davros/Romi.\n\nJML, hijacks Light Switch Box sprite Main routine to execute custom blink-fall + positioning code. Optionally disabled."},{"address":"$03C34C","length":"4 bytes. Ends at $03C34F.","beginsAt":246604,"endsAt":246607,"type":"Jump (JML/JSL)","descriptio":"Modified by Ninji Ceiling Fix. Jumps to the main code."},{"address":"$03C7A1","length":"2 bytes. Ends at $03C7A2.","beginsAt":247713,"endsAt":247714,"type":"Code","descriptio":"Modified by Minimalist Course Clear so it loads a custom waiting value that determines when to fade back to the overworld after beating a boss."},{"address":"$03CE94","length":"2 bytes. Ends at $03CE95.","beginsAt":249492,"endsAt":249493,"type":"Opcode","descriptio":"Modified by Minimalist Course Clear so it loads a custom waiting value that determines when to fade back to the overworld after beating a boss."},{"address":"$03D793","length":"3 bytes. Ends at $03D795.","beginsAt":251795,"endsAt":251797,"type":"Opcode","descriptio":"Modified by Lunar Magic. Remaps ADC.W #$01B0 to ADC.W $13D7."},{"address":"$03E05C","length":"300 bytes. Ends at $03E187.","beginsAt":254044,"endsAt":254343,"type":"24-bit Pointer","descriptio":"PIXI pointers to shared routines. Tool caps it at 100 routines but it really only takes up routines*3 bytes, so anything in this range is use at own risk."},{"address":"$03FE00","length":"512 bytes. Ends at $03FFFF.","beginsAt":261632,"endsAt":262143,"type":"Table","descriptio":"Lunar Magic uses this as a table of the level animation settings for each level. Format: PTLG----\nP = disable original game's palette animations\nT = disable original game's tile animations\nL = disable LM's level animations\nG = disable LM's global animations\n---- = unused"},{"address":"$048086","length":"5 bytes. Ends at $04808A.","beginsAt":295046,"endsAt":295050,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$0480BD","length":"1 byte","beginsAt":295101,"endsAt":295101,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$0480D0","length":"1 byte","beginsAt":295120,"endsAt":295120,"type":"Opcode","descriptio":"Modified by Lunar Magic."},{"address":"$0480E0","length":"5 bytes. Ends at $0480E4.","beginsAt":295136,"endsAt":295140,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$048102","length":"1 byte","beginsAt":295170,"endsAt":295170,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04810D","length":"1 byte","beginsAt":295181,"endsAt":295181,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04813B","length":"1 byte","beginsAt":295227,"endsAt":295227,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$048242","length":"4 bytes. Ends at $048245.","beginsAt":295490,"endsAt":295493,"type":"Jump (JML/JSL)","descriptio":"Hijacked by carol & WhiteYoshiEgg's 'Overworld speed changer' patch. Jumps to the main routine."},{"address":"$04828D","length":"1 byte","beginsAt":295565,"endsAt":295565,"type":"Opcode","descriptio":"Modified by Lunar Magic."},{"address":"$04836E","length":"1 byte","beginsAt":295790,"endsAt":295790,"type":"Opcode","descriptio":"Modified by Lunar Magic."},{"address":"$048380","length":"1 byte","beginsAt":295808,"endsAt":295808,"type":"Opcode","descriptio":"Modified by Lunar Magic."},{"address":"$048414","length":"1 byte","beginsAt":295956,"endsAt":295956,"type":"Opcode","descriptio":"Not modified, however is used by Lunar Magic as an RTL for calling routines that end in RTS in bank 4 with stack magic. So don't modify it."},{"address":"$048509","length":"5 bytes. Ends at $04850D.","beginsAt":296201,"endsAt":296205,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$048566","length":"4 bytes. Ends at $048569.","beginsAt":296294,"endsAt":296297,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic. This handles star roads and pipes."},{"address":"$0485C5","length":"4 bytes. Ends at $0485C8.","beginsAt":296389,"endsAt":296392,"type":"Jump (JML/JSL)","descriptio":"Modified by the Overworld Indicators patch. Main hijack of the patch; draws the actual counter. [JML]"},{"address":"$048E81","length":"10 bytes. Ends at $048E8A.","beginsAt":298625,"endsAt":298634,"type":"Code","descriptio":"Modified by Lunar Magic. Jumps to a routine that handles level names, located at $03BB20."},{"address":"$048F74","length":"4 bytes. Ends at $048F77.","beginsAt":298868,"endsAt":298871,"type":"Jump (JML/JSL)","descriptio":"Kaijyuu's Multi Midway Points 1.7 Patch's part that hijacks the midway point reset code."},{"address":"$048F8A","length":"5 bytes. Ends at $048F8E.","beginsAt":298890,"endsAt":298894,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$049002","length":"1 byte","beginsAt":299010,"endsAt":299010,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04914E","length":"2 bytes. Ends at $04914F.","beginsAt":299342,"endsAt":299343,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$049170","length":"5 bytes. Ends at $049174.","beginsAt":299376,"endsAt":299380,"type":"Code","descriptio":"Modified by Enter Level/Pipe/Star Road Sounds. Modifies the sound when entering a star tile on OW."},{"address":"$049195","length":"4 bytes. Ends at $049198.","beginsAt":299413,"endsAt":299416,"type":"Jump (JML/JSL)","descriptio":"Modified by Enter Level/Pipe/Star Road Sounds. Modifies the sound when entering a pipe tile on OW."},{"address":"$049199","length":"4 bytes. Ends at $04919C.","beginsAt":299417,"endsAt":299420,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$0491E5","length":"4 bytes. Ends at $0491E8.","beginsAt":299493,"endsAt":299496,"type":"Jump (JML/JSL)","descriptio":"Modified by Enter Level/Pipe/Star Road Sounds. Modifies the sound when entering a level tile on OW."},{"address":"$049549","length":"10 bytes. Ends at $049552.","beginsAt":300361,"endsAt":300370,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$049A35","length":"5 bytes. Ends at $049A39.","beginsAt":301621,"endsAt":301625,"type":"Code","descriptio":"Modified by Lunar Magic. This handles the red exit tiles."},{"address":"$049DFE","length":"3 bytes. Ends at $049E00.","beginsAt":302590,"endsAt":302592,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04D7F9","length":"64 bytes. Ends at $04D838.","beginsAt":317433,"endsAt":317496,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04D859","length":"1 byte","beginsAt":317529,"endsAt":317529,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04DA74","length":"3 bytes. Ends at $04DA76.","beginsAt":318068,"endsAt":318070,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04DA98","length":"1 byte","beginsAt":318104,"endsAt":318104,"type":"Opcode","descriptio":"Modified by Lunar Magic."},{"address":"$04DBB9","length":"6 bytes. Ends at $04DBBE.","beginsAt":318393,"endsAt":318398,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04DC3B","length":"2 bytes. Ends at $04DC3C.","beginsAt":318523,"endsAt":318524,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04DC6A","length":"5 bytes. Ends at $04DC6E.","beginsAt":318570,"endsAt":318574,"type":"Code","descriptio":"Modified by the Free $7F0000 patch. Replaces a JSR and a pair of useless processor flag switches for a JSL."},{"address":"$04DC72","length":"2 bytes. Ends at $04DC73.","beginsAt":318578,"endsAt":318579,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04DC79","length":"1 byte","beginsAt":318585,"endsAt":318585,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04DC8D","length":"2 bytes. Ends at $04DC8E.","beginsAt":318605,"endsAt":318606,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04DCA5","length":"4 bytes. Ends at $04DCA8.","beginsAt":318629,"endsAt":318632,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$04DCAA","length":"1 byte","beginsAt":318634,"endsAt":318634,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04DCBC","length":"2 bytes. Ends at $04DCBD.","beginsAt":318652,"endsAt":318653,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04DCC1","length":"1 byte","beginsAt":318657,"endsAt":318657,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04DCFA","length":"4 bytes. Ends at $04DCFD.","beginsAt":318714,"endsAt":318717,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$04DD45","length":"2 bytes. Ends at $04DD46.","beginsAt":318789,"endsAt":318790,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04DD4A","length":"1 byte","beginsAt":318794,"endsAt":318794,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04DD56","length":"1 byte","beginsAt":318806,"endsAt":318806,"type":"Opcode","descriptio":"Modified by the Free $7F0000 patch. Changes an RTS to an RTL."},{"address":"$04E471","length":"3 bytes. Ends at $04E473.","beginsAt":320625,"endsAt":320627,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04E49F","length":"3 bytes. Ends at $04E4A1.","beginsAt":320671,"endsAt":320673,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04E4A4","length":"3 bytes. Ends at $04E4A6.","beginsAt":320676,"endsAt":320678,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04E4B0","length":"1 byte","beginsAt":320688,"endsAt":320688,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04E4BB","length":"2 bytes. Ends at $04E4BC.","beginsAt":320699,"endsAt":320700,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04E4C0","length":"2 bytes. Ends at $04E4C1.","beginsAt":320704,"endsAt":320705,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04E5F1","length":"7 bytes. Ends at $04E5F7.","beginsAt":321009,"endsAt":321015,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$04E5F5","length":"4 bytes. Ends at $04E5F8.","beginsAt":321013,"endsAt":321016,"type":"Jump (JML/JSL)","descriptio":"Modified by the Overworld Indicators patch. Writes to the exit table SRAM synchronizing when a level is beaten. [JML]"},{"address":"$04E622","length":"1 byte","beginsAt":321058,"endsAt":321058,"type":"Opcode","descriptio":"Modified by Lunar Magic."},{"address":"$04E660","length":"1 byte","beginsAt":321120,"endsAt":321120,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04E67C","length":"3 bytes. Ends at $04E67E.","beginsAt":321148,"endsAt":321150,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04E69C","length":"3 bytes. Ends at $04E69E.","beginsAt":321180,"endsAt":321182,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04E6DE","length":"3 bytes. Ends at $04E6E0.","beginsAt":321246,"endsAt":321248,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04E6FA","length":"2 bytes. Ends at $04E6FB.","beginsAt":321274,"endsAt":321275,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04E709","length":"3 bytes. Ends at $04E70B.","beginsAt":321289,"endsAt":321291,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04E710","length":"3 bytes. Ends at $04E712.","beginsAt":321296,"endsAt":321298,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04E73E","length":"1 byte","beginsAt":321342,"endsAt":321342,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04E745","length":"2 bytes. Ends at $04E746.","beginsAt":321349,"endsAt":321350,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04E75E","length":"3 bytes. Ends at $04E760.","beginsAt":321374,"endsAt":321376,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04E9F2","length":"1 byte","beginsAt":322034,"endsAt":322034,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04E9F4","length":"3 bytes. Ends at $04E9F6.","beginsAt":322036,"endsAt":322038,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04E9F7","length":"5 bytes. Ends at $04E9FB.","beginsAt":322039,"endsAt":322043,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04EA27","length":"3 bytes. Ends at $04EA29.","beginsAt":322087,"endsAt":322089,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04EA32","length":"3 bytes. Ends at $04EA34.","beginsAt":322098,"endsAt":322100,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04EA38","length":"3 bytes. Ends at $04EA3A.","beginsAt":322104,"endsAt":322106,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04EAAE","length":"2 bytes. Ends at $04EAAF.","beginsAt":322222,"endsAt":322223,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04EACC","length":"10 bytes. Ends at $04EAD5.","beginsAt":322252,"endsAt":322261,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04EACC","length":"11 bytes. Ends at $04EAD6.","beginsAt":322252,"endsAt":322262,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04EAD8","length":"2 bytes. Ends at $04EAD9.","beginsAt":322264,"endsAt":322265,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04EAF5","length":"3 bytes. Ends at $04EAF7.","beginsAt":322293,"endsAt":322295,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04EC8C","length":"3 bytes. Ends at $04EC8E.","beginsAt":322700,"endsAt":322702,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04ECBA","length":"3 bytes. Ends at $04ECBC.","beginsAt":322746,"endsAt":322748,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04ECC5","length":"3 bytes. Ends at $04ECC7.","beginsAt":322757,"endsAt":322759,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04ED97","length":"3 bytes. Ends at $04ED99.","beginsAt":322967,"endsAt":322969,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04EDB8","length":"3 bytes. Ends at $04EDBA.","beginsAt":323000,"endsAt":323002,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04EDBE","length":"3 bytes. Ends at $04EDC0.","beginsAt":323006,"endsAt":323008,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04EE3F","length":"3 bytes. Ends at $04EE41.","beginsAt":323135,"endsAt":323137,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04EE5A","length":"3 bytes. Ends at $04EE5C.","beginsAt":323162,"endsAt":323164,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04EE5E","length":"2 bytes. Ends at $04EE5F.","beginsAt":323166,"endsAt":323167,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04EEC9","length":"3 bytes. Ends at $04EECB.","beginsAt":323273,"endsAt":323275,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F2B7","length":"3 bytes. Ends at $04F2B9.","beginsAt":324279,"endsAt":324281,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F2BE","length":"3 bytes. Ends at $04F2C0.","beginsAt":324286,"endsAt":324288,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F2C5","length":"3 bytes. Ends at $04F2C7.","beginsAt":324293,"endsAt":324295,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F2CC","length":"3 bytes. Ends at $04F2CE.","beginsAt":324300,"endsAt":324302,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F2D2","length":"3 bytes. Ends at $04F2D4.","beginsAt":324306,"endsAt":324308,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F2D6","length":"3 bytes. Ends at $04F2D8.","beginsAt":324310,"endsAt":324312,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F2DF","length":"3 bytes. Ends at $04F2E1.","beginsAt":324319,"endsAt":324321,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F2E6","length":"3 bytes. Ends at $04F2E8.","beginsAt":324326,"endsAt":324328,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F2EC","length":"3 bytes. Ends at $04F2EE.","beginsAt":324332,"endsAt":324334,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F32C","length":"3 bytes. Ends at $04F32E.","beginsAt":324396,"endsAt":324398,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F33B","length":"3 bytes. Ends at $04F33D.","beginsAt":324411,"endsAt":324413,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F33F","length":"3 bytes. Ends at $04F341.","beginsAt":324415,"endsAt":324417,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F344","length":"3 bytes. Ends at $04F346.","beginsAt":324420,"endsAt":324422,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F39E","length":"3 bytes. Ends at $04F3A0.","beginsAt":324510,"endsAt":324512,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F3A7","length":"3 bytes. Ends at $04F3A9.","beginsAt":324519,"endsAt":324521,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F3AB","length":"3 bytes. Ends at $04F3AD.","beginsAt":324523,"endsAt":324525,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F3AF","length":"3 bytes. Ends at $04F3B1.","beginsAt":324527,"endsAt":324529,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F3C0","length":"3 bytes. Ends at $04F3C2.","beginsAt":324544,"endsAt":324546,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F3C4","length":"3 bytes. Ends at $04F3C6.","beginsAt":324548,"endsAt":324550,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F3CA","length":"3 bytes. Ends at $04F3CC.","beginsAt":324554,"endsAt":324556,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F3CE","length":"3 bytes. Ends at $04F3D0.","beginsAt":324558,"endsAt":324560,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04F4B2","length":"85 bytes. Ends at $04F506.","beginsAt":324786,"endsAt":324870,"type":"Data","descriptio":"Modified by 999 lives, it's the stripe data for the edited \"Lives Exchange\" image."},{"address":"$04F594","length":"2 bytes. Ends at $04F595.","beginsAt":325012,"endsAt":325013,"type":"Opcode","descriptio":"[to LDY #$54] Modified by 999 lives. It's the length-1 of the \"Exchange Lives\" stripe image. The original one was 81 bytes long."},{"address":"$04F5B7","length":"8 bytes. Ends at $04F5BE.","beginsAt":325047,"endsAt":325054,"type":"Code","descriptio":"Modified by 999 lives to draw Mario's halo during the \"Lives Exchange\" system without glitching up."},{"address":"$04F5C7","length":"8 bytes. Ends at $04F5CE.","beginsAt":325063,"endsAt":325070,"type":"Code","descriptio":"Modified by 999 lives to draw Luigi's halo during the \"Lives Exhange\" system without glitching up."},{"address":"$04F5E2","length":"3 bytes. Ends at $04F5E4.","beginsAt":325090,"endsAt":325092,"type":"Opcode","descriptio":"Modified by 999 lives. Loads the relocated stripe image data for the arrow that shows up during the \"Exchange Lives\" system."},{"address":"$04F5E5","length":"4 bytes. Ends at $04F5E8.","beginsAt":325093,"endsAt":325096,"type":"Opcode","descriptio":"Modified by 999 lives, fixes where the direction during the \"Exchange Lives\" system gets stored."},{"address":"$04F5EC","length":"4 bytes. Ends at $04F5EF.","beginsAt":325100,"endsAt":325103,"type":"Opcode","descriptio":"Modified by 999 lives, fixes where the direction during the \"Exchange Lives\" system gets stored."},{"address":"$04F5F3","length":"4 bytes. Ends at $04F5F6.","beginsAt":325107,"endsAt":325110,"type":"Opcode","descriptio":"Modified by 999 lives, fixes where the direction during the \"Exchange Lives\" system gets stored."},{"address":"$04F5FA","length":"4 bytes. Ends at $04F5FD.","beginsAt":325114,"endsAt":325117,"type":"Code","descriptio":"Modified by 999 lives, fixes where the direction during the \"Exchange Lives\" system gets stored."},{"address":"$04F600","length":"4 bytes. Ends at $04F603.","beginsAt":325120,"endsAt":325123,"type":"Jump (JML/JSL)","descriptio":"Modified by 999 lives. This jump draws the extended lives numbers in the \"Exchange Lives\" system."},{"address":"$04F604","length":"1 byte","beginsAt":325124,"endsAt":325124,"type":"Opcode","descriptio":"Modified by 999 lives. It writes a RTS here to return to the bank."},{"address":"$04F605","length":"4 bytes. Ends at $04F608.","beginsAt":325125,"endsAt":325128,"type":"Jump (JMP/JSR)","descriptio":"Modified by 999 lives, it's the new table for the arrow that appears during the \"Lives Exchange\" system."},{"address":"$04F709","length":"1 byte","beginsAt":325385,"endsAt":325385,"type":"Code","descriptio":"Modified by Lunar Magic; it changes which submaps have the thunder effect enabled, see the ROM Map for more info."},{"address":"$04F767","length":"4 bytes. Ends at $04F76A.","beginsAt":325479,"endsAt":325482,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$04FBA2","length":"1 byte","beginsAt":326562,"endsAt":326562,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04FD86","length":"2 bytes. Ends at $04FD87.","beginsAt":327046,"endsAt":327047,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04FD89","length":"1 byte","beginsAt":327049,"endsAt":327049,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$04FD8A","length":"1 byte","beginsAt":327050,"endsAt":327050,"type":"Opcode","descriptio":"Modified by Lunar Magic."},{"address":"$05803B","length":"4 bytes. Ends at $05803E.","beginsAt":360507,"endsAt":360510,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$0580A9","length":"4 bytes. Ends at $0580AC.","beginsAt":360617,"endsAt":360620,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$0580BF","length":"4 bytes. Ends at $0580C2.","beginsAt":360639,"endsAt":360642,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$0580C3","length":"4 bytes. Ends at $0580C6.","beginsAt":360643,"endsAt":360646,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$0580C7","length":"4 bytes. Ends at $0580CA.","beginsAt":360647,"endsAt":360650,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$0580D3","length":"3 bytes. Ends at $0580D5.","beginsAt":360659,"endsAt":360661,"type":"Jump (JMP/JSR)","descriptio":"Modified by Lunar Magic."},{"address":"$0583AD","length":"5 bytes. Ends at $0583B1.","beginsAt":361389,"endsAt":361393,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$0583B8","length":"5 bytes. Ends at $0583BC.","beginsAt":361400,"endsAt":361404,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic, for a jump to the ExGFX processing routine at $0FF7F0."},{"address":"$058605","length":"5 bytes. Ends at $058609.","beginsAt":361989,"endsAt":361993,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$0586A1","length":"17 bytes. Ends at $0586B1.","beginsAt":362145,"endsAt":362161,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$0586F7","length":"4 bytes. Ends at $0586FA.","beginsAt":362231,"endsAt":362234,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$05879D","length":"5 bytes. Ends at $0587A1.","beginsAt":362397,"endsAt":362401,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$058A18","length":"3 bytes. Ends at $058A1A.","beginsAt":363032,"endsAt":363034,"type":"Opcode","descriptio":"Modified by Lunar Magic. Changes \"AND.W #$01F0\" to \"AND.W #$3FF0\"."},{"address":"$058A65","length":"4 bytes. Ends at $058A68.","beginsAt":363109,"endsAt":363112,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$058AF4","length":"3 bytes. Ends at $058AF6.","beginsAt":363252,"endsAt":363254,"type":"Opcode","descriptio":"Modified by Lunar Magic. Changes \"AND.W #$01F0\" to \"AND.W #$3FF0\"."},{"address":"$058B22","length":"1 byte","beginsAt":363298,"endsAt":363298,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$058B45","length":"4 bytes. Ends at $058B48.","beginsAt":363333,"endsAt":363336,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$058BE6","length":"3 bytes. Ends at $058BE8.","beginsAt":363494,"endsAt":363496,"type":"Opcode","descriptio":"Modified by Lunar Magic. Changes \"AND.W #$01F0\" to \"AND.W #$3FF0\"."},{"address":"$058C33","length":"4 bytes. Ends at $058C36.","beginsAt":363571,"endsAt":363574,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$058CD9","length":"3 bytes. Ends at $058CDB.","beginsAt":363737,"endsAt":363739,"type":"Opcode","descriptio":"Modified by Lunar Magic. Changes \"AND.W #$01F0\" to \"AND.W #$3FF0\"."},{"address":"$058D2A","length":"4 bytes. Ends at $058D2D.","beginsAt":363818,"endsAt":363821,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$058DA4","length":"5 bytes. Ends at $058DA8.","beginsAt":363940,"endsAt":363944,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$058DB1","length":"3 bytes. Ends at $058DB3.","beginsAt":363953,"endsAt":363955,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$058DB9","length":"3 bytes. Ends at $058DBB.","beginsAt":363961,"endsAt":363963,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$058DCA","length":"2 bytes. Ends at $058DCB.","beginsAt":363978,"endsAt":363979,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$058E12","length":"3 bytes. Ends at $058E14.","beginsAt":364050,"endsAt":364052,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$05B15D","length":"3 bytes. Ends at $05B15F.","beginsAt":373085,"endsAt":373087,"type":"Code","descriptio":"Modified by Lunar Magic. Part of the Sprite 19 fix."},{"address":"$05B1A3","length":"7 bytes. Ends at $05B1A9.","beginsAt":373155,"endsAt":373161,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$05C40C","length":"5 bytes. Ends at $05C410.","beginsAt":377868,"endsAt":377872,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$05C727","length":"5 bytes. Ends at $05C72B.","beginsAt":378663,"endsAt":378667,"type":"Jump (JML/JSL)","descriptio":"Modified by On/Off Layer 2 Generator Fix, by GreenHammerBro.\n\nJML : NOP, modifies the on/off Layer 2 scroll command to reset the \"hit ground\" flag when rising."},{"address":"$05C75D","length":"6 bytes. Ends at $05C762.","beginsAt":378717,"endsAt":378722,"type":"Jump (JML/JSL)","descriptio":"Modified by On/Off Layer 2 Generator Fix, by GreenHammerBro.\n\nJML : NOP #2, modifies the on/off Layer 2 scroll command to set a \"hit ground\" flag, shaking the screen and playing a sound only once."},{"address":"$05CC66","length":"2 bytes. Ends at $05CC67.","beginsAt":380006,"endsAt":380007,"type":"Hex Edit","descriptio":"Modified by Course Clear Coins, by MarioFanGamer.\n\nBRA $1C, disables awarding a 1-up if the tens and ones digit of the timer are both equal to the tens digit of bonus stars received. Optionally enabled."},{"address":"$05CC84","length":"5 bytes. Ends at $05CC88.","beginsAt":380036,"endsAt":380040,"type":"Jump (JML/JSL)","descriptio":"Hijacked by NSMB Star Coins: This one saves all collected coins through beating a level with a goal post/sphere."},{"address":"$05CD51","length":"2 bytes. Ends at $05CD52.","beginsAt":380241,"endsAt":380242,"type":"Data","descriptio":"Modified by Course Clear Coins, by MarioFanGamer.\n\nReplaces the red \"★\" on the \"COURSE CLEAR!\" text with a yellow coin icon."},{"address":"$05CF12","length":"12 bytes. Ends at $05CF1D.","beginsAt":380690,"endsAt":380701,"type":"Hex Edit","descriptio":"Modified by Course Clear Coins, by MarioFanGamer.\n\nINC $13CC : BRA $07 : NOP #7, modifies the \"COURSE CLEAR!\" bonus star awarding routine to award coins instead."},{"address":"$05D79B","length":"6 bytes. Ends at $05D7A0.","beginsAt":382875,"endsAt":382880,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$05D7B9","length":"4 bytes. Ends at $05D7BC.","beginsAt":382905,"endsAt":382908,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$05D7CE","length":"4 bytes. Ends at $05D7D1.","beginsAt":382926,"endsAt":382929,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$05D7E2","length":"5 bytes. Ends at $05D7E6.","beginsAt":382946,"endsAt":382950,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic. Transfers Y into X, then JSLs to a routine that uses long addressing to index secondary entrance table $05F800 or its expanded version."},{"address":"$05D7EA","length":"5 bytes. Ends at $05D7EE.","beginsAt":382954,"endsAt":382958,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic. Transfers Y into X, then JSLs to a routine that uses long addressing to index secondary entrance table $05FA00 or its expanded version."},{"address":"$05D81C","length":"5 bytes. Ends at $05D820.","beginsAt":383004,"endsAt":383008,"type":"Jump (JMP/JSR)","descriptio":"Modified by Lunar Magic. Transfers Y into X, then JSLs to a routine that uses long addressing to index secondary entrance table $05FC00 or its expanded version."},{"address":"$05D836","length":"5 bytes. Ends at $05D83A.","beginsAt":383030,"endsAt":383034,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$05D842","length":"4 bytes. Ends at $05D845.","beginsAt":383042,"endsAt":383045,"type":"Jump (JML/JSL)","descriptio":"The main jump of Kaijyuu's Multi Midway Points 1.7 Patch."},{"address":"$05D8B1","length":"4 bytes. Ends at $05D8B4.","beginsAt":383153,"endsAt":383156,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$05D8B7","length":"39 bytes. Ends at $05D8DD.","beginsAt":383159,"endsAt":383197,"type":"Code","descriptio":"Modified by UberASM and other patches and tools.\n\nStores the current level number to $010B. Differs from the levelnum.ips patch in that this one uses no freespace."},{"address":"$05D8E2","length":"4 bytes. Ends at $05D8E5.","beginsAt":383202,"endsAt":383205,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic.\n\nStores the current level number plus one to $FE, address used to load custom palettes."},{"address":"$05D8F5","length":"4 bytes. Ends at $05D8F8.","beginsAt":383221,"endsAt":383224,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$05D8FB","length":"2 bytes. Ends at $05D8FC.","beginsAt":383227,"endsAt":383228,"type":"Opcode","descriptio":"Modified by Lunar Magic. Changes \"AND.b #$3F\" to \"AND.b #$1F\"."},{"address":"$05D979","length":"4 bytes. Ends at $05D97C.","beginsAt":383353,"endsAt":383356,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$05D97D","length":"4 bytes. Ends at $05D980.","beginsAt":383357,"endsAt":383360,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$05D984","length":"4 bytes. Ends at $05D987.","beginsAt":383364,"endsAt":383367,"type":"Jump (JML/JSL)","descriptio":"Modified by Sprite Initial Facing Fix, by Alcaro.\n\nJSL, modifies a portion of the level load player position init routine to set $94 - $97 and $D1 - $D4 equivalently."},{"address":"$05D9A1","length":"4 bytes. Ends at $05D9A4.","beginsAt":383393,"endsAt":383396,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Main hijack of the Dynamic Levels patch. It builds a lookup table though $7E:0BF6, $7E:0C56, $7E:0CB6 and $7E:0CD6 for indexing the map16 tables, sets $7E:13D7 (level height) value, $7E:1936 (level height - #$0010), $7E:0BF4 (sprite loader settings) and $7E:0BF5 (dynamic level settings)."},{"address":"$05D9C3","length":"1 byte","beginsAt":383427,"endsAt":383427,"type":"Opcode","descriptio":"Modified by Lunar Magic."},{"address":"$05D9DE","length":"4 bytes. Ends at $05D9E1.","beginsAt":383454,"endsAt":383457,"type":"Jump (JML/JSL)","descriptio":"Jumps to secondary exit handling code so Kaijyuu's Multi Midway Point 1.7 Patch can use them as midway points without messing with the original midway entrance."},{"address":"$05D9E3","length":"4 bytes. Ends at $05D9E6.","beginsAt":383459,"endsAt":383462,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic.\n\nUsed to handle LM's seperate midway point entrance functionality. The three 512-byte tables associated with it can be found in order at read3(read3($05D9E4)+$0A)."},{"address":"$05D9E8","length":"4 bytes. Ends at $05D9EB.","beginsAt":383464,"endsAt":383467,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$05D9FC","length":"4 bytes. Ends at $05D9FF.","beginsAt":383484,"endsAt":383487,"type":"Jump (JML/JSL)","descriptio":"Modified by Sprite Initial Facing Fix, by Alcaro.\n\nJML, modifies a portion of the level load player position init routine to set $94 - $97 and $D1 - $D4 equivalently."},{"address":"$05DA03","length":"4 bytes. Ends at $05DA06.","beginsAt":383491,"endsAt":383494,"type":"Jump (JML/JSL)","descriptio":"Modified by Sprite Initial Facing Fix, by Alcaro.\n\nJSL, modifies a portion of the level load player position init routine to set $94 - $97 and $D1 - $D4 equivalently."},{"address":"$05DA17","length":"5 bytes. Ends at $05DA1B.","beginsAt":383511,"endsAt":383515,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$05DA7F","length":"1 byte","beginsAt":383615,"endsAt":383615,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$05DA83","length":"1 byte","beginsAt":383619,"endsAt":383619,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$05DA8A","length":"4 bytes. Ends at $05DA8D.","beginsAt":383626,"endsAt":383629,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Rebuilds the level height table for chocolate island special levels."},{"address":"$05DAA3","length":"4 bytes. Ends at $05DAA6.","beginsAt":383651,"endsAt":383654,"type":"Jump (JML/JSL)","descriptio":"A hijack from Kaijyuu's Multi Midway Points 1.7 Patch that makes secondary exits compatible with 'No Yoshi' intros."},{"address":"$05DAE6","length":"1 byte","beginsAt":383718,"endsAt":383718,"type":"Opcode","descriptio":"Modified by Lunar Magic."},{"address":"$05DB5F","length":"4 bytes. Ends at $05DB62.","beginsAt":383839,"endsAt":383842,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Rebuilds the level height table for chocolate island special levels."},{"address":"$05DBC2","length":"6 bytes. Ends at $05DBC7.","beginsAt":383938,"endsAt":383943,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$05DBF2","length":"4 bytes. Ends at $05DBF5.","beginsAt":383986,"endsAt":383989,"type":"Jump (JML/JSL)","descriptio":"Modified by 999 lives, handles the lives' code during the overworld and when exchanging them."},{"address":"$05DC81","length":"3 bytes. Ends at $05DC83.","beginsAt":384129,"endsAt":384131,"type":"24-bit Pointer","descriptio":"Modified by Lunar Magic. The location of secondary entrance table $05FE00 or its expanded version in ROMs modified with Lunar Magic 2.50+."},{"address":"$05DDA0","length":"96 bytes. Ends at $05DDFF.","beginsAt":384416,"endsAt":384511,"type":"Data","descriptio":"Used by LM for the initial flags of each level (as stored to $1EA2).\n\nIf the overworld expansion hijack from LM v2.53 is applied, the table is instead moved to $03BE80, while these bytes are left unused."},{"address":"$05DE00","length":"512 bytes. Ends at $05DFFF.","beginsAt":384512,"endsAt":385023,"type":"Data","descriptio":"Added by Lunar Magic as a fifth byte of each level's secondary level header. Format: LWPYX---\nL - Slippery flag\nW - Water flag\nP - Flag to use X/Y position method 2\nY - Bit 5 of the entrance Y position for method 2\nX - Bit 4 of the entrance X position for method 2\n(X/Y are switched in vertical levels)"},{"address":"$06F540","length":"182 bytes. Ends at $06F5F5.","beginsAt":456000,"endsAt":456181,"type":"Jump (JML/JSL)","descriptio":"Used by Lunar Magic as a routine to get a particular Map16 tile's VRAM data (tile number/YXPPCCCT for each of its four tiles). To use, A/X/Y must be 16-bit, and A must contain the tile number multiplied by 2. It returns the lower two bytes of the pointer in A and the bank byte in both the high byte of Y and in $0C (for usages as a 24-bit pointer at $0A).\nAlternative entries to the routine are at $06F5D0 (which returns the bank byte in $06 for a pointer at $04 instead of $0A), and $06F5E4 (which directly stores the full pointer into $65).\n\nPages 0/1 are handled via the original system (a pointer table to data at $0FBE).\nPages 2-7F are then handled by directly indexing their data tables. Each set of 0x10 pages uses a different table; they can each be found with the following calculations:\n02-0F: read1($06F557)<<16|(read2($06F553)+$1000&$FFFF)\n10-1F: read1($06F560)<<16|(read2($06F55C)+$8000&$FFFF)\n20-2F: read1($06F56B)<<16|read2($06F567)+1\n30-3F: read1($06F574)<<16|(read2($06F570)+$8000&$FFFF)+1\n40-4F: read1($06F598)<<16|read2($06F594)\n50-5F: read1($06F5A1)<<16|(read2($06F59D)+$8000&$FFFF)\n60-6F: read1($06F5AC)<<16|read2($06F5A8)+1\n70-7F: read1($06F5B5)<<16|(read2($06F5B1)+$8000&$FFFF)+1\n\nIn addition, if page 2 is set to use tileset-specific Map16 (which can be determined by checking if $06F547 is non-zero), then its data can be found at (read1($06F58A)<<16|read2($06F586))+$1000. In that table, each tileset receives 0x800 bytes, so you can find a particular tile's data by indexing as 0ttttbbb bbbbb000, where tttt is the FG/BG tileset and bbbbbbbb is the low byte of the tile number."},{"address":"$06F608","length":"60 bytes. Ends at $06F643.","beginsAt":456200,"endsAt":456259,"type":"Jump (JMP/JSR)","descriptio":"Used by Lunar Magic as a routine to get a Map16 tile's true acts-like setting (i.e. a value less than 0x200). It returns the 16-bit result in $03, as well as the low byte in $1693 and high byte in Y.\n\nAdditionally, the tables used to hold the Map16 tile acts-like settings can be found at the following locations:\nPages 00-3F: read3($06F624)\nPages 40-7F: read3($06F63A)\nEach block in these tables receives two bytes, as its 16-bit acts-like setting. To find the true acts-like setting (i.e. a value less than 0x200), simply perform repeated lookups on these tables until a valid value is returned."},{"address":"$06F690","length":"16 bytes. Ends at $06F69F.","beginsAt":456336,"endsAt":456351,"type":"Hex Edit","descriptio":"Used by Lunar Magic. This area allows you to insert custom Map16 interactions if Mario hits a tile from below."},{"address":"$06F6A0","length":"16 bytes. Ends at $06F6AF.","beginsAt":456352,"endsAt":456367,"type":"Hex Edit","descriptio":"Used by Lunar Magic. This area allows you to insert custom Map16 interactions if Mario touches a tile from above."},{"address":"$06F6B0","length":"16 bytes. Ends at $06F6BF.","beginsAt":456368,"endsAt":456383,"type":"Hex Edit","descriptio":"Used by Lunar Magic. This area allows you to insert custom Map16 interactions if Mario touches a tile horizontally."},{"address":"$06F6C0","length":"16 bytes. Ends at $06F6CF.","beginsAt":456384,"endsAt":456399,"type":"Hex Edit","descriptio":"Used by Lunar Magic. This area allows you to insert custom Map16 interactions if Mario touches a tile on the top corners (which corner doesn't matter als long as they are from the top side)."},{"address":"$06F6D0","length":"16 bytes. Ends at $06F6DF.","beginsAt":456400,"endsAt":456415,"type":"Hex Edit","descriptio":"Used by Lunar Magic. This area allows you to insert custom Map16 interactions if Mario touches a tile with the lower half of his body (i.e. excluding his head)."},{"address":"$06F6E0","length":"16 bytes. Ends at $06F6EF.","beginsAt":456416,"endsAt":456431,"type":"Hex Edit","descriptio":"Used by Lunar Magic. This area allows you to insert custom Map16 interactions if Mario touches a tile with the upper half of his body (i.e. the head but not the rest of the body)."},{"address":"$06F720","length":"16 bytes. Ends at $06F72F.","beginsAt":456480,"endsAt":456495,"type":"Hex Edit","descriptio":"Used by Lunar Magic. This area allows you to insert custom Map16 interactions if a sprite touches a tile vertically (which side doesn't matter)"},{"address":"$06F730","length":"16 bytes. Ends at $06F73F.","beginsAt":456496,"endsAt":456511,"type":"Hex Edit","descriptio":"Used by Lunar Magic. This area allows you to insert custom Map16 interactions if a sprite touches a tile horizontally (which side doesn't matter)"},{"address":"$06F780","length":"16 bytes. Ends at $06F78F.","beginsAt":456576,"endsAt":456591,"type":"Hex Edit","descriptio":"Used by Lunar Magic. This area allows you to insert custom Map16 interactions if Mario touches a tile with his cape."},{"address":"$06F7C0","length":"16 bytes. Ends at $06F7CF.","beginsAt":456640,"endsAt":456655,"type":"Hex Edit","descriptio":"Used by Lunar Magic. This area allows you to insert custom Map16 interactions if Mario's fireball touches a tile."},{"address":"$07F1AA","length":"32 bytes. Ends at $07F1C9.","beginsAt":520618,"endsAt":520649,"type":"Data","descriptio":"Modified by Goal Tape Gives Score patch. Changes bonus star reward table into a score reward table."},{"address":"$07F25D","length":"5 bytes. Ends at $07F261.","beginsAt":520797,"endsAt":520801,"type":"Code","descriptio":"Modified by Goal Tape Gives Score patch. Makes goal always give score on hit."},{"address":"$07F26C","length":"1 byte","beginsAt":520812,"endsAt":520812,"type":"Data","descriptio":"Modified by PIXI's poison mushroom patch.\nSprite's $1656 value. Note that the actual hijack location depends on the sprite slot chosen. For example, if the sprite is inserted in slot $85, then the hijack location is ($07F26C + ($85) = $07F2F1)."},{"address":"$07F335","length":"1 byte","beginsAt":521013,"endsAt":521013,"type":"Data","descriptio":"Modified by PIXI's poison mushroom patch.\nSprite's $1662 value. Note that the actual hijack location depends on the sprite slot chosen. For example, if the sprite is inserted in slot $85, then the hijack location is ($07F3BA + ($85) = $07F43F)."},{"address":"$07F3FE","length":"1 byte","beginsAt":521214,"endsAt":521214,"type":"Data","descriptio":"Modified by PIXI's poison mushroom patch.\nSprite's $166E value. Note that the actual hijack location depends on the sprite slot chosen. For example, if the sprite is inserted in slot $85, then the hijack location is ($07F3FE + ($85) = $07F483)."},{"address":"$07F43C","length":"1 byte","beginsAt":521276,"endsAt":521276,"type":"Data","descriptio":"Modified by Item Box Sprite Fix, by Davros/Romi.\n\ndb $36, modifies P-Switch sprite tweaker info 166E to ensure proper palette in custom state."},{"address":"$07F451","length":"1 byte","beginsAt":521297,"endsAt":521297,"type":"Data","descriptio":"Modified by Item Box Sprite Fix, by Davros/Romi.\n\ndb $36, modifies Throw Block sprite tweaker info 166E to ensure proper palette in custom state."},{"address":"$07F4C7","length":"1 byte","beginsAt":521415,"endsAt":521415,"type":"Data","descriptio":"Modified by PIXI's poison mushroom patch.\nSprite's $167A value. Note that the actual hijack location depends on the sprite slot chosen. For example, if the sprite is inserted in slot $85, then the hijack location is ($07F4C7 + ($85) = $07F54C)."},{"address":"$07F590","length":"1 byte","beginsAt":521616,"endsAt":521616,"type":"Data","descriptio":"Modified by PIXI's poison mushroom patch.\nSprite's $1686 value. Note that the actual hijack location depends on the sprite slot chosen. For example, if the sprite is inserted in slot $85, then the hijack location is ($07F590 + ($85) = $07F615)."},{"address":"$07F659","length":"1 byte","beginsAt":521817,"endsAt":521817,"type":"Data","descriptio":"Modified by PIXI's poison mushroom patch.\nSprite's $190F value. Note that the actual hijack location depends on the sprite slot chosen. For example, if the sprite is inserted in slot $85, then the hijack location is ($07F659 + ($85) = $07F6DE)."},{"address":"$07F77F","length":"6 bytes. Ends at $07F784.","beginsAt":522111,"endsAt":522116,"type":"Jump (JML/JSL)","descriptio":"Modified by the \"Takes 5 fireballs to kill\" Work-around Patch.\n\nThis hijack extends the sprite tables reset routine to also reset the new \"fireball hit counter\" sprite table, defined by the freeRAM provided."},{"address":"$0C9436","length":"4 bytes. Ends at $0C9439.","beginsAt":824374,"endsAt":824377,"type":"Jump (JML/JSL)","descriptio":"Hijacked by Lunar Magic. Rebuilds the level height table for credits. The credits still uses the level layout like a normal level."},{"address":"$0C9EEB","length":"96 bytes. Ends at $0C9F4A.","beginsAt":827115,"endsAt":827210,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$0CAE0F","length":"2 bytes. Ends at $0CAE10.","beginsAt":830991,"endsAt":830992,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$0CB66E","length":"300 bytes. Ends at $0CB799.","beginsAt":833134,"endsAt":833433,"type":"24-bit Pointer","descriptio":"GPS pointer table for shared routine. Tool caps at 100 routines with the pointers being 3 bytes long each (taking 300 bytes in total if you hit the cap)."},{"address":"$0DA532","length":"1 byte","beginsAt":894258,"endsAt":894258,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$0DA536","length":"2 bytes. Ends at $0DA537.","beginsAt":894262,"endsAt":894263,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$0DA62B","length":"4 bytes. Ends at $0DA62E.","beginsAt":894507,"endsAt":894510,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$0DA916","length":"4 bytes. Ends at $0DA919.","beginsAt":895254,"endsAt":895257,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$0DA924","length":"4 bytes. Ends at $0DA927.","beginsAt":895268,"endsAt":895271,"type":"Jump (JML/JSL)","descriptio":"Modified by the \"Beat level by collecting all of the coins\" patch. Jumps to a routine which counts how many coin objects are in the level."},{"address":"$0DA963","length":"17 bytes. Ends at $0DA973.","beginsAt":895331,"endsAt":895347,"type":"Code","descriptio":"Modified by Lunar Magic. Increments $6B-$6C/$6E-$6F by the current level height ($13D7) instead of constant #$01B0."},{"address":"$0DA9D6","length":"25 bytes. Ends at $0DA9EE.","beginsAt":895446,"endsAt":895470,"type":"Code","descriptio":"Modified by Lunar Magic. Decrements $6B-$6C/$6E-$6F/$04-$05 by the current level height ($13D7) instead of constant #$01B0. Also decrements $1BA1."},{"address":"$0DA9EF","length":"22 bytes. Ends at $0DAA04.","beginsAt":895471,"endsAt":895492,"type":"Code","descriptio":"Modified by Lunar Magic. Increments $6B-$6C/$6E-$6F/$04-$05 by the current level height ($13D7) instead of constant #$01B0. Also increments $1BA1."},{"address":"$0DB318","length":"4 bytes. Ends at $0DB31B.","beginsAt":897816,"endsAt":897819,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$0DB384","length":"4 bytes. Ends at $0DB387.","beginsAt":897924,"endsAt":897927,"type":"Jump (JML/JSL)","descriptio":"Modified by Lunar Magic."},{"address":"$0DBADC","length":"39 bytes. Ends at $0DBB02.","beginsAt":899804,"endsAt":899842,"type":"Code","descriptio":"Modified by Forest Treetop Fix. Makes forest treetops able to be positioned at any Y position inside a level."},{"address":"$0DBB16","length":"13 bytes. Ends at $0DBB22.","beginsAt":899862,"endsAt":899874,"type":"Code","descriptio":"Modified by Lunar Magic."},{"address":"$0DE190","length":"7 bytes. Ends at $0DE196.","beginsAt":909712,"endsAt":909718,"type":"Code","descriptio":"Used by Lunar Magic. Routine that indexes secondary entrance table $05F800 or its expanded version with long addressing. $0DE191 is the 24-bit pointer to the location of secondary entrance table $05F800 or its expanded version in ROMs modified with Lunar Magic 2.50+."},{"address":"$0DE197","length":"7 bytes. Ends at $0DE19D.","beginsAt":909719,"endsAt":909725,"type":"Code","descriptio":"Used by Lunar Magic. Routine that indexes secondary entrance table $05FA00 or its expanded version with long addressing. $0DE198 is the 24-bit pointer to the location of secondary entrance table $05FA00 or its expanded version in ROMs modified with Lunar Magic 2.50+."},{"address":"$0DE19E","length":"7 bytes. Ends at $0DE1A4.","beginsAt":909726,"endsAt":909732,"type":"Code","descriptio":"Used by Lunar Magic. Routine that indexes secondary entrance table $05FC00 or its expanded version with long addressing. $0DE19F is the 24-bit pointer to the location of secondary entrance table $05FC00 or its expanded version in ROMs modified with Lunar Magic 2.50+."},{"address":"$0EF0F0","length":"3856 bytes. Ends at $0EFFFF.","beginsAt":979184,"endsAt":983039,"type":"Miscellaneous","descriptio":"Originally empty and not modified by Lunar Magic, however if $0EF30C-$0EF30E contains an address to a sprite extra byte table and have $0EF30F holds a value of $42, Lunar magic will enable extra bit customization for placing sprites."},{"address":"$0EF100","length":"512 bytes. Ends at $0EF2FF.","beginsAt":979200,"endsAt":979711,"type":"Table","descriptio":"Modified by LM.\n\nThis table contains the bank bytes of every level's sprite data pointer."},{"address":"$0EF310","length":"512 bytes. Ends at $0EF50F.","beginsAt":979728,"endsAt":980239,"type":"Table","descriptio":"Used by LM as a table of Layer 2-related data for each level. Format: bbBB-LD-\nD = What type of data the layer 2 is: object (0) or tilemap (1)\nL = Flag to indicate the usage of the high nibble\nBB = When L bit is set: Map16 bank to use for the BG\nbbBB = When L bit is clear: used as the high byte for all BG Map16 tiles (deprecated?)\n-- = Unused"},{"address":"$0EF55D","length":"3 bytes. Ends at $0EF55F.","beginsAt":980317,"endsAt":980319,"type":"24-bit Pointer","descriptio":"Used by Lunar Magic as a 24-bit pointer to the custom overworld sprite data table. Will be $FFFFFF if no custom sprites are being used."},{"address":"$0EF600","length":"1536 bytes. Ends at $0EFBFF.","beginsAt":980480,"endsAt":982015,"type":"24-bit Pointer","descriptio":"Used by LM for a pointer table to each level's custom palette.\n\nIf a level's pointer is $000000, that means it has no custom palette and the data should be interpreted from the level header instead."},{"address":"$0EFD50","length":"24 bytes. Ends at $0EFD67.","beginsAt":982352,"endsAt":982375,"type":"Table","descriptio":"Used by Lunar Magic. This is a table of eight 24-bit pointers to the BG Map16 data in ascending order, where each pointer corresponds to a set of 0x10 pages. If a pointer is $000000, then that set of BG Map16 pages is currently unused."},{"address":"$0FF0A0","length":"160 bytes. Ends at $0FF13F.","beginsAt":1044640,"endsAt":1044799,"type":"Hex Edit","descriptio":"Not actually \"used\" for anything, but Lunar Magic writes the following string here:\n\nCode\nLunar Magic Version X.XX Public \n©YYYY FuSoYa, Defender of Relm h\nttp://fusoya.eludevisibility.org\n                                \nI am Naaall, and I love fiiiish!\n\nwhere X.XX is the version number and YYYY is the publication year of the LM version used."},{"address":"$0FF600","length":"384 bytes. Ends at $0FF77F.","beginsAt":1046016,"endsAt":1046399,"type":"24-bit Pointer","descriptio":"Used by Lunar Magic for a table of 24-bit pointers to ExGFX80-FF (pointers for 100-FFF can be found at $read3($0FF937)). A pointer of 000000 indicates the file isn't inserted."},{"address":"$0FF7F0","length":"67 bytes. Ends at $0FF832.","beginsAt":1046512,"endsAt":1046578,"type":"Jump (JML/JSL)","descriptio":"Used by Lunar Magic as a routine to handle processing ExGFX files during level load.\nA table of every level's ExGFX files can be found at read3($0FF7FF). Each level receives 32 bytes, with two bytes per ExGFX file; some additional data is also stored in the high byte of certain files. More information can be found here."},{"address":"$0FF900","length":"110 bytes. Ends at $0FF96D.","beginsAt":1046784,"endsAt":1046893,"type":"Jump (JML/JSL)","descriptio":"Used by Lunar Magic as a routine to decompress a 4bpp GFX file to a specified location in RAM. To use it, load the 16-bit GFX file number into A and 24-bit destination RAM address in $00.\nNote that it won't work on GFX32/33."}]